cscope 15 $HOME/programs/ser2net-2.10.0 -q 0000000948 0000148368
	@buffer.c

20 
	~<uni°d.h
>

21 
	~<î∫o.h
>

22 
	~<°rög.h
>

23 
	~"buf„r.h
"

24 
	~"devio.h
"

27 
	$lbuf„r_wrôe
(
devio
 *
io
, 
fd
, 
sbuf
 *
buf
, *
bu„º
)

29 
ssize_t
 
wrôe_cou¡
;

30 
towrôe1
;

31 
towrôe2
 = 0;

33 i‡(
buf
->
pos
 + buf->
cursize
 > buf->
maxsize
) {

34 
towrôe1
 = 
buf
->
maxsize
 - buf->
pos
;

35 
towrôe2
 = 
buf
->
cursize
 - 
towrôe1
;

37 
towrôe1
 = 
buf
->
cursize
;

39 i‡(
towrôe1
 > 0) {

40 i‡(
io
)

41 
wrôe_cou¡
 = 
io
->
f
->
	`wrôe
(io, 
buf
->bu‡+ buf->
pos
, 
towrôe1
);

43 
wrôe_cou¡
 = 
	`wrôe
(
fd
, 
buf
->bu‡+ buf->
pos
, 
towrôe1
);

44 i‡(
wrôe_cou¡
 == -1) {

45 i‡(
î∫o
 =
EINTR
) {

48 } i‡(
î∫o
 =
EAGAIN
) {

52 *
bu„º
 = 
î∫o
;

56 
buf
->
pos
 +
wrôe_cou¡
;

57 
buf
->
cursize
 -
wrôe_cou¡
;

60 i‡(
towrôe2
 > 0) {

62 
buf
->
pos
 = 0;

63 i‡(
io
)

64 
wrôe_cou¡
 = 
io
->
f
->
	`wrôe
(io, 
buf
->bu‡+ buf->
pos
, 
towrôe2
);

66 
wrôe_cou¡
 = 
	`wrôe
(
fd
, 
buf
->bu‡+ buf->
pos
, 
towrôe2
);

67 i‡(
wrôe_cou¡
 == -1) {

68 i‡(
î∫o
 =
EINTR
) {

71 } i‡(
î∫o
 =
EAGAIN
) {

75 *
bu„º
 = 
î∫o
;

79 
buf
->
pos
 +
wrôe_cou¡
;

80 
buf
->
cursize
 -
wrôe_cou¡
;

84 
	}
}

87 
	$buf„r_wrôe
(
fd
, 
sbuf
 *
buf
, *
bu„º
)

89  
	`lbuf„r_wrôe
(
NULL
, 
fd
, 
buf
, 
bu„º
);

90 
	}
}

93 
	$buf„r_io_wrôe
(
devio
 *
io
, 
sbuf
 *
buf
, *
bu„º
)

95  
	`lbuf„r_wrôe
(
io
, 0, 
buf
, 
bu„º
);

96 
	}
}

99 
	$buf„r_ouçut
(
sbuf
 *
buf
, *
d©a
, 
Àn
)

101 
íd
;

103 i‡(
	`buf„r_À·
(
buf
Ë< 
Àn
)

106 
íd
 = 
buf
->
pos
 + buf->
cursize
;

107 i‡(
íd
 > 
buf
->
maxsize
)

108 
íd
 -
buf
->
maxsize
;

109 i‡(
íd
 + 
Àn
 > 
buf
->
maxsize
) {

110 
avaûíd
 = 
buf
->
maxsize
 - 
íd
;

111 
	`mem˝y
(
buf
->bu‡+ 
íd
, 
d©a
, 
avaûíd
);

112 
buf
->
cursize
 +
avaûíd
;

113 
íd
 = 0;

114 
Àn
 -
avaûíd
;

115 
d©a
 +
avaûíd
;

117 
	`mem˝y
(
buf
->bu‡+ 
íd
, 
d©a
, 
Àn
);

118 
buf
->
cursize
 +
Àn
;

120 
	}
}

123 
	$buf„r_outch¨
(
sbuf
 *
buf
, 
d©a
)

125 
íd
;

127 i‡(
	`buf„r_À·
(
buf
) < 1)

130 
íd
 = 
buf
->
pos
 + buf->
cursize
;

131 i‡(
íd
 >
buf
->
maxsize
)

132 
íd
 -
buf
->
maxsize
;

133 
buf
->buf[
íd
] = 
d©a
;

134 
buf
->
cursize
 += 1;

136 
	}
}

139 
	$buf„r_öô
(
sbuf
 *
buf
, *
d©a
, 
d©asize
)

141 
buf
->bu‡
d©a
;

142 
buf
->
maxsize
 = 
d©asize
;

143 
buf
->
cursize
 = 0;

144 
buf
->
pos
 = 0;

145 
	}
}

	@buffer.h

20 #i‚de‡
_SER2NET_BUFFER_H


21 
	#_SER2NET_BUFFER_H


	)

23 
	gdevio
;

25 
	ssbuf
 {

26 *
	mbuf
;

27 
	mmaxsize
;

28 
	mcursize
;

29 
	mpos
;

32 
buf„r_io_wrôe
(
devio
 *
io
, 
sbuf
 *
buf
, *
bu„º
);

34 
buf„r_wrôe
(
fd
, 
sbuf
 *
buf
, *
bu„º
);

36 
buf„r_ouçut
(
sbuf
 *
buf
, *
d©a
, 
Àn
);

38 
buf„r_outch¨
(
sbuf
 *
buf
, 
d©a
);

40 
buf„r_öô
(
sbuf
 *
buf
, *
d©a
, 
d©Æí
);

42 
	#buf„r_À·
(
buf
Ë((buf)->
maxsize
 - (buf)->
cursize
)

	)

44 
	#buf„r_cursize
(
buf
Ë((buf)->
cursize
)

	)

46 
	#buf„r_ª£t
(
buf
) \

48 (
buf
)->
cursize
 = 0; \

49 (
buf
)->
pos
 = 0; \

50 } 0)

	)

	@controller.c

20 
	~<sys/time.h
>

21 
	~<°dlib.h
>

22 
	~<°dio.h
>

23 
	~<uni°d.h
>

24 
	~<°rög.h
>

25 
	~<f˙é.h
>

26 
	~<√töë/ö.h
>

27 
	~<î∫o.h
>

28 
	~<sy¶og.h
>

30 
	~"£r2√t.h
"

31 
	~"c⁄åﬁÀr.h
"

32 
	~"£À˘‹.h
"

33 
	~"d©ax„r.h
"

34 
	~"utûs.h
"

35 
	~"ã ë.h
"

38 #ifde‡
HAVE_TCPD_H


39 
	~<t˝d.h
>

40 
	gÆlow_£vîôy
 = 
LOG_INFO
;

41 
	gdíy_£vîôy
 = 
LOG_WARNING
;

42 *
	g¥og«me
 = "ser2net-control";

47 
addröfo
 *
	g˙ål_ai
;

48 *
	gac˚±fds
;

49 
	gƒ_ac˚±fds
;

51 
	gmax_c⁄åﬁÀr_p‹ts
 = 4;

53 
	gnum_c⁄åﬁÀr_p‹ts
 = 0;

56 
	#INBUF_SIZE
 255

	)

58 *
	g¥om±
 = "-> ";

61 
	sc⁄åﬁÀr_öfo
 {

62 
	mt˝fd
;

65 
sockaddr_°‹age
 
	mªmŸe
;

68 
	möbuf
[
INBUF_SIZE
+1];

69 
	möbuf_cou¡
;

72 *
	moutbuf
;

74 
	moutbufsize
;

76 
	moutbuf_pos
;

78 
	moutbuf_cou¡
;

82 *
	mm⁄ô‹_p‹t_id
;

87 
c⁄åﬁÀr_öfo
 *
	m√xt
;

91 
ã ë_d©a_t
 
	mä_d©a
;

92 } 
	tc⁄åﬁÀr_öfo_t
;

95 
c⁄åﬁÀr_öfo_t
 *
	gc⁄åﬁÀrs
 = 
NULL
;

98 
	gã ë_öô_£q
[] = {

99 
TN_IAC
, 
TN_WILL
, 
TN_OPT_SUPPRESS_GO_AHEAD
,

100 
TN_IAC
, 
TN_WILL
, 
TN_OPT_ECHO
,

101 
TN_IAC
, 
TN_DONT
, 
TN_OPT_ECHO
,

104 
ã ë_cmd
 
	gã ë_cmds
[] =

107 { 
TN_OPT_SUPPRESS_GO_AHEAD
, 0, 1, 1, 0, },

108 { 
TN_OPT_ECHO
, 0, 1, 1, 1, },

109 { 
TN_OPT_BINARY_TRANSMISSION
, 1, 1, 0, 1, },

116 
	$shutdown_c⁄åﬁÀr
(
c⁄åﬁÀr_öfo_t
 *
˙ér
)

118 
c⁄åﬁÀr_öfo_t
 *
¥ev
;

119 
c⁄åﬁÀr_öfo_t
 *
cuº
;

121 i‡(
˙ér
->
m⁄ô‹_p‹t_id
 !
NULL
) {

122 
	`d©a_m⁄ô‹_°›
(
˙ér
, c¡Ã->
m⁄ô‹_p‹t_id
);

123 
˙ér
->
m⁄ô‹_p‹t_id
 = 
NULL
;

126 
	`£l_˛ór_fd_h™dÀrs
(
£r2√t_£l
, 
˙ér
->
t˝fd
);

127 
	`˛o£
(
˙ér
->
t˝fd
);

128 i‡(
˙ér
->
outbuf
 !
NULL
) {

129 
	`‰ì
(
˙ér
->
outbuf
);

131 
˙ér
->
outbuf
 = 
NULL
;

134 
¥ev
 = 
NULL
;

135 
cuº
 = 
c⁄åﬁÀrs
;

136 
cuº
 !
NULL
) {

137 i‡(
˙ér
 =
cuº
) {

138 i‡(
¥ev
 =
NULL
) {

139 
c⁄åﬁÀrs
 = c⁄åﬁÀrs->
√xt
;

141 
¥ev
->
√xt
 = 
cuº
->next;

143 
num_c⁄åﬁÀr_p‹ts
--;

147 
¥ev
 = 
cuº
;

148 
cuº
 = cuº->
√xt
;

151 
	`‰ì
(
˙ér
);

152 
	}
}

158 
	$c⁄åﬁÀr_ouçut
(
c⁄åﬁÀr_öfo
 *
˙ér
,

159 c⁄° *
d©a
,

160 
cou¡
)

162 i‡(
˙ér
->
outbuf
 !
NULL
) {

164 
√w_size
 = 
˙ér
->
outbuf_cou¡
 + 
cou¡
;

166 i‡(
√w_size
 <
˙ér
->
outbufsize
) {

169 
i
;

171 i‡(
˙ér
->
outbuf_pos
 > 0) {

172 
i
=0; i<
˙ér
->
outbuf_cou¡
; i++) {

173 
˙ér
->
outbuf
[
i
] = c¡Ã->outbuf[˙ér->
outbuf_pos
 + i];

176 
	`mem˝y
(&(
˙ér
->
outbuf
[˙ér->
outbuf_cou¡
]), 
d©a
, 
cou¡
);

179 *
√wbuf
;

182 
√w_size
 = ((new_size / 1024) * 1024) + 1024;

183 
√wbuf
 = 
	`mÆloc
(
√w_size
);

185 i‡(
√wbuf
 =
NULL
) {

190 
˙ér
->
outbufsize
 = 
√w_size
;

193 
	`mem˝y
(
√wbuf
,

194 &(
˙ér
->
outbuf
[˙ér->
outbuf_pos
]),

195 
˙ér
->
outbuf_cou¡
);

196 
	`mem˝y
(
√wbuf
+
˙ér
->
outbuf_cou¡
, 
d©a
, 
cou¡
);

197 
	`‰ì
(
˙ér
->
outbuf
);

198 
˙ér
->
outbuf
 = 
√wbuf
;

200 
˙ér
->
outbuf_pos
 = 0;

201 
˙ér
->
outbuf_cou¡
 +
cou¡
;

204 *
√wbuf
;

205 
√w_size
 = ((
cou¡
 / 1024) * 1024) + 1024;

207 
√wbuf
 = 
	`mÆloc
(
√w_size
);

208 i‡(
√wbuf
 =
NULL
) {

213 
˙ér
->
outbufsize
 = 
√w_size
;

215 
	`mem˝y
(
√wbuf
, 
d©a
, 
cou¡
);

216 
˙ér
->
outbuf
 = 
√wbuf
;

217 
˙ér
->
outbuf_pos
 = 0;

218 
˙ér
->
outbuf_cou¡
 = 
cou¡
;

219 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

220 
SEL_FD_HANDLER_DISABLED
);

221 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

222 
SEL_FD_HANDLER_ENABLED
);

224 
	}
}

227 
	$c⁄åﬁÀr_vouçutf
(
c⁄åﬁÀr_öfo
 *
˙ér
, c⁄° *
°r
, 
va_li°
 
≠
)

229 
buf„r
[1024];

230 
rv
;

232 
rv
 = 
	`v¢¥ötf
(
buf„r
, (buf„r), 
°r
, 
≠
);

233 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
buf„r
, 
rv
);

234  
rv
;

235 
	}
}

238 
	$c⁄åﬁÀr_ouçutf
(
c⁄åﬁÀr_öfo
 *
˙ér
, c⁄° *
°r
, ...)

240 
va_li°
 
≠
;

241 
rv
;

243 
	`va_°¨t
(
≠
, 
°r
);

244 
rv
 = 
	`c⁄åﬁÀr_vouçutf
(
˙ér
, 
°r
, 
≠
);

245 
	`va_íd
(
≠
);

246  
rv
;

247 
	}
}

251 
	$c⁄åﬁÀr_wrôe
(
c⁄åﬁÀr_öfo
 *
˙ér
, c⁄° *
d©a
, 
cou¡
)

253 
	`wrôe_ign‹e_Áû
(
˙ér
->
t˝fd
, 
d©a
, 
cou¡
);

254 
	}
}

257 
	$ã ë_ouçut_ªady
(*
cb_d©a
)

259 
c⁄åﬁÀr_öfo
 *
˙ér
 = 
cb_d©a
;

261 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

262 
SEL_FD_HANDLER_DISABLED
);

263 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

264 
SEL_FD_HANDLER_ENABLED
);

265 
	}
}

269 
	$ã ë_cmd_h™dÀr
(*
cb_d©a
, 
cmd
)

272 
	}
}

274 *
	ghñp_°r
 =

317 
	$¥o˚ss_öput_löe
(
c⁄åﬁÀr_öfo_t
 *
˙ér
)

319 *
°πok_d©a
;

320 *
tok
;

321 *
°r
;

323 
tok
 = 
	`°πok_r
((*Ë
˙ér
->
öbuf
, " \t", &
°πok_d©a
);

324 i‡(
tok
 =
NULL
) {

326 } i‡(
	`°rcmp
(
tok
, "exit") == 0) {

327 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

329 } i‡(
	`°rcmp
(
tok
, "quit") == 0) {

330 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

332 } i‡(
	`°rcmp
(
tok
, "help") == 0) {

333 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
hñp_°r
, 
	`°æí
(help_str));

334 } i‡(
	`°rcmp
(
tok
, "version") == 0) {

335 
°r
 = "ser2net version ";

336 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
°r
, 
	`°æí
(str));

337 
°r
 = 
VERSION
;

338 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
°r
, 
	`°æí
(str));

339 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

340 } i‡(
	`°rcmp
(
tok
, "showport") == 0) {

341 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

342 
	`showp‹ts
(
˙ér
, 
tok
);

343 } i‡(
	`°rcmp
(
tok
, "showshortport") == 0) {

344 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

345 
	`showsh‹ç‹ts
(
˙ér
, 
tok
);

346 } i‡(
	`°rcmp
(
tok
, "monitor") == 0) {

347 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

348 i‡(
tok
 =
NULL
) {

349 *
îr
 = "No monitorÅype given\n\r";

350 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

351 
out
;

353 i‡(
	`°rcmp
(
tok
, "stop") == 0) {

354 i‡(
˙ér
->
m⁄ô‹_p‹t_id
 !
NULL
) {

355 
	`d©a_m⁄ô‹_°›
(
˙ér
, c¡Ã->
m⁄ô‹_p‹t_id
);

356 
˙ér
->
m⁄ô‹_p‹t_id
 = 
NULL
;

359 i‡(
˙ér
->
m⁄ô‹_p‹t_id
 !
NULL
) {

360 *
îr
 = "Already monitoringáÖort\n\r";

361 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

362 
out
;

365 
°r
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

366 i‡(
°r
 =
NULL
) {

367 *
îr
 = "NoÅcpÖort given\n\r";

368 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

369 
out
;

371 
˙ér
->
m⁄ô‹_p‹t_id
 = 
	`d©a_m⁄ô‹_°¨t
(˙ér, 
tok
, 
°r
);

373 } i‡(
	`°rcmp
(
tok
, "disconnect") == 0) {

374 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

375 i‡(
tok
 =
NULL
) {

376 *
îr
 = "NoÖort given\n\r";

377 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

378 
out
;

380 
	`disc⁄√˘_p‹t
(
˙ér
, 
tok
);

381 } i‡(
	`°rcmp
(
tok
, "setporttimeout") == 0) {

382 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

383 i‡(
tok
 =
NULL
) {

384 *
îr
 = "NoÖort given\n\r";

385 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

386 
out
;

388 
°r
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

389 i‡(
°r
 =
NULL
) {

390 *
îr
 = "NoÅimeout given\n\r";

391 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

392 
out
;

394 
	`£ç‹âimeout
(
˙ér
, 
tok
, 
°r
);

395 } i‡(
	`°rcmp
(
tok
, "setportenable") == 0) {

396 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

397 i‡(
tok
 =
NULL
) {

398 *
îr
 = "NoÖort given\n\r";

399 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

400 
out
;

402 
°r
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

403 i‡(
°r
 =
NULL
) {

404 *
îr
 = "NoÅimeout given\n\r";

405 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

406 
out
;

408 
	`£ç‹ã«bÀ
(
˙ér
, 
tok
, 
°r
);

409 } i‡(
	`°rcmp
(
tok
, "setportconfig") == 0) {

410 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

411 i‡(
tok
 =
NULL
) {

412 *
îr
 = "NoÖort given\n\r";

413 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

414 
out
;

417 
°r
 = 
	`°πok_r
(
NULL
, "", &
°πok_d©a
);

418 i‡(
°r
 =
NULL
) {

419 *
îr
 = "No device config\n\r";

420 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

421 
out
;

423 
	`£ç‹tdevcfg
(
˙ér
, 
tok
, 
°r
);

424 } i‡(
	`°rcmp
(
tok
, "setportcontrol") == 0) {

425 
tok
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

426 i‡(
tok
 =
NULL
) {

427 *
îr
 = "NoÖort given\n\r";

428 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

429 
out
;

432 
°r
 = 
	`°πok_r
(
NULL
, "", &
°πok_d©a
);

433 i‡(
°r
 =
NULL
) {

434 *
îr
 = "No device controls\n\r";

435 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

436 
out
;

438 
	`£ç‹tc⁄åﬁ
(
˙ér
, 
tok
, 
°r
);

440 *
îr
 = "Unknown command: ";

441 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

442 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
tok
, 
	`°æí
(tok));

443 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

446 
out
:

447 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
¥om±
, 
	`°æí
(prompt));

448 
	}
}

455 
	$ªmove_ch¨s
(
c⁄åﬁÀr_öfo_t
 *
˙ér
, 
pos
, 
cou¡
) {

456 
j
;

458 
j
=
pos
-
cou¡
+1; j<(
˙ér
->
öbuf_cou¡
-count); j++) {

459 
˙ér
->
öbuf
[
j
] = c¡Ã->öbuf[j+
cou¡
];

461 
˙ér
->
öbuf_cou¡
 -
cou¡
;

462 
pos
 -
cou¡
;

464  
pos
;

465 
	}
}

469 
	$h™dÀ_t˝_fd_ªad
(
fd
, *
d©a
)

471 
c⁄åﬁÀr_öfo_t
 *
˙ér
 = (c⁄åﬁÀr_öfo_à*Ë
d©a
;

472 
ªad_cou¡
;

473 
ªad_°¨t
;

474 
i
;

476 i‡(
˙ér
->
öbuf_cou¡
 =
INBUF_SIZE
) {

477 *
îr
 = "InputÜineÅooÜong\n\r";

478 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

479 
˙ér
->
öbuf_cou¡
 = 0;

483 
ªad_cou¡
 = 
	`ªad
(
fd
,

484 &(
˙ér
->
öbuf
[˙ér->
öbuf_cou¡
]),

485 
INBUF_SIZE
 - 
˙ér
->
öbuf_cou¡
);

487 i‡(
ªad_cou¡
 < 0) {

488 i‡(
î∫o
 =
EINTR
) {

493 i‡(
î∫o
 =
EAGAIN
) {

499 
	`sy¶og
(
LOG_ERR
, "readÉrror for controllerÖort: %m");

500 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

502 } i‡(
ªad_cou¡
 == 0) {

504 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

507 
ªad_°¨t
 = 
˙ér
->
öbuf_cou¡
;

508 
ªad_cou¡
 = 
¥o˚ss_ã ë_d©a


509 (
˙ér
->
öbuf
+
ªad_°¨t
, 
ªad_cou¡
, &˙ér->
ä_d©a
);

510 i‡(
˙ér
->
ä_d©a
.
îr‹
) {

511 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

514 
˙ér
->
öbuf_cou¡
 +
ªad_cou¡
;

516 
i
=
ªad_°¨t
; i<
˙ér
->
öbuf_cou¡
; i++) {

517 i‡(
˙ér
->
öbuf
[
i
] == 0x0) {

519 
i
 = 
	`ªmove_ch¨s
(
˙ér
, i, 1);

520 } i‡(
˙ér
->
öbuf
[
i
] == '\n') {

522 
i
 = 
	`ªmove_ch¨s
(
˙ér
, i, 1);

523 } i‡((
˙ér
->
öbuf
[
i
] == '\b') || (cntlr->inbuf[i] == 0x7f)) {

526 i‡(
i
 == 0) {

528 
i
 = 
	`ªmove_ch¨s
(
˙ér
, i, 1);

530 
i
 = 
	`ªmove_ch¨s
(
˙ér
, i, 2);

531 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\b \b", 3);

533 } i‡(
˙ér
->
öbuf
[
i
] == '\r') {

535 
j
;

537 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

539 
˙ér
->
öbuf
[
i
] ='\0';

540 
	`¥o˚ss_öput_löe
(
˙ér
);

545 
i
++;

546 
˙ér
->
öbuf_cou¡
 -
i
;

547 
j
=0; j<
˙ér
->
öbuf_cou¡
; 
i
++,j++) {

548 
˙ér
->
öbuf
[
j
] = c¡Ã->öbuf[
i
];

550 
i
 = -1;

553 
	`c⁄åﬁÀr_ouçut
(
˙ér
, (*Ë&(˙ér->
öbuf
[
i
]), 1);

556 
	}
}

562 
	$h™dÀ_t˝_fd_wrôe
(
fd
, *
d©a
)

564 
c⁄åﬁÀr_öfo_t
 *
˙ér
 = (c⁄åﬁÀr_öfo_à*Ë
d©a
;

565 
ã ë_d©a_t
 *
td
 = &
˙ér
->
ä_d©a
;

566 
wrôe_cou¡
;

568 i‡(
	`buf„r_cursize
(&
td
->
out_ã ë_cmd
) > 0) {

569 
bu„º
, 
ªãº
;

571 
ªãº
 = 
	`buf„r_wrôe
(
˙ér
->
t˝fd
, &
td
->
out_ã ë_cmd
, &
bu„º
);

572 i‡(
ªãº
 == -1) {

573 i‡(
bu„º
 =
EPIPE
) {

574 
out_Áû
;

577 
	`sy¶og
(
LOG_ERR
, "TheÅcp write for controller hadÉrror: %m");

578 
out_Áû
;

581 i‡(
	`buf„r_cursize
(&
td
->
out_ã ë_cmd
) > 0)

583 
out
;

586 
wrôe_cou¡
 = 
	`wrôe
(
˙ér
->
t˝fd
,

587 &(
˙ér
->
outbuf
[˙ér->
outbuf_pos
]),

588 
˙ér
->
outbuf_cou¡
);

589 i‡(
wrôe_cou¡
 == -1) {

590 i‡(
î∫o
 =
EAGAIN
) {

592 } i‡(
î∫o
 =
EPIPE
) {

593 
out_Áû
;

596 
	`sy¶og
(
LOG_ERR
, "TheÅcp write for controller hadÉrror: %m");

597 
out_Áû
;

600 
˙ér
->
outbuf_cou¡
 -
wrôe_cou¡
;

601 i‡(
˙ér
->
outbuf_cou¡
 != 0) {

603 
˙ér
->
outbuf_pos
 +
wrôe_cou¡
;

606 
	`‰ì
(
˙ér
->
outbuf
);

607 
˙ér
->
outbuf
 = 
NULL
;

608 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

609 
SEL_FD_HANDLER_ENABLED
);

610 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
˙ér
->
t˝fd
,

611 
SEL_FD_HANDLER_DISABLED
);

614 
out
:

617 
out_Áû
:

618 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

619 
	}
}

623 
	$h™dÀ_t˝_fd_ex˚±
(
fd
, *
d©a
)

625 
c⁄åﬁÀr_öfo_t
 *
˙ér
 = (c⁄åﬁÀr_öfo_à*Ë
d©a
;

627 
	`sy¶og
(
LOG_ERR
, "SelectÉxception for controllerÖort");

628 
	`shutdown_c⁄åﬁÀr
(
˙ér
);

629 
	}
}

633 
	$h™dÀ_ac˚±_p‹t_ªad
(
fd
, *
d©a
)

635 
c⁄åﬁÀr_öfo_t
 *
˙ér
;

636 
sockÀn_t
 
Àn
;

637 *
îr
 = 
NULL
;

638 
›tvÆ
;

640 i‡(
num_c⁄åﬁÀr_p‹ts
 >
max_c⁄åﬁÀr_p‹ts
) {

641 
îr
 = "Too many controllerÖorts\n\r";

642 
îrout2
;

644 
˙ér
 = 
	`mÆloc
((*cntlr));

645 i‡(
˙ér
 =
NULL
) {

646 
îr
 = "CouldÇotállocate controllerÖort\n\r";

647 
îrout2
;

653 
Àn
 = (
˙ér
->
ªmŸe
);

654 
˙ér
->
t˝fd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *Ë&(˙ér->
ªmŸe
), &
Àn
);

655 i‡(
˙ér
->
t˝fd
 == -1) {

656 
	`sy¶og
(
LOG_ERR
, "CouldÇotáccept on controllerÖort: %m");

657 
îrout
;

660 #ifde‡
HAVE_TCPD_H


662 
ªque°_öfo
 
ªq
;

664 
	`ªque°_öô
(&
ªq
, 
RQ_DAEMON
, 
¥og«me
, 
RQ_FILE
, 
˙ér
->
t˝fd
, 
NULL
);

665 
	`‰omho°
(&
ªq
);

667 i‡(!
	`ho°s_ac˚ss
(&
ªq
)) {

668 *
îr
 = "Access denied\n\r";

669 
	`wrôe
(
˙ér
->
t˝fd
, 
îr
, 
	`°æí
(err));

670 
	`˛o£
(
˙ér
->
t˝fd
);

671 
îrout
;

676 i‡(
	`f˙é
(
˙ér
->
t˝fd
, 
F_SETFL
, 
O_NONBLOCK
) == -1) {

677 
	`˛o£
(
˙ér
->
t˝fd
);

678 
	`sy¶og
(
LOG_ERR
, "CouldÇot fcntlÅheÅcpÖort: %m");

679 
îrout
;

682 
›tvÆ
 = 1;

683 i‡(
	`£tsock›t
(
˙ér
->
t˝fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*)&
›tvÆ
,

684 (
›tvÆ
)) == -1) {

685 
	`˛o£
(
˙ér
->
t˝fd
);

686 
	`sy¶og
(
LOG_ERR
, "CouldÇotÉnable SO_KEEPALIVE onÅheÅcpÖort: %m");

687 
îrout
;

690 
˙ér
->
öbuf_cou¡
 = 0;

691 
˙ér
->
outbuf
 = 
NULL
;

692 
˙ér
->
m⁄ô‹_p‹t_id
 = 
NULL
;

694 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
,

695 
˙ér
->
t˝fd
,

696 
˙ér
,

697 
h™dÀ_t˝_fd_ªad
,

698 
h™dÀ_t˝_fd_wrôe
,

699 
h™dÀ_t˝_fd_ex˚±
);

701 
˙ér
->
√xt
 = 
c⁄åﬁÀrs
;

702 
c⁄åﬁÀrs
 = 
˙ér
;

708 
	`ã ë_öô
(&
˙ér
->
ä_d©a
, c¡Ã, 
ã ë_ouçut_ªady
,

709 
ã ë_cmd_h™dÀr
,

710 
ã ë_cmds
,

711 
ã ë_öô_£q
, (telnet_init_seq));

712 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
¥om±
, 
	`°æí
(prompt));

714 
num_c⁄åﬁÀr_p‹ts
++;

718 
îrout
:

719 
	`‰ì
(
˙ér
);

722 
îrout2
:

725 
sockaddr_°‹age
 
dummy_sockaddr
;

726 
sockÀn_t
 
Àn
 = (
dummy_sockaddr
);

727 
√w_fd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *Ë&
dummy_sockaddr
, &
Àn
);

729 i‡(
√w_fd
 != -1) {

730 
	`wrôe_ign‹e_Áû
(
√w_fd
, 
îr
, 
	`°æí
(err));

731 
	`˛o£
(
√w_fd
);

734 
	}
}

738 
	$c⁄åﬁÀr_öô
(*
c⁄åﬁÀr_p‹t
)

740 
rv
;

742 
rv
 = 
	`sˇn_t˝_p‹t
(
c⁄åﬁÀr_p‹t
, &
˙ål_ai
);

743 i‡(
rv
) {

744 i‡(
rv
 =
EINVAL
)

745  
CONTROLLER_INVALID_TCP_SPEC
;

746 i‡(
rv
 =
ENOMEM
)

747  
CONTROLLER_OUT_OF_MEMORY
;

752 
ac˚±fds
 = 
	`›í_sockë
(
˙ål_ai
, 
h™dÀ_ac˚±_p‹t_ªad
, 
NULL
,

753 &
ƒ_ac˚±fds
);

754 i‡(
ac˚±fds
 =
NULL
) {

755 
	`sy¶og
(
LOG_ERR
, "UnableÅo create TCP socket: %m");

756  
CONTROLLER_CANT_OPEN_PORT
;

760 
	}
}

763 
	$c⁄åﬁÀr_shutdown
()

765 
i
;

766 i‡(
ac˚±fds
 !
NULL
)

768 
i
 = 0; i < 
ƒ_ac˚±fds
; i++) {

769 
	`£l_˛ór_fd_h™dÀrs
(
£r2√t_£l
, 
ac˚±fds
[
i
]);

770 
	`˛o£
(
ac˚±fds
[
i
]);

772 
ac˚±fds
 = 
NULL
;

773 
	}
}

	@controller.h

20 #i‚de‡
CONTROLLER


21 
	#CONTROLLER


	)

23 
	~<°d¨g.h
>

25 
	#CONTROLLER_INVALID_TCP_SPEC
 -1

	)

26 
	#CONTROLLER_CANT_OPEN_PORT
 -2

	)

27 
	#CONTROLLER_OUT_OF_MEMORY
 -3

	)

29 
c⁄åﬁÀr_öô
(*
c⁄åﬁÀr_p‹t
);

32 
c⁄åﬁÀr_shutdown
();

34 
	gc⁄åﬁÀr_öfo
;

38 
c⁄åﬁÀr_ouçut
(
c⁄åﬁÀr_öfo
 *
˙ér
,

39 c⁄° *
d©a
, 
cou¡
);

43 
c⁄åﬁÀr_ouçutf
(
c⁄åﬁÀr_öfo
 *
˙ér
,

44 c⁄° *
°r
, ...);

48 
c⁄åﬁÀr_vouçutf
(
c⁄åﬁÀr_öfo
 *
˙ér
,

49 c⁄° *
°r
, 
va_li°
 
≠
);

52 
c⁄åﬁÀr_wrôe
(
c⁄åﬁÀr_öfo
 *
˙ér
,

53 c⁄° *
d©a
, 
cou¡
);

	@dataxfer.c

24 
	~<sys/time.h
>

25 
	~<¨∑/öë.h
>

26 
	~<°dlib.h
>

27 
	~<uni°d.h
>

28 
	~<°dio.h
>

29 
	~<√töë/ö.h
>

30 
	~<√töë/t˝.h
>

31 
	~<î∫o.h
>

32 
	~<sy¶og.h
>

33 
	~<°rög.h
>

34 
	~<˘y≥.h
>

35 
	~<time.h
>

36 
	~<f˙é.h
>

38 
	~"£r2√t.h
"

39 
	~"d©ax„r.h
"

40 
	~"£À˘‹.h
"

41 
	~"utûs.h
"

42 
	~"ã ë.h
"

43 
	~"devio.h
"

44 
	~"buf„r.h
"

46 
	#SERIAL
 "ãrm"

	)

47 
	#NET
 "t˝ "

	)

50 #ifde‡
HAVE_TCPD_H


51 
	~<t˝d.h
>

52 *
	g¥og«me
 = "ser2net";

56 
	#PORT_UNCONNECTED
 0

	)

58 
	#PORT_WAITING_INPUT
 1

	)

60 
	#PORT_WAITING_OUTPUT_CLEAR
 2

	)

62 
	#PORT_CLOSING
 3

	)

64 *
	g°©e_°r
[] = { "unconnected", "waiting input", "waiting output",

67 
	#PORT_DISABLED
 0

	)

68 
	#PORT_RAW
 1

	)

69 
	#PORT_RAWLP
 2

	)

71 
	#PORT_TELNET
 3

	)

72 *
	gíabÀd_°r
[] = { "off", "raw", "rawlp", "telnet" };

74 
	#PORT_BUFSIZE
 64

	)

76 
	såa˚_öfo_s


78 
	mhexdump
;

79 
	mtime°amp
;

80 *
	mfûíame
;

81 
	mfd
;

82 } 
	tåa˚_öfo_t
;

84 
	sp‹t_öfo


86 
	míabÀd
;

101 
	mtimeout
;

105 
	mtimeout_À·
;

109 
£l_timî_t
 *
	mtimî
;

115 *
	mp‹äame
;

116 
	mis_°dio
;

117 
addröfo
 *
	mai
;

118 *
	mac˚±fds
;

121 
	mƒ_ac˚±fds
;

122 
	mt˝fd
;

125 
sockaddr_°‹age
 
	mªmŸe
;

127 
	mt˝_byãs_ª˚ived
;

129 
	mt˝_byãs_£¡
;

131 
sbuf
 *
	mb™√r
;

133 
	mdev_byãs_ª˚ived
;

135 
	mdev_byãs_£¡
;

141 
	mt˝_to_dev_°©e
;

144 
sbuf
 
	mt˝_to_dev
;

147 
	mt˝_to_devbuf
[
PORT_BUFSIZE
];

150 
c⁄åﬁÀr_öfo
 *
	mt˝_m⁄ô‹
;

153 
sbuf
 *
	mdev°r
;

157 
	mdev_to_t˝_°©e
;

160 
sbuf
 
	mdev_to_t˝
;

163 
	mdev_to_t˝buf
[
PORT_BUFSIZE
];

166 
c⁄åﬁÀr_öfo
 *
	mdev_m⁄ô‹
;

170 
p‹t_öfo
 *
	m√xt
;

173 
	mc⁄fig_num
;

177 
p‹t_öfo
 *
	m√w_c⁄fig
;

184 
ã ë_d©a_t
 
	mä_d©a
;

187 
	mis_2217
;

190 
	mlöe°©e_mask
;

191 
	mmodem°©e_mask
;

192 
	mœ°_modem°©e
;

195 
	mÆlow_2217
;

198 
	mkickﬁdu£r_mode
;

201 *
	mb™√r°r
;

204 *
	msig«tuª°r
;

207 *
	m›í°r
;

210 *
	m˛o£°r
;

216 
åa˚_öfo_t
 
	måa˚_ªad
;

217 
åa˚_öfo_t
 
	måa˚_wrôe
;

218 
åa˚_öfo_t
 
	måa˚_bŸh
;

224 
åa˚_öfo_t
 *
	må
;

225 
åa˚_öfo_t
 *
	mtw
;

226 
åa˚_öfo_t
 *
	mtb
;

228 
devio
 
	mio
;

230 #ifde‡
USE_RS485_FEATURE


231 
£rül_rs485
 *
	mrs485c⁄f
;

233 } 
	tp‹t_öfo_t
;

235 
p‹t_öfo_t
 *
	gp‹ts
 = 
NULL
;

237 
shutdown_p‹t
(
p‹t_öfo_t
 *
p‹t
, *
ªas⁄
);

238 
föish_shutdown_p‹t
(
p‹t_öfo_t
 *
p‹t
);

241 
	gã ë_öô_£q
[] = {

242 
TN_IAC
, 
TN_WILL
, 
TN_OPT_SUPPRESS_GO_AHEAD
,

243 
TN_IAC
, 
TN_WILL
, 
TN_OPT_ECHO
,

244 
TN_IAC
, 
TN_DONT
, 
TN_OPT_ECHO
,

245 
TN_IAC
, 
TN_DO
, 
TN_OPT_BINARY_TRANSMISSION
,

249 
com_p‹t_h™dÀr
(*
cb_d©a
, *
›ti⁄
, 
Àn
);

250 
com_p‹t_wûl
(*
cb_d©a
);

252 
ã ë_cmd
 
	gã ë_cmds
[] =

255 { 
TN_OPT_SUPPRESS_GO_AHEAD
, 0, 1, 1, 0, },

256 { 
TN_OPT_ECHO
, 0, 1, 1, 1, },

257 { 
TN_OPT_BINARY_TRANSMISSION
, 1, 1, 0, 1, },

258 { 
TN_OPT_COM_PORT
, 1, 0, 0, 0, 0, 0,

259 
com_p‹t_h™dÀr
, 
com_p‹t_wûl
 },

268 
	$˙ål_absout
(
absout
 *
o
, c⁄° *
°r
, ...)

270 
va_li°
 
≠
;

271 
rv
;

273 
	`va_°¨t
(
≠
, 
°r
);

274 
rv
 = 
	`c⁄åﬁÀr_vouçutf
(
o
->
d©a
, 
°r
, 
≠
);

275 
	`va_íd
(
≠
);

276  
rv
;

277 
	}
}

284 
	$˙ål_ab£ºout
(
absout
 *
o
, c⁄° *
°r
, ...)

286 
va_li°
 
≠
;

287 
rv
;

289 
	`va_°¨t
(
≠
, 
°r
);

290 
rv
 = 
	`c⁄åﬁÀr_vouçutf
(
o
->
d©a
, 
°r
, 
≠
);

291 
	`va_íd
(
≠
);

292 
rv
 +
	`c⁄åﬁÀr_ouçutf
(
o
->
d©a
, "\r\n");

293  
rv
;

294 
	}
}

297 
	$öô_p‹t_d©a
(
p‹t_öfo_t
 *
p‹t
)

299 
p‹t
->
íabÀd
 = 
PORT_DISABLED
;

300 
p‹t
->
t˝fd
 = -1;

302 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_UNCONNECTED
;

303 
	`buf„r_öô
(&
p‹t
->
t˝_to_dev
,Ö‹t->
t˝_to_devbuf
,

304 (
p‹t
->
t˝_to_devbuf
));

305 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_UNCONNECTED
;

306 
	`buf„r_öô
(&
p‹t
->
dev_to_t˝
,Ö‹t->
dev_to_t˝buf
,

307 (
p‹t
->
dev_to_t˝buf
));

308 
p‹t
->
åa˚_ªad
.
fd
 = -1;

309 
p‹t
->
åa˚_wrôe
.
fd
 = -1;

310 
p‹t
->
åa˚_bŸh
.
fd
 = -1;

311 #ifde‡
USE_RS485_FEATURE


312 
p‹t
->
rs485c⁄f
 = 
NULL
;

314 
	}
}

317 
	$ª£t_timî
(
p‹t_öfo_t
 *
p‹t
)

319 
p‹t
->
timeout_À·
 =Ö‹t->
timeout
;

320 
	}
}

324 
	$time°amp
(
åa˚_öfo_t
 *
t
, *
buf
, 
size
)

326 
time_t
 
ªsu…
;

327 i‡(!
t
->
time°amp
)

329 
ªsu…
 = 
	`time
(
NULL
);

330  
	`°r·ime
(
buf
, 
size
, "%Y/%m/%d %H:%M:%S ", 
	`loˇ…ime
(&
ªsu…
));

331 
	}
}

334 
	$åa˚_wrôe_íd
(*
out
, 
size
, *
°¨t
, 
cﬁ
)

336 
pos
=0, 
w
;

338 
	`°∫ˇt
(
out
, " |", 
size
-
pos
);

339 
pos
 += 2;

340 
w
 = 0; w < 
cﬁ
; w++) {

341 
pos
 +
	`¢¥ötf
(
out
 +Öos, 
size
 -Öos, "%c",

342 
	`i•röt
(
°¨t
[
w
]) ? start[w] : '.');

344 
	`°∫ˇt
(
out
+
pos
, "|\n", 
size
-pos);

345 
pos
 += 2;

346  
pos
;

347 
	}
}

350 
	$åa˚_wrôe
(
p‹t_öfo_t
 *
p‹t
, 
åa˚_öfo_t
 *
t
, *
buf
,

351 
buf_Àn
, *
¥efix
)

353 
rv
 = 0, 
w
, 
cﬁ
 = 0, 
pos
, 
fûe
 = 
t
->
fd
;

354 
q
;

355 
out
[1024];

356 *
°¨t
;

358 i‡(
buf_Àn
 == 0)

361 i‡(!
t
->
hexdump
)

362  
	`wrôe
(
fûe
, 
buf
, 
buf_Àn
);

364 
pos
 = 
	`time°amp
(
t
, 
out
, (out));

365 
pos
 +
	`¢¥ötf
(
out
 +Öos, (outË-Öos, "%†", 
¥efix
);

367 
°¨t
 = 
buf
;

368 
q
 = 0; q < 
buf_Àn
; q++) {

369 
pos
 +
	`¢¥ötf
(
out
 +Öos, (outË-Öos, "%02x ", 
buf
[
q
]);

370 
cﬁ
++;

371 i‡(
cﬁ
 >= 8) {

372 
pos
 +
	`åa˚_wrôe_íd
(
out
 +Öos, (outË-Öos, 
°¨t
, 
cﬁ
);

373 
rv
 = 
	`wrôe
(
fûe
, 
out
, 
	`°æí
(out));

374 i‡(
rv
 < 0)

375  
rv
;

376 
pos
 = 
	`time°amp
(
t
, 
out
, (out));

377 
pos
 +
	`¢¥ötf
(
out
 +Öos, (outË-Öos, "%†", 
¥efix
);

378 
cﬁ
 = 0;

379 
°¨t
 = 
buf
 + 
q
 + 1;

382 i‡(
cﬁ
 > 0) {

383 
w
 = 8; w > 
cﬁ
; w--) {

384 
	`°∫ˇt
(
out
 + 
pos
, " ", (out) -Öos);

385 
pos
 += 3;

387 
pos
 +
	`åa˚_wrôe_íd
(
out
 +Öos, (outË-Öos, 
°¨t
, 
cﬁ
);

388 
rv
 = 
	`wrôe
(
fûe
, 
out
, 
	`°æí
(out));

389 i‡(
rv
 < 0)

390  
rv
;

392  
buf_Àn
;

393 
	}
}

396 
	$do_åa˚
(
p‹t_öfo_t
 *
p‹t
, 
åa˚_öfo_t
 *
t
, *
buf
,

397 
buf_Àn
, *
¥efix
)

399 
rv
;

401 
buf_Àn
 > 0) {

402 
ªåy_wrôe
:

403 
rv
 = 
	`åa˚_wrôe
(
p‹t
, 
t
, 
buf
, 
buf_Àn
, 
¥efix
);

404 i‡(
rv
 == -1) {

405 
îrbuf
[128];

406 
îr
 = 
î∫o
;

408 i‡(
îr
 =
EINTR
)

409 
ªåy_wrôe
;

413 i‡(
	`°ªº‹_r
(
îr
, 
îrbuf
, (errbuf)) == -1)

414 
	`sy¶og
(
LOG_ERR
, "Unable writeÅoÅrace file onÖort %s: %d",

415 
p‹t
->
p‹äame
, 
îr
);

417 
	`sy¶og
(
LOG_ERR
, "UnableÅo writeÅoÅrace file onÖort %s: %s",

418 
p‹t
->
p‹äame
, 
îrbuf
);

420 
	`˛o£
(
t
->
fd
);

421 
t
->
fd
 = -1;

426 
buf_Àn
 -
rv
;

427 
buf
 +
rv
;

429 
	}
}

432 
	$hf_out
(
p‹t_öfo_t
 *
p‹t
, *
buf
, 
Àn
)

434 i‡(
p‹t
->
å
 &&Ö‹t->å->
time°amp
)

435 
	`wrôe_ign‹e_Áû
(
p‹t
->
å
->
fd
, 
buf
, 
Àn
);

438 i‡(
p‹t
->
tw
 &&Ö‹t->tw !p‹t->
å
 &&Ö‹t->tw->
time°amp
)

439 
	`wrôe_ign‹e_Áû
(
p‹t
->
tw
->
fd
, 
buf
, 
Àn
);

442 i‡(
p‹t
->
tb
 &&Ö‹t->tb !p‹t->
å
 &&Ö‹t->tb !p‹t->
tw


443 && 
p‹t
->
tb
->
time°amp
)

444 
	`wrôe_ign‹e_Áû
(
p‹t
->
tb
->
fd
, 
buf
, 
Àn
);

445 
	}
}

448 
	$hódî_åa˚
(
p‹t_öfo_t
 *
p‹t
)

450 
buf
[1024];

451 
åa˚_öfo_t
 
å
 = { 1, 1, 
NULL
, -1 };

452 
Àn
 = 0;

453 
p‹t°r
[
NI_MAXSERV
];

455 
Àn
 +
	`time°amp
(&
å
, 
buf
, (buf));

456 
Àn
 +
	`¢¥ötf
(
buf
 +Üen, (buf) -Üen, "OPEN (");

457 
	`gë«meöfo
((
sockaddr
 *Ë&(
p‹t
->
ªmŸe
), (port->remote),

458 
buf
 + 
Àn
, (buf) -Üen,

459 
p‹t°r
, ’‹t°r), 
NI_NUMERICHOST
);

460 
Àn
 +
	`°æí
(
buf
 +Üen);

461 i‡(((
buf
Ë- 
Àn
) > 2) {

462 
buf
[
Àn
] = ':';

463 
Àn
++;

465 
	`°∫˝y
(
buf
 + 
Àn
, 
p‹t°r
, (buf) -Üen);

466 
Àn
 +
	`°æí
(
buf
 +Üen);

467 
Àn
 +
	`¢¥ötf
(
buf
 +Üen, (buf) -Üen, ")\n");

469 
	`hf_out
(
p‹t
, 
buf
, 
Àn
);

470 
	}
}

473 
	$foŸî_åa˚
(
p‹t_öfo_t
 *
p‹t
, *
ªas⁄
)

475 
buf
[1024];

476 
åa˚_öfo_t
 
å
 = { 1, 1, 
NULL
, -1 };

477 
Àn
 = 0;

479 
Àn
 +
	`time°amp
(&
å
, 
buf
, (buf));

480 
Àn
 +
	`¢¥ötf
(
buf
 +Üí, (buf), "CLOSE (%s)\n", 
ªas⁄
);

482 
	`hf_out
(
p‹t
, 
buf
, 
Àn
);

483 
	}
}

489 
	$h™dÀ_dev_fd_ªad
(
devio
 *
io
)

491 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
io
->
u£r_d©a
;

492 
cou¡
;

494 
p‹t
->
dev_to_t˝
.
pos
 = 0;

495 i‡(
p‹t
->
íabÀd
 =
PORT_TELNET
) {

497 
cou¡
 = 
p‹t
->
io
.
f
->
	`ªad
(&p‹t->io,Ö‹t->
dev_to_t˝
.
buf
,

498 
p‹t
->
t˝_to_dev
.
maxsize
/2);

500 
cou¡
 = 
p‹t
->
io
.
f
->
	`ªad
(&p‹t->io,Ö‹t->
dev_to_t˝
.
buf
,

501 
p‹t
->
t˝_to_dev
.
maxsize
);

504 i‡(
p‹t
->
dev_m⁄ô‹
 !
NULL
) {

505 
	`c⁄åﬁÀr_wrôe
(
p‹t
->
dev_m⁄ô‹
,

506 (*Ë
p‹t
->
dev_to_t˝
.
buf
,

507 
cou¡
);

510 i‡(
cou¡
 < 0) {

511 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

517 
	`sy¶og
(
LOG_ERR
, "devÑódÉº‹ f‹Ö‹à%s: %m", 
p‹t
->
p‹äame
);

518 
	`shutdown_p‹t
(
p‹t
, "devÑeadÉrror");

520 } i‡(
cou¡
 == 0) {

522 
	`shutdown_p‹t
(
p‹t
, "closedÖort");

526 i‡(
p‹t
->
å
)

528 
	`do_åa˚
(
p‹t
,Ö‹t->
å
,Ö‹t->
dev_to_t˝
.
buf
, 
cou¡
, 
SERIAL
);

529 i‡(
p‹t
->
tb
)

531 
	`do_åa˚
(
p‹t
,Ö‹t->
tb
,Ö‹t->
dev_to_t˝
.
buf
, 
cou¡
, 
SERIAL
);

533 
p‹t
->
dev_byãs_ª˚ived
 +
cou¡
;

535 i‡(
p‹t
->
íabÀd
 =
PORT_TELNET
) {

536 
i
, 
j
;

540 
i
=0; i<
cou¡
; i++) {

541 i‡(
p‹t
->
dev_to_t˝
.
buf
[
i
] == 255) {

542 
j
=
cou¡
; j>
i
; j--)

543 
p‹t
->
dev_to_t˝
.
buf
[
j
+1] =Öort->dev_to_tcp.buf[j];

544 
cou¡
++;

545 
i
++;

546 
p‹t
->
dev_to_t˝
.
buf
[
i
] = 255;

551 
p‹t
->
dev_to_t˝
.
cursize
 = 
cou¡
;

553 
ªåy_wrôe
:

554 
cou¡
 = 
	`wrôe
(
p‹t
->
t˝fd
,Ö‹t->
dev_to_t˝
.
buf
,Ö‹t->dev_to_t˝.
cursize
);

555 i‡(
cou¡
 == -1) {

556 i‡(
î∫o
 =
EINTR
) {

558 
ªåy_wrôe
;

561 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

564 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 0);

565 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

566 
SEL_FD_HANDLER_ENABLED
);

567 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_WAITING_OUTPUT_CLEAR
;

568 } i‡(
î∫o
 =
EPIPE
) {

569 
	`shutdown_p‹t
(
p‹t
, "EPIPE");

573 
	`sy¶og
(
LOG_ERR
, "TheÅcp write forÖort %s hadÉrror: %m",

574 
p‹t
->
p‹äame
);

575 
	`shutdown_p‹t
(
p‹t
, "tcp writeÉrror");

579 
p‹t
->
t˝_byãs_£¡
 +
cou¡
;

580 
p‹t
->
dev_to_t˝
.
cursize
 -
cou¡
;

581 i‡(
p‹t
->
dev_to_t˝
.
cursize
 != 0) {

584 
p‹t
->
dev_to_t˝
.
pos
 = 
cou¡
;

585 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 0);

586 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

587 
SEL_FD_HANDLER_ENABLED
);

588 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_WAITING_OUTPUT_CLEAR
;

592 
	`ª£t_timî
(
p‹t
);

593 
	}
}

599 
	$dev_fd_wrôe
(
p‹t_öfo_t
 *
p‹t
, 
sbuf
 *
buf
)

601 
ªãº
, 
bu„º
;

603 
ªãº
 = 
	`buf„r_io_wrôe
(&
p‹t
->
io
, 
buf
, &
bu„º
);

604 i‡(
ªãº
 == -1) {

605 
	`sy¶og
(
LOG_ERR
, "The dev write forÖort %s hadÉrror: %m",

606 
p‹t
->
p‹äame
);

607 
	`shutdown_p‹t
(
p‹t
, "dev writeÉrror");

611 i‡(
	`buf„r_cursize
(
buf
) == 0) {

613 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

614 
SEL_FD_HANDLER_ENABLED
);

615 
p‹t
->
io
.
f
->
	`wrôe_h™dÀr_íabÀ
(&port->io, 0);

616 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_WAITING_INPUT
;

619 
	`ª£t_timî
(
p‹t
);

620 
	}
}

623 
	$h™dÀ_dev_fd_wrôe
(
devio
 *
io
)

625 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
io
->
u£r_d©a
;

627 
	`dev_fd_wrôe
(
p‹t
, &p‹t->
t˝_to_dev
);

628 
	}
}

632 
	$h™dÀ_dev_fd_ex˚±
(
devio
 *
io
)

634 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
io
->
u£r_d©a
;

636 
	`sy¶og
(
LOG_ERR
, "SelectÉxception on device forÖort %s",

637 
p‹t
->
p‹äame
);

638 
	`shutdown_p‹t
(
p‹t
, "fdÉxception");

639 
	}
}

643 
	$h™dÀ_dev_fd_dev°r_wrôe
(
devio
 *
io
)

645 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
io
->
u£r_d©a
;

647 
	`dev_fd_wrôe
(
p‹t
,Ö‹t->
dev°r
);

648 i‡(
	`buf„r_cursize
(
p‹t
->
dev°r
) == 0) {

649 
p‹t
->
io
.
ªad_h™dÀr
 = 
h™dÀ_dev_fd_ªad
;

650 
p‹t
->
io
.
wrôe_h™dÀr
 = 
h™dÀ_dev_fd_wrôe
;

651 
p‹t
->
io
.
ex˚±_h™dÀr
 = 
h™dÀ_dev_fd_ex˚±
;

652 
	`‰ì
(
p‹t
->
dev°r
->
buf
);

653 
	`‰ì
(
p‹t
->
dev°r
);

654 
p‹t
->
dev°r
 = 
NULL
;

656 
	}
}

660 
	$h™dÀ_dev_fd_˛o£_wrôe
(
devio
 *
io
)

662 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
io
->
u£r_d©a
;

663 
ªãº
, 
bu„º
;

665 
ªãº
 = 
	`buf„r_io_wrôe
(&
p‹t
->
io
,Ö‹t->
dev°r
, &
bu„º
);

666 i‡(
ªãº
 == -1) {

667 
	`sy¶og
(
LOG_ERR
, "The dev write forÖort %s hadÉrror: %m",

668 
p‹t
->
p‹äame
);

669 
˛o£ô
;

672 i‡(
	`buf„r_cursize
(
p‹t
->
dev°r
) != 0)

675 
˛o£ô
:

676 
	`föish_shutdown_p‹t
(
p‹t
);

677 
	}
}

681 
	$h™dÀ_t˝_fd_ªad
(
fd
, *
d©a
)

683 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

684 
cou¡
;

686 
p‹t
->
t˝_to_dev
.
pos
 = 0;

687 
cou¡
 = 
	`ªad
(
fd
, 
p‹t
->
t˝_to_dev
.
buf
,Ö‹t->t˝_to_dev.
maxsize
);

688 i‡(
cou¡
 < 0) {

689 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

695 
	`sy¶og
(
LOG_ERR
, "ªadÉº‹ f‹Ö‹à%s: %m", 
p‹t
->
p‹äame
);

696 
	`shutdown_p‹t
(
p‹t
, "tcpÑeadÉrror");

698 } i‡(
cou¡
 == 0) {

700 
	`shutdown_p‹t
(
p‹t
, "tcpÑead close");

703 
p‹t
->
t˝_to_dev
.
cursize
 = 
cou¡
;

705 
p‹t
->
t˝_byãs_ª˚ived
 +
cou¡
;

707 i‡(
p‹t
->
íabÀd
 =
PORT_TELNET
) {

708 
p‹t
->
t˝_to_dev
.
cursize
 = 
	`¥o˚ss_ã ë_d©a
’‹t->t˝_to_dev.
buf
,

709 
cou¡
,

710 &
p‹t
->
ä_d©a
);

711 i‡(
p‹t
->
ä_d©a
.
îr‹
) {

712 
	`shutdown_p‹t
(
p‹t
, "telnet outputÉrror");

715 i‡(
p‹t
->
t˝_to_dev
.
cursize
 == 0) {

723 i‡(
p‹t
->
t˝_m⁄ô‹
 !
NULL
) {

724 
	`c⁄åﬁÀr_wrôe
(
p‹t
->
t˝_m⁄ô‹
,

725 (*Ë
p‹t
->
t˝_to_dev
.
buf
,

726 
p‹t
->
t˝_to_dev
.
cursize
);

729 i‡(
p‹t
->
tw
)

731 
	`do_åa˚
(
p‹t
,Ö‹t->
tw
,

732 
p‹t
->
t˝_to_dev
.
buf
,Ö‹t->t˝_to_dev.
cursize
, 
NET
);

733 i‡(
p‹t
->
tb
)

735 
	`do_åa˚
(
p‹t
,Ö‹t->
tb
,

736 
p‹t
->
t˝_to_dev
.
buf
,Ö‹t->t˝_to_dev.
cursize
, 
NET
);

738 
ªåy_wrôe
:

739 
cou¡
 = 
p‹t
->
io
.
f
->
	`wrôe
(&p‹t->io,Ö‹t->
t˝_to_dev
.
buf
,

740 
p‹t
->
t˝_to_dev
.
cursize
);

741 i‡(
cou¡
 == -1) {

742 i‡(
î∫o
 =
EINTR
) {

744 
ªåy_wrôe
;

747 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EWOULDBLOCK
) {

750 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

751 
SEL_FD_HANDLER_DISABLED
);

752 
p‹t
->
io
.
f
->
	`wrôe_h™dÀr_íabÀ
(&port->io, 1);

753 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_WAITING_OUTPUT_CLEAR
;

756 
	`sy¶og
(
LOG_ERR
, "The dev write forÖort %s hadÉrror: %m",

757 
p‹t
->
p‹äame
);

758 
	`shutdown_p‹t
(
p‹t
, "dev writeÉrror");

762 
p‹t
->
dev_byãs_£¡
 +
cou¡
;

763 
p‹t
->
t˝_to_dev
.
cursize
 -
cou¡
;

764 i‡(
p‹t
->
t˝_to_dev
.
cursize
 != 0) {

767 
p‹t
->
t˝_to_dev
.
pos
 = 
cou¡
;

768 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

769 
SEL_FD_HANDLER_DISABLED
);

770 
p‹t
->
io
.
f
->
	`wrôe_h™dÀr_íabÀ
(&port->io, 1);

771 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_WAITING_OUTPUT_CLEAR
;

775 
	`ª£t_timî
(
p‹t
);

776 
	}
}

782 
	$t˝_fd_wrôe
(
p‹t_öfo_t
 *
p‹t
, 
sbuf
 *
buf
)

784 
ã ë_d©a_t
 *
td
 = &
p‹t
->
ä_d©a
;

785 
bu„º
, 
ªãº
;

787 i‡(
	`buf„r_cursize
(&
td
->
out_ã ë_cmd
) > 0) {

788 
ªãº
 = 
	`buf„r_wrôe
(
p‹t
->
t˝fd
, &
td
->
out_ã ë_cmd
, &
bu„º
);

789 i‡(
ªãº
 == -1) {

790 i‡(
bu„º
 =
EPIPE
) {

791 
	`shutdown_p‹t
(
p‹t
, "EPIPE");

794 
	`sy¶og
(
LOG_ERR
, "TheÅcp write forÖort %s hadÉrror: %m",

795 
p‹t
->
p‹äame
);

796 
	`shutdown_p‹t
(
p‹t
, "tcp writeÉrror");

800 i‡(
	`buf„r_cursize
(&
td
->
out_ã ë_cmd
) > 0) {

807 
ªãº
 = 
	`buf„r_wrôe
(
p‹t
->
t˝fd
, 
buf
, &
bu„º
);

808 i‡(
ªãº
 == -1) {

809 i‡(
bu„º
 =
EPIPE
) {

810 
	`shutdown_p‹t
(
p‹t
, "EPIPE");

813 
	`sy¶og
(
LOG_ERR
, "TheÅcp write forÖort %s hadÉrror: %m",

814 
p‹t
->
p‹äame
);

815 
	`shutdown_p‹t
(
p‹t
, "tcp writeÉrror");

819 i‡(
	`buf„r_cursize
(
buf
) == 0) {

821 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 1);

822 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

823 
SEL_FD_HANDLER_DISABLED
);

824 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_WAITING_INPUT
;

827 
	`ª£t_timî
(
p‹t
);

828 
	}
}

834 
	$h™dÀ_t˝_fd_wrôe
(
fd
, *
d©a
)

836 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

837 
	`t˝_fd_wrôe
(
p‹t
, &p‹t->
dev_to_t˝
);

838 
	}
}

842 
	$h™dÀ_t˝_fd_ex˚±
(
fd
, *
d©a
)

844 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

846 
	`sy¶og
(
LOG_ERR
, "Sñe˘Éx˚±i⁄ o¿p‹à%s", 
p‹t
->
p‹äame
);

847 
	`shutdown_p‹t
(
p‹t
, "tcp fdÉxception");

848 
	}
}

851 
	$h™dÀ_t˝_fd_b™√r_wrôe
(
fd
, *
d©a
)

853 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

855 
	`t˝_fd_wrôe
(
p‹t
,Ö‹t->
b™√r
);

856 i‡(
	`buf„r_cursize
(
p‹t
->
b™√r
) == 0) {

857 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
,

858 
p‹t
->
t˝fd
,

859 
p‹t
,

860 
h™dÀ_t˝_fd_ªad
,

861 
h™dÀ_t˝_fd_wrôe
,

862 
h™dÀ_t˝_fd_ex˚±
);

863 
	`‰ì
(
p‹t
->
b™√r
->
buf
);

864 
	`‰ì
(
p‹t
->
b™√r
);

865 
p‹t
->
b™√r
 = 
NULL
;

867 
	}
}

870 
	$ã ë_cmd_h™dÀr
(*
cb_d©a
, 
cmd
)

872 
p‹t_öfo_t
 *
p‹t
 = 
cb_d©a
;

874 i‡(
cmd
 =
TN_BREAK
)

875 
p‹t
->
io
.
f
->
	`£nd_bªak
(&port->io);

876 
	}
}

880 
	$ã ë_ouçut_ªady
(*
cb_d©a
)

882 
p‹t_öfo_t
 *
p‹t
 = 
cb_d©a
;

883 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 0);

884 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

885 
SEL_FD_HANDLER_ENABLED
);

886 
	}
}

890 
	$is_devi˚_Æªady_öu£
(
p‹t_öfo_t
 *
check_p‹t
)

892 
p‹t_öfo_t
 *
p‹t
 = 
p‹ts
;

894 
p‹t
 !
NULL
) {

895 i‡(
p‹t
 !
check_p‹t
) {

896 i‡((
	`°rcmp
(
p‹t
->
io
.
dev«me
, 
check_p‹t
->io.devname) == 0)

897 && (
p‹t
->
t˝_to_dev_°©e
 !
PORT_UNCONNECTED
))

902 
p‹t
 =Ö‹t->
√xt
;

906 
	}
}

909 
	$‰om_hex_digô
(
c
)

911 i‡((
c
 >= '0') && (c <= '9'))

912  
c
 - '0';

913 i‡((
c
 >= 'A') && (c <= 'F'))

914  
c
 - 'A' + 10;

915 i‡((
c
 >= 'a') && (c <= 'f'))

916  
c
 - 'a' + 10;

918 
	}
}

920 *
	gsm⁄ths
[] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun",

922 *
	gsdays
[] = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };

925 
¥o˚ss_°r
(
p‹t_öfo_t
 *
p‹t
, 
tm
 *
time
, 
timevÆ
 *
tv
,

926 c⁄° *
s
,

927 (*
›
)(*
d©a
, 
vÆ
), *d©a, 
isfûíame
)

929 
vÆ
;

930 *
t
;

932 *
s
) {

933 i‡(*
s
 == '\\') {

934 
s
++;

935 i‡(!*
s
)

937 *
s
) {

939 'a': 
	`›
(
d©a
, 7); ;

940 'b': 
	`›
(
d©a
, 8); ;

941 'f': 
	`›
(
d©a
, 12); ;

942 'n': 
	`›
(
d©a
, 10); ;

943 'r': 
	`›
(
d©a
, 13); ;

944 't': 
	`›
(
d©a
, 9); ;

945 'v': 
	`›
(
d©a
, 11); ;

946 '\\': 
	`›
(
d©a
, '\\'); ;

947 '?': 
	`›
(
d©a
, '?'); ;

948 '\'': 
	`›
(
d©a
, '\''); ;

949 '"': 
	`›
(
d©a
, '"'); ;

953 i‡(
isfûíame
) {

955 
t
 = 
	`°ºchr
(
p‹t
->
io
.
dev«me
, '/');

956 i‡(
t
)

957 
t
++;

959 
t
 = 
p‹t
->
io
.
dev«me
;

961 
t
 = 
p‹t
->
io
.
dev«me
;

962 ; *
t
;Å++)

963 
	`›
(
d©a
, *
t
);

968 
t
=
p‹t
->
p‹äame
; *t;Å++)

969 
	`›
(
d©a
, *
t
);

973 i‡(
isfûíame
)

974 
£c⁄ds
;

975 
£Ω¨ms
;

978 
£Ω¨ms
:

981 
°r
[15];

982 
p‹t
->
io
.
f
->
	`£Ω¨m_to_°r
(&p‹t->io, 
°r
, (str));

983 
t
=
°r
; *t;Å++)

984 
	`›
(
d©a
, *
t
);

991 
vÆ
 = (*
s
) - '0';

992 
s
++;

993 i‡(!*
s
) {

994 
	`›
(
d©a
, 
vÆ
);

997 i‡(!
	`isdigô
(*
s
)) {

1000 
vÆ
 = (vÆ * 8Ë+ (*
s
) - '0';

1001 
s
++;

1002 i‡(!*
s
) {

1003 
	`›
(
d©a
, 
vÆ
);

1006 i‡(!
	`isdigô
(*
s
)) {

1009 
vÆ
 = (vÆ * 8Ë+ (*
s
) - '0';

1014 
s
++;

1015 i‡(!*
s
)

1017 i‡(!
	`isxdigô
(*
s
))

1019 
vÆ
 = 
	`‰om_hex_digô
(*
s
);

1020 
s
++;

1021 i‡(!*
s
) {

1022 
	`›
(
d©a
, 
vÆ
);

1025 i‡(!
	`isdigô
(*
s
))

1027 
vÆ
 = (vÆ * 16Ë+ 
	`‰om_hex_digô
(*
s
);

1033 
d
[10], *
dp
;

1034 
	`¢¥ötf
(
d
, (d), "%d", 
time
->
tm_yór
 + 1900);

1035 
dp
 = 
d
; *dp; dp++)

1036 
	`›
(
d©a
, *
dp
);

1043 
d
[10], *
dp
;

1044 
	`¢¥ötf
(
d
, (d), "%d", 
time
->
tm_yday
);

1045 
dp
 = 
d
; *dp; dp++)

1046 
	`›
(
d©a
, *
dp
);

1052 i‡(
time
->
tm_m⁄
 >= 12)

1053 
	`›
(
d©a
, '?');

1055 *
dp
 = 
sm⁄ths
[
time
->
tm_m⁄
];

1056 ; *
dp
; dp++)

1057 
	`›
(
d©a
, *
dp
);

1064 
d
[10], *
dp
;

1065 
	`¢¥ötf
(
d
, (d), "%d", 
time
->
tm_m⁄
);

1066 
dp
 = 
d
; *dp; dp++)

1067 
	`›
(
d©a
, *
dp
);

1073 i‡(
time
->
tm_wday
 >= 7)

1074 
	`›
(
d©a
, '?');

1076 *
dp
 = 
sdays
[
time
->
tm_wday
];

1077 ; *
dp
; dp++)

1078 
	`›
(
d©a
, *
dp
);

1085 
d
[10], *
dp
;

1086 
	`¢¥ötf
(
d
, (d), "%d", 
time
->
tm_mday
);

1087 
dp
 = 
d
; *dp; dp++)

1088 
	`›
(
d©a
, *
dp
);

1095 
d
[10], *
dp
;

1096 
	`¢¥ötf
(
d
, (d), "%2.2d", 
time
->
tm_hour
);

1097 
dp
 = 
d
; *dp; dp++)

1098 
	`›
(
d©a
, *
dp
);

1105 
d
[10], *
dp
;

1106 
v
;

1108 
v
 = 
time
->
tm_hour
;

1109 i‡(
v
 == 0)

1110 
v
 = 12;

1111 i‡(
v
 > 12)

1112 
v
 -= 12;

1113 
	`¢¥ötf
(
d
, (d), "%2.2d", 
v
);

1114 
dp
 = 
d
; *dp; dp++)

1115 
	`›
(
d©a
, *
dp
);

1122 
d
[10], *
dp
;

1123 
	`¢¥ötf
(
d
, (d), "%2.2d", 
time
->
tm_mö
);

1124 
dp
 = 
d
; *dp; dp++)

1125 
	`›
(
d©a
, *
dp
);

1131 
£c⁄ds
:

1133 
d
[10], *
dp
;

1134 
	`¢¥ötf
(
d
, (d), "%2.2d", 
time
->
tm_£c
);

1135 
dp
 = 
d
; *dp; dp++)

1136 
	`›
(
d©a
, *
dp
);

1142 i‡(
time
->
tm_hour
 < 12) {

1143 
	`›
(
d©a
, 'a');

1145 
	`›
(
d©a
, 'p');

1147 
	`›
(
d©a
, 'm');

1152 i‡(
time
->
tm_hour
 < 12) {

1153 
	`›
(
d©a
, 'A');

1155 
	`›
(
d©a
, 'P');

1157 
	`›
(
d©a
, 'M');

1163 
d
[10], *
dp
;

1164 
	`¢¥ötf
(
d
, (d), "%2.2d:%2.2d:%2.2d",

1165 
time
->
tm_hour
,Åime->
tm_mö
,Åime->
tm_£c
);

1166 
dp
 = 
d
; *dp; dp++)

1167 
	`›
(
d©a
, *
dp
);

1174 
d
[30], *
dp
;

1175 
	`¢¥ötf
(
d
, (d), "%ld", 
tv
->
tv_£c
);

1176 
dp
 = 
d
; *dp; dp++)

1177 
	`›
(
d©a
, *
dp
);

1184 
d
[10], *
dp
;

1185 
	`¢¥ötf
(
d
, (d), "%6.6ld", 
tv
->
tv_u£c
);

1186 
dp
 = 
d
; *dp; dp++)

1187 
	`›
(
d©a
, *
dp
);

1194 
ù
[100], *
ùp
;

1195 i‡(!
	`gë«meöfo
((
sockaddr
 *Ë&(
p‹t
->
ªmŸe
),

1196 (
p‹t
->
ªmŸe
),

1197 
ù
, (ù), 
NULL
, 0, 
NI_NUMERICHOST
))

1199 
ùp
 = 
ù
; *ipp; ipp++)

1200 
	`›
(
d©a
, *
ùp
);

1205 
	`›
(
d©a
, *
s
);

1208 
	`›
(
d©a
, *
s
);

1209 
s
++;

1211 
	}
}

1214 
	$cou¡_›
(*
d©a
, 
c
)

1216 *
id©a
 = 
d©a
;

1218 (*
id©a
)++;

1219 
	}
}

1221 
	sbuf›_d©a
 {

1222 
	mpos
;

1223 *
	m°r
;

1227 
	$buf„r_›
(*
d©a
, 
c
)

1229 
buf›_d©a
 *
buf›
 = 
d©a
;

1230 
buf›
->
°r
[buf›->
pos
] = 
c
;

1231 (
buf›
->
pos
)++;

1232 
	}
}

1235 
	$¥o˚ss_°r_to_°r
(
p‹t_öfo_t
 *
p‹t
, c⁄° *
°r
, 
timevÆ
 *
tv
,

1236 *
Àƒv
, 
isfûíame
)

1238 
Àn
 = 0;

1239 
tm
 
now
;

1240 
buf›_d©a
 
buf›
;

1242 
	`loˇ…ime_r
(&
tv
->
tv_£c
, &
now
);

1243 
	`¥o˚ss_°r
(
p‹t
, &
now
, 
tv
, 
°r
, 
cou¡_›
, &
Àn
, 
isfûíame
);

1244 i‡(!
Àƒv
)

1246 
Àn
++;

1247 
buf›
.
pos
 = 0;

1248 i‡(
Àn
 == 0)

1250 
buf›
.
°r
 = 
	`mÆloc
(1);

1252 
buf›
.
°r
 = 
	`mÆloc
(
Àn
);

1253 i‡(!
buf›
.
°r
) {

1254 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹yÖro˚ssög såög: %s", 
p‹t
->
p‹äame
);

1255  
NULL
;

1257 
	`¥o˚ss_°r
(
p‹t
, &
now
, 
tv
, 
°r
, 
buf„r_›
, &
buf›
, 
isfûíame
);

1259 i‡(
Àƒv
)

1260 *
Àƒv
 = 
Àn
;

1262 
buf›
.
°r
[buf›.
pos
] = '\0';

1264  
buf›
.
°r
;

1265 
	}
}

1267 
sbuf
 *

1268 
	$¥o˚ss_°r_to_buf
(
p‹t_öfo_t
 *
p‹t
, c⁄° *
°r
)

1270 c⁄° *
b°r
;

1271 
sbuf
 *
buf
;

1272 
Àn
;

1273 
timevÆ
 
tv
;

1275 i‡(!
°r
)

1276  
NULL
;

1277 
	`gëtimeofday
(&
tv
, 
NULL
);

1279 
buf
 = 
	`mÆloc
((*buf));

1280 i‡(!
buf
) {

1281 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹yÖro˚ssög såög: %s", 
p‹t
->
p‹äame
);

1282  
NULL
;

1284 
b°r
 = 
	`¥o˚ss_°r_to_°r
(
p‹t
, 
°r
, &
tv
, &
Àn
, 0);

1285 i‡(!
b°r
) {

1286 
	`‰ì
(
buf
);

1287 
	`sy¶og
(
LOG_ERR
, "Eº‹Öro˚ssög såög: %s", 
p‹t
->
p‹äame
);

1288  
NULL
;

1290 
	`buf„r_öô
(
buf
, (*Ë
b°r
, 
Àn
);

1291 
buf
->
cursize
 = 
Àn
;

1292  
buf
;

1293 
	}
}

1296 
	$›í_åa˚_fûe
(
p‹t_öfo_t
 *
p‹t
,

1297 
åa˚_öfo_t
 *
t
,

1298 
timevÆ
 *
tv
,

1299 
åa˚_öfo_t
 **
out
)

1301 
rv
;

1302 *
åfûe
;

1304 
åfûe
 = 
	`¥o˚ss_°r_to_°r
(
p‹t
, 
t
->
fûíame
, 
tv
, 
NULL
, 1);

1305 i‡(!
åfûe
) {

1306 
	`sy¶og
(
LOG_ERR
, "U«bÀÅÿå™¶©êåa˚ fûê%s", 
t
->
fûíame
);

1307 
t
->
fd
 = -1;

1311 
rv
 = 
	`›í
(
åfûe
, 
O_WRONLY
 | 
O_CREAT
 | 
O_APPEND
, 0600);

1312 i‡(
rv
 == -1) {

1313 
îrbuf
[128];

1314 
îr
 = 
î∫o
;

1316 i‡(
	`°ªº‹_r
(
îr
, 
îrbuf
, (errbuf)) == -1)

1317 
	`sy¶og
(
LOG_ERR
, "UnableÅo openÅrace file %s: %d",

1318 
åfûe
, 
îr
);

1320 
	`sy¶og
(
LOG_ERR
, "UnableÅo openÅrace file %s: %s",

1321 
åfûe
, 
îrbuf
);

1324 
	`‰ì
(
åfûe
);

1325 
t
->
fd
 = 
rv
;

1326 *
out
 = 
t
;

1327 
	}
}

1330 
	$£tup_åa˚
(
p‹t_öfo_t
 *
p‹t
)

1332 
timevÆ
 
tv
;

1335 
	`gëtimeofday
(&
tv
, 
NULL
);

1337 
p‹t
->
tw
 = 
NULL
;

1338 i‡(
p‹t
->
åa˚_wrôe
.
fûíame
)

1339 
	`›í_åa˚_fûe
(
p‹t
, &p‹t->
åa˚_wrôe
, &
tv
, &p‹t->
tw
);

1341 
p‹t
->
å
 = 
NULL
;

1342 i‡(
p‹t
->
åa˚_ªad
.
fûíame
) {

1343 
åa˚_öfo_t
 *
≈
 = &
p‹t
->
åa˚_ªad
;

1344 i‡(
p‹t
->
tw
 && (
	`°rcmp
(
≈
->
fûíame
,Öort->tw->filename) == 0))

1345 
p‹t
->
å
 =Ö‹t->
tw
;

1347 
	`›í_åa˚_fûe
(
p‹t
, 
≈
, &
tv
, &p‹t->
å
);

1350 
p‹t
->
tb
 = 
NULL
;

1351 i‡(
p‹t
->
åa˚_bŸh
.
fûíame
) {

1352 
åa˚_öfo_t
 *
≈
 = &
p‹t
->
åa˚_bŸh
;

1353 i‡(
p‹t
->
tw
 && (
	`°rcmp
(
≈
->
fûíame
,Öort->tw->filename) == 0))

1354 
p‹t
->
tb
 =Ö‹t->
tw
;

1355 i‡(
p‹t
->
å
 && (
	`°rcmp
(
≈
->
fûíame
,Öort->tr->filename) == 0))

1356 
p‹t
->
tb
 =Ö‹t->
å
;

1358 
	`›í_åa˚_fûe
(
p‹t
, 
≈
, &
tv
, &p‹t->
tb
);

1362 
	}
}

1366 
	$£tup_t˝_p‹t
(
p‹t_öfo_t
 *
p‹t
)

1368 
›ti⁄s
;

1369 
timevÆ
 
thí
;

1370 
£l_fd_h™dÀr_t
 
t˝_wrôe_h™dÀr
;

1371 (*
dev_wrôe_h™dÀr
)(
devio
 *
io
);

1372 c⁄° *
îr°r
;

1374 i‡(
	`f˙é
(
p‹t
->
t˝fd
, 
F_SETFL
, 
O_NONBLOCK
) == -1) {

1375 
	`˛o£
(
p‹t
->
t˝fd
);

1376 
p‹t
->
t˝fd
 = -1;

1377 
	`sy¶og
(
LOG_ERR
, "CouldÇŸ f˙éÅhêt˝Ö‹à%s: %m", 
p‹t
->
p‹äame
);

1380 
›ti⁄s
 = 1;

1381 i‡(
	`£tsock›t
(
p‹t
->
t˝fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
,

1382 (*Ë&
›ti⁄s
, (options)) == -1) {

1383 
	`˛o£
(
p‹t
->
t˝fd
);

1384 
p‹t
->
t˝fd
 = -1;

1385 
	`sy¶og
(
LOG_ERR
, "CouldÇotÉnable TCP_NODELAYÅcpÖort %s: %m",

1386 
p‹t
->
p‹äame
);

1390 #ifde‡
HAVE_TCPD_H


1392 
ªque°_öfo
 
ªq
;

1394 
	`ªque°_öô
(&
ªq
, 
RQ_DAEMON
, 
¥og«me
, 
RQ_FILE
, 
p‹t
->
t˝fd
, 
NULL
);

1395 
	`‰omho°
(&
ªq
);

1397 i‡(!
	`ho°s_ac˚ss
(&
ªq
)) {

1398 *
îr
 = "Access denied\n\r";

1399 
	`wrôe
(
p‹t
->
t˝fd
, 
îr
, 
	`°æí
(err));

1400 
	`˛o£
(
p‹t
->
t˝fd
);

1401 
p‹t
->
t˝fd
 = -1;

1407 
îr°r
 = 
NULL
;

1408 i‡(
p‹t
->
io
.
f
->
	`£tup
(&p‹t->io,Ö‹t->
p‹äame
, &
îr°r
) == -1) {

1409 i‡(
îr°r
)

1410 
	`wrôe_ign‹e_Áû
(
p‹t
->
t˝fd
, 
îr°r
, 
	`°æí
(errstr));

1411 
	`˛o£
(
p‹t
->
t˝fd
);

1412 
p‹t
->
t˝fd
 = -1;

1415 
p‹t
->
is_2217
 = 0;

1417 
p‹t
->
b™√r
 = 
	`¥o˚ss_°r_to_buf
’‹t,Ö‹t->
b™√r°r
);

1418 i‡(
p‹t
->
b™√r
)

1419 
t˝_wrôe_h™dÀr
 = 
h™dÀ_t˝_fd_b™√r_wrôe
;

1421 
t˝_wrôe_h™dÀr
 = 
h™dÀ_t˝_fd_wrôe
;

1423 
p‹t
->
dev°r
 = 
	`¥o˚ss_°r_to_buf
’‹t,Ö‹t->
›í°r
);

1424 i‡(
p‹t
->
dev°r
)

1425 
dev_wrôe_h™dÀr
 = 
h™dÀ_dev_fd_dev°r_wrôe
;

1427 
dev_wrôe_h™dÀr
 = 
h™dÀ_dev_fd_wrôe
;

1429 
p‹t
->
io
.
ªad_h™dÀr
 = (p‹t->
íabÀd
 =
PORT_RAWLP


1430 ? 
NULL


1431 : 
h™dÀ_dev_fd_ªad
);

1432 
p‹t
->
io
.
wrôe_h™dÀr
 = 
dev_wrôe_h™dÀr
;

1433 
p‹t
->
io
.
ex˚±_h™dÀr
 = 
h™dÀ_dev_fd_ex˚±
;

1434 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&p‹t->io,Ö‹t->
íabÀd
 !
PORT_RAWLP
);

1435 
p‹t
->
io
.
f
->
	`ex˚±_h™dÀr_íabÀ
(&port->io, 1);

1436 i‡(
p‹t
->
dev°r
)

1437 
p‹t
->
io
.
f
->
	`wrôe_h™dÀr_íabÀ
(&port->io, 1);

1438 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_WAITING_INPUT
;

1440 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
,

1441 
p‹t
->
t˝fd
,

1442 
p‹t
,

1443 
h™dÀ_t˝_fd_ªad
,

1444 
t˝_wrôe_h™dÀr
,

1445 
h™dÀ_t˝_fd_ex˚±
);

1446 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

1447 
SEL_FD_HANDLER_ENABLED
);

1448 
	`£l_£t_fd_ex˚±_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

1449 
SEL_FD_HANDLER_ENABLED
);

1450 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_WAITING_INPUT
;

1452 i‡(
p‹t
->
íabÀd
 =
PORT_TELNET
) {

1453 
	`ã ë_öô
(&
p‹t
->
ä_d©a
,Ö‹t, 
ã ë_ouçut_ªady
,

1454 
ã ë_cmd_h™dÀr
,

1455 
ã ë_cmds
,

1456 
ã ë_öô_£q
, (telnet_init_seq));

1458 
	`buf„r_öô
(&
p‹t
->
ä_d©a
.
out_ã ë_cmd
, 
NULL
, 0);

1459 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 1);

1460 i‡(
p‹t
->
b™√r
)

1461 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
p‹t
->
t˝fd
,

1462 
SEL_FD_HANDLER_ENABLED
);

1465 
	`£tup_åa˚
(
p‹t
);

1466 
	`hódî_åa˚
(
p‹t
);

1468 
	`gëtimeofday
(&
thí
, 
NULL
);

1469 
thí
.
tv_£c
 += 1;

1470 
	`£l_°¨t_timî
(
p‹t
->
timî
, &
thí
);

1472 
	`ª£t_timî
(
p‹t
);

1474 
	}
}

1478 
	$h™dÀ_ac˚±_p‹t_ªad
(
fd
, *
d©a
)

1480 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

1481 
sockÀn_t
 
Àn
;

1482 *
îr
 = 
NULL
;

1483 
›tvÆ
;

1485 i‡(
p‹t
->
t˝_to_dev_°©e
 !
PORT_UNCONNECTED
) {

1486 i‡(
p‹t
->
kickﬁdu£r_mode
) {

1487 i‡(
p‹t
->
t˝_to_dev_°©e
 !
PORT_CLOSING
)

1488 
	`shutdown_p‹t
(
p‹t
, "kicked off,Çew user is coming\n\r");

1492 
îr
 = "Portálready in use\n\r";

1493 } i‡(
	`is_devi˚_Æªady_öu£
(
p‹t
)) {

1494 
îr
 = "Port's deviceálready in use\n\r";

1497 i‡(
îr
 !
NULL
) {

1498 
sockaddr_°‹age
 
dummy_sockaddr
;

1499 
sockÀn_t
 
Àn
 = (
dummy_sockaddr
);

1500 
√w_fd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *Ë&
dummy_sockaddr
, &
Àn
);

1502 i‡(
√w_fd
 != -1) {

1503 
	`wrôe_ign‹e_Áû
(
√w_fd
, 
îr
, 
	`°æí
(err));

1504 
	`˛o£
(
√w_fd
);

1509 
Àn
 = (
p‹t
->
ªmŸe
);

1511 
p‹t
->
t˝fd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *Ë&’‹t->
ªmŸe
), &
Àn
);

1512 i‡(
p‹t
->
t˝fd
 == -1) {

1513 
	`sy¶og
(
LOG_ERR
, "CouldÇŸác˚± o¿p‹à%s: %m", 
p‹t
->
p‹äame
);

1517 
›tvÆ
 = 1;

1518 i‡(
	`£tsock›t
(
p‹t
->
t˝fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*)&
›tvÆ
,

1519 (
›tvÆ
)) == -1) {

1520 
	`˛o£
(
p‹t
->
t˝fd
);

1521 
	`sy¶og
(
LOG_ERR
, "CouldÇotÉnable SO_KEEPALIVE onÅcpÖort %s: %m",

1522 
p‹t
->
p‹äame
);

1527 
	`£tup_t˝_p‹t
(
p‹t
);

1528 
	}
}

1532 
	$°¨tup_p‹t
(
absout
 *
eout
, 
p‹t_öfo_t
 *
p‹t
)

1534 i‡(
p‹t
->
is_°dio
) {

1535 i‡(
	`is_devi˚_Æªady_öu£
(
p‹t
)) {

1536 i‡(
eout
)

1537 
eout
->
	`out
(eout, "Port's deviceálready in use");

1540 
p‹t
->
ac˚±fds
 = 
NULL
;

1541 
p‹t
->
t˝fd
 = 0;

1542 i‡(
	`£tup_t˝_p‹t
(
p‹t
) == -1)

1548 
p‹t
->
ac˚±fds
 = 
	`›í_sockë
’‹t->
ai
, 
h™dÀ_ac˚±_p‹t_ªad
,Öort,

1549 &
p‹t
->
ƒ_ac˚±fds
);

1550 i‡(
p‹t
->
ac˚±fds
 =
NULL
) {

1551 
eout
->
	`out
(eout, "UnableÅo create TCP socket");

1556 
	}
}

1559 
	$ªdo_p‹t_h™dÀrs
(
p‹t_öfo_t
 *
p‹t
)

1561 
i
;

1563 
i
 = 0; i < 
p‹t
->
ƒ_ac˚±fds
; i++)

1564 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
, 
p‹t
->
ac˚±fds
[
i
],Öort,

1565 
h™dÀ_ac˚±_p‹t_ªad
, 
NULL
, NULL);

1566 
	}
}

1569 
	$ch™ge_p‹t_°©e
(
absout
 *
eout
, 
p‹t_öfo_t
 *
p‹t
, 
°©e
)

1571 
rv
 = 0;

1573 i‡(
p‹t
->
íabÀd
 =
°©e
)

1576 i‡(
°©e
 =
PORT_DISABLED
) {

1577 i‡(
p‹t
->
ac˚±fds
 !
NULL
) {

1578 
i
;

1580 
i
 = 0; i < 
p‹t
->
ƒ_ac˚±fds
; i++) {

1581 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
,

1582 
p‹t
->
ac˚±fds
[
i
],

1583 
SEL_FD_HANDLER_DISABLED
);

1584 
	`£l_˛ór_fd_h™dÀrs
(
£r2√t_£l
, 
p‹t
->
ac˚±fds
[
i
]);

1585 
	`˛o£
(
p‹t
->
ac˚±fds
[
i
]);

1587 
	`‰ì
(
p‹t
->
ac˚±fds
);

1588 
p‹t
->
ac˚±fds
 = 
NULL
;

1590 } i‡(
p‹t
->
íabÀd
 =
PORT_DISABLED
) {

1591 i‡(
°©e
 =
PORT_RAWLP
)

1592 
p‹t
->
io
.
ªad_dißbÀd
 = 1;

1594 
p‹t
->
io
.
ªad_dißbÀd
 = 0;

1595 
rv
 = 
	`°¨tup_p‹t
(
eout
, 
p‹t
);

1598 
p‹t
->
íabÀd
 = 
°©e
;

1600  
rv
;

1601 
	}
}

1604 
	$‰ì_p‹t
(
p‹t_öfo_t
 *
p‹t
)

1606 
	`£l_‰ì_timî
(
p‹t
->
timî
);

1607 
	`ch™ge_p‹t_°©e
(
NULL
, 
p‹t
, 
PORT_DISABLED
);

1608 i‡(
p‹t
->
io
.
f
)

1609 
p‹t
->
io
.
f
->
	`‰ì
(&port->io);

1610 i‡(
p‹t
->
åa˚_ªad
.
fûíame
)

1611 
	`‰ì
(
p‹t
->
åa˚_ªad
.
fûíame
);

1612 i‡(
p‹t
->
åa˚_wrôe
.
fûíame
)

1613 
	`‰ì
(
p‹t
->
åa˚_wrôe
.
fûíame
);

1614 i‡(
p‹t
->
åa˚_bŸh
.
fûíame
)

1615 
	`‰ì
(
p‹t
->
åa˚_bŸh
.
fûíame
);

1616 i‡(
p‹t
->
io
.
dev«me
)

1617 
	`‰ì
(
p‹t
->
io
.
dev«me
);

1618 i‡(
p‹t
->
p‹äame
)

1619 
	`‰ì
(
p‹t
->
p‹äame
);

1620 i‡(
p‹t
->
√w_c⁄fig
)

1621 
	`‰ì_p‹t
(
p‹t
->
√w_c⁄fig
);

1622 i‡(
p‹t
->
ai
)

1623 
	`‰ìaddröfo
(
p‹t
->
ai
);

1624 i‡(
p‹t
->
ac˚±fds
)

1625 
	`‰ì
(
p‹t
->
ac˚±fds
);

1626 i‡(
p‹t
->
b™√r°r
)

1627 
	`‰ì
(
p‹t
->
b™√r°r
);

1628 i‡(
p‹t
->
sig«tuª°r
)

1629 
	`‰ì
(
p‹t
->
sig«tuª°r
);

1630 i‡(
p‹t
->
›í°r
)

1631 
	`‰ì
(
p‹t
->
›í°r
);

1632 i‡(
p‹t
->
˛o£°r
)

1633 
	`‰ì
(
p‹t
->
˛o£°r
);

1634 
	`‰ì
(
p‹t
);

1635 
	}
}

1638 
	$föish_shutdown_p‹t
(
p‹t_öfo_t
 *
p‹t
)

1640 
p‹t
->
io
.
f
->
	`shutdown
(&port->io);

1641 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_UNCONNECTED
;

1642 
	`buf„r_ª£t
(&
p‹t
->
t˝_to_dev
);

1643 
p‹t
->
t˝_byãs_ª˚ived
 = 0;

1644 
p‹t
->
t˝_byãs_£¡
 = 0;

1645 i‡(
p‹t
->
b™√r
) {

1646 
	`‰ì
(
p‹t
->
b™√r
->
buf
);

1647 
	`‰ì
(
p‹t
->
b™√r
);

1648 
p‹t
->
b™√r
 = 
NULL
;

1650 i‡(
p‹t
->
dev°r
) {

1651 
	`‰ì
(
p‹t
->
dev°r
->
buf
);

1652 
	`‰ì
(
p‹t
->
dev°r
);

1653 
p‹t
->
dev°r
 = 
NULL
;

1655 
p‹t
->
dev_to_t˝_°©e
 = 
PORT_UNCONNECTED
;

1656 
	`buf„r_ª£t
(&
p‹t
->
dev_to_t˝
);

1657 
p‹t
->
dev_byãs_ª˚ived
 = 0;

1658 
p‹t
->
dev_byãs_£¡
 = 0;

1660 i‡(
p‹t
->
is_°dio
)

1664 
	`exô
(0);

1669 i‡(
p‹t
->
c⁄fig_num
 == -1) {

1670 
p‹t_öfo_t
 *
cuº
, *
¥ev
;

1672 
	`ch™ge_p‹t_°©e
(
NULL
, 
p‹t
, 
PORT_DISABLED
);

1673 
¥ev
 = 
NULL
;

1674 
cuº
 = 
p‹ts
;

1675 (
cuº
 !
NULL
Ë&& (cuº !
p‹t
)) {

1676 
¥ev
 = 
cuº
;

1677 
cuº
 = cuº->
√xt
;

1679 i‡(
cuº
 !
NULL
) {

1680 i‡(
¥ev
 =
NULL
)

1681 
p‹ts
 = 
cuº
->
√xt
;

1683 
¥ev
->
√xt
 = 
cuº
->next;

1684 
	`‰ì_p‹t
(
cuº
);

1694 i‡(
p‹t
->
√w_c⁄fig
 !
NULL
) {

1695 
p‹t_öfo_t
 *
cuº
, *
¥ev
;

1697 
¥ev
 = 
NULL
;

1698 
cuº
 = 
p‹ts
;

1699 (
cuº
 !
NULL
Ë&& (cuº !
p‹t
)) {

1700 
¥ev
 = 
cuº
;

1701 
cuº
 = cuº->
√xt
;

1703 i‡(
cuº
 !
NULL
) {

1704 
p‹t
 = 
cuº
->
√w_c⁄fig
;

1705 
p‹t
->
ac˚±fds
 = 
cuº
->acceptfds;

1706 
p‹t
->
ƒ_ac˚±fds
 = 
cuº
->nr_acceptfds;

1707 
cuº
->
ac˚±fds
 = 
NULL
;

1708 
	`ªdo_p‹t_h™dÀrs
(
p‹t
);

1709 
p‹t
->
√xt
 = 
cuº
->next;

1710 i‡(
¥ev
 =
NULL
) {

1711 
p‹ts
 = 
p‹t
;

1713 
¥ev
->
√xt
 = 
p‹t
;

1715 
cuº
->
íabÀd
 = 
PORT_DISABLED
;

1716 
cuº
->
√w_c⁄fig
 = 
NULL
;

1717 
	`‰ì_p‹t
(
cuº
);

1720 
	}
}

1723 
	$shutdown_p‹t
(
p‹t_öfo_t
 *
p‹t
, *
ªas⁄
)

1725 
	`foŸî_åa˚
(
p‹t
, 
ªas⁄
);

1727 i‡(
p‹t
->
åa˚_wrôe
.
fd
 != -1) {

1728 
	`˛o£
(
p‹t
->
åa˚_wrôe
.
fd
);

1729 
p‹t
->
åa˚_wrôe
.
fd
 = -1;

1731 i‡(
p‹t
->
åa˚_ªad
.
fd
 != -1) {

1732 
	`˛o£
(
p‹t
->
åa˚_ªad
.
fd
);

1733 
p‹t
->
åa˚_ªad
.
fd
 = -1;

1735 i‡(
p‹t
->
åa˚_bŸh
.
fd
 != -1) {

1736 
	`˛o£
(
p‹t
->
åa˚_bŸh
.
fd
);

1737 
p‹t
->
åa˚_bŸh
.
fd
 = -1;

1739 
p‹t
->
tw
 =Ö‹t->
å
 =Ö‹t->
tb
 = 
NULL
;

1741 
	`£l_°›_timî
(
p‹t
->
timî
);

1742 i‡(
p‹t
->
t˝fd
 != -1) {

1743 
	`£l_˛ór_fd_h™dÀrs
(
£r2√t_£l
, 
p‹t
->
t˝fd
);

1744 
	`˛o£
(
p‹t
->
t˝fd
);

1745 
p‹t
->
t˝fd
 = -1;

1748 i‡(
p‹t
->
dev°r
) {

1749 
	`‰ì
(
p‹t
->
dev°r
->
buf
);

1750 
	`‰ì
(
p‹t
->
dev°r
);

1752 
p‹t
->
dev°r
 = 
	`¥o˚ss_°r_to_buf
’‹t,Ö‹t->
˛o£°r
);

1753 i‡(
p‹t
->
dev°r
 && (p‹t->
t˝_to_dev_°©e
 !
PORT_UNCONNECTED
)) {

1754 
p‹t
->
t˝_to_dev_°©e
 = 
PORT_CLOSING
;

1755 
p‹t
->
io
.
f
->
	`ªad_h™dÀr_íabÀ
(&port->io, 0);

1756 
p‹t
->
io
.
f
->
	`ex˚±_h™dÀr_íabÀ
(&port->io, 0);

1757 
p‹t
->
io
.
wrôe_h™dÀr
 = 
h™dÀ_dev_fd_˛o£_wrôe
;

1758 
p‹t
->
io
.
f
->
	`wrôe_h™dÀr_íabÀ
(&port->io, 1);

1760 
	`föish_shutdown_p‹t
(
p‹t
);

1761 
	}
}

1764 
	$gŸ_timeout
(
£À˘‹_t
 *
£l
,

1765 
£l_timî_t
 *
timî
,

1766 *
d©a
)

1768 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
d©a
;

1769 
timevÆ
 
thí
;

1770 
modem°©e
;

1772 i‡(
p‹t
->
timeout
) {

1773 
p‹t
->
timeout_À·
--;

1774 i‡(
p‹t
->
timeout_À·
 < 0) {

1775 
	`shutdown_p‹t
(
p‹t
, "timeout");

1780 i‡(
p‹t
->
is_2217
 &&

1781 (
p‹t
->
io
.
f
->
	`gë_modem_°©e
(&p‹t->io, &
modem°©e
) != -1)) {

1782 
modem°©e
 &
p‹t
->
modem°©e_mask
;

1783 i‡(
modem°©e
 !
p‹t
->
œ°_modem°©e
) {

1784 
d©a
[3];

1785 
d©a
[0] = 
TN_OPT_COM_PORT
;

1786 
d©a
[1] = 107;

1787 
d©a
[2] = 
modem°©e
;

1788 
p‹t
->
œ°_modem°©e
 = 
modem°©e
;

1789 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
d©a
, 3);

1793 
	`gëtimeofday
(&
thí
, 
NULL
);

1794 
thí
.
tv_£c
 += 1;

1795 
	`£l_°¨t_timî
(
p‹t
->
timî
, &
thí
);

1796 
	}
}

1799 
	$ißŒzîo
(*
°r
)

1801 i‡(*
°r
 == '\0')

1804 *
°r
 == '0')

1805 
°r
++;

1806  *
°r
 == '\0';

1807 
	}
}

1810 
	$myc⁄fig
(*
d©a
, 
absout
 *
eout
, c⁄° *
pos
)

1812 
p‹t_öfo_t
 *
p‹t
 = 
d©a
;

1813 
°r_ty≥
 
°y≥
;

1814 *
s
;

1816 i‡(
	`°rcmp
(
pos
, "remctl") == 0) {

1817 
p‹t
->
Ælow_2217
 = 1;

1818 } i‡(
	`°rcmp
(
pos
, "kickolduser") == 0) {

1819 
p‹t
->
kickﬁdu£r_mode
 = 1;

1820 } i‡(
	`°rcmp
(
pos
, "hexdump") == 0 ||

1821 
	`°rcmp
(
pos
, "-hexdump") == 0) {

1822 
p‹t
->
åa˚_ªad
.
hexdump
 = (*
pos
 != '-');

1823 
p‹t
->
åa˚_wrôe
.
hexdump
 = (*
pos
 != '-');

1824 
p‹t
->
åa˚_bŸh
.
hexdump
 = (*
pos
 != '-');

1825 } i‡(
	`°rcmp
(
pos
, "timestamp") == 0 ||

1826 
	`°rcmp
(
pos
, "-timestamp") == 0) {

1827 
p‹t
->
åa˚_ªad
.
time°amp
 = (*
pos
 != '-');

1828 
p‹t
->
åa˚_wrôe
.
time°amp
 = (*
pos
 != '-');

1829 
p‹t
->
åa˚_bŸh
.
time°amp
 = (*
pos
 != '-');

1830 } i‡(
	`°rcmp
(
pos
, "tr-hexdump") == 0 ||

1831 
	`°rcmp
(
pos
, "-tr-hexdump") == 0) {

1832 
p‹t
->
åa˚_ªad
.
hexdump
 = (*
pos
 != '-');

1833 } i‡(
	`°rcmp
(
pos
, "tr-timestamp") == 0 ||

1834 
	`°rcmp
(
pos
, "-tr-timestamp") == 0) {

1835 
p‹t
->
åa˚_ªad
.
time°amp
 = (*
pos
 != '-');

1836 } i‡(
	`°rcmp
(
pos
, "tw-hexdump") == 0 ||

1837 
	`°rcmp
(
pos
, "-tw-hexdump") == 0) {

1838 
p‹t
->
åa˚_wrôe
.
hexdump
 = (*
pos
 != '-');

1839 } i‡(
	`°rcmp
(
pos
, "tw-timestamp") == 0 ||

1840 
	`°rcmp
(
pos
, "-tw-timestamp") == 0) {

1841 
p‹t
->
åa˚_wrôe
.
time°amp
 = (*
pos
 != '-');

1842 } i‡(
	`°rcmp
(
pos
, "tb-hexdump") == 0 ||

1843 
	`°rcmp
(
pos
, "-tb-hexdump") == 0) {

1844 
p‹t
->
åa˚_bŸh
.
hexdump
 = (*
pos
 != '-');

1845 } i‡(
	`°rcmp
(
pos
, "tb-timestamp") == 0 ||

1846 
	`°rcmp
(
pos
, "-tb-timestamp") == 0) {

1847 
p‹t
->
åa˚_bŸh
.
time°amp
 = (*
pos
 != '-');

1848 } i‡(
	`°∫cmp
(
pos
, "tr=", 3) == 0) {

1850 
p‹t
->
åa˚_ªad
.
fûíame
 = 
	`föd_åa˚fûe
(
pos
 + 3);

1851 } i‡(
	`°∫cmp
(
pos
, "tw=", 3) == 0) {

1853 
p‹t
->
åa˚_wrôe
.
fûíame
 = 
	`föd_åa˚fûe
(
pos
 + 3);

1854 } i‡(
	`°∫cmp
(
pos
, "tb=", 3) == 0) {

1856 
p‹t
->
åa˚_bŸh
.
fûíame
 = 
	`föd_åa˚fûe
(
pos
 + 3);

1857 #ifde‡
USE_RS485_FEATURE


1858 } i‡(
	`°∫cmp
(
pos
, "rs485=", 6) == 0) {

1860 
p‹t
->
rs485c⁄f
 = 
	`föd_rs485c⁄f
(
pos
 + 6);

1862 } i‡((
s
 = 
	`föd_°r
(
pos
, &
°y≥
))) {

1865 
°y≥
) {

1866 
BANNER
: 
p‹t
->
b™√r°r
 = 
s
; ;

1867 
SIGNATURE
: 
p‹t
->
sig«tuª°r
 = 
s
; ;

1868 
OPENSTR
: 
p‹t
->
›í°r
 = 
s
; ;

1869 
CLOSESTR
: 
p‹t
->
˛o£°r
 = 
s
; ;

1870 : 
	`‰ì
(
s
);

1873 
eout
->
	`out
”out, "Unknow¿c⁄fig iãm: %s", 
pos
);

1878 
	}
}

1882 
	$p‹tc⁄fig
(
absout
 *
eout
,

1883 *
p‹äum
,

1884 *
°©e
,

1885 *
timeout
,

1886 *
dev«me
,

1887 *
devcfg
,

1888 
c⁄fig_num
)

1890 
p‹t_öfo_t
 *
√w_p‹t
, *
cuº
, *
¥ev
;

1892 
√w_p‹t
 = 
	`mÆloc
((
p‹t_öfo_t
));

1893 i‡(
√w_p‹t
 =
NULL
) {

1894 
eout
->
	`out
(eout, "CouldÇotállocateáÖort data structure");

1897 
	`mem£t
(
√w_p‹t
, 0, (*new_port));

1899 i‡(
	`£l_Æloc_timî
(
£r2√t_£l
,

1900 
gŸ_timeout
, 
√w_p‹t
,

1901 &
√w_p‹t
->
timî
))

1903 
	`‰ì
(
√w_p‹t
);

1904 
eout
->
	`out
(eout, "CouldÇotállocateÅimer data");

1908 
√w_p‹t
->
p‹äame
 = 
	`°rdup
(
p‹äum
);

1909 i‡(!
√w_p‹t
->
p‹äame
) {

1910 
	`‰ì
(
√w_p‹t
);

1911 
eout
->
	`out
(eout, "unableÅoállocateÖortÇame");

1915 
√w_p‹t
->
io
.
dev«me
 = 
	`°rdup
(devname);

1916 i‡(!
√w_p‹t
->
io
.
dev«me
) {

1917 
	`‰ì
(
√w_p‹t
->
p‹äame
);

1918 
	`‰ì
(
√w_p‹t
);

1919 
eout
->
	`out
(eout, "unableÅo deviceÇame");

1924 
	`öô_p‹t_d©a
(
√w_p‹t
);

1926 i‡(
	`ißŒzîo
(
√w_p‹t
->
p‹äame
)) {

1927 
√w_p‹t
->
is_°dio
 = 1;

1928 } i‡(
	`sˇn_t˝_p‹t
(
√w_p‹t
->
p‹äame
, &√w_p‹t->
ai
)) {

1929 
eout
->
	`out
(eout, "portÇumber was invalid");

1930 
îrout
;

1933 i‡(
	`°rcmp
(
°©e
, "raw") == 0) {

1934 
√w_p‹t
->
íabÀd
 = 
PORT_RAW
;

1935 } i‡(
	`°rcmp
(
°©e
, "rawlp") == 0) {

1936 
√w_p‹t
->
íabÀd
 = 
PORT_RAWLP
;

1937 
√w_p‹t
->
io
.
ªad_dißbÀd
 = 1;

1938 } i‡(
	`°rcmp
(
°©e
, "telnet") == 0) {

1939 
√w_p‹t
->
íabÀd
 = 
PORT_TELNET
;

1940 } i‡(
	`°rcmp
(
°©e
, "off") == 0) {

1941 
√w_p‹t
->
íabÀd
 = 
PORT_DISABLED
;

1943 
eout
->
	`out
(eout, "state was invalid");

1944 
îrout
;

1947 
√w_p‹t
->
timeout
 = 
	`sˇn_öt
(timeout);

1948 i‡(
√w_p‹t
->
timeout
 == -1) {

1949 
eout
->
	`out
(eout, "timeout was invalid");

1950 
îrout
;

1953 
√w_p‹t
->
io
.
u£r_d©a
 =Çew_port;

1955 i‡(
	`devcfg_öô
(&
√w_p‹t
->
io
, 
eout
, 
devcfg
, 
myc⁄fig
,Çew_port) == -1) {

1956 
eout
->
	`out
(eout, "device configuration invalid");

1957 
îrout
;

1960 
√w_p‹t
->
c⁄fig_num
 = config_num;

1963 
cuº
 = 
p‹ts
;

1964 
¥ev
 = 
NULL
;

1965 
cuº
 !
NULL
) {

1966 i‡(
	`°rcmp
(
cuº
->
p‹äame
, 
√w_p‹t
->portname) == 0) {

1968 i‡(
cuº
->
dev_to_t˝_°©e
 =
PORT_UNCONNECTED
) {

1970 
√w_°©e
 = 
√w_p‹t
->
íabÀd
;

1972 
√w_p‹t
->
íabÀd
 = 
cuº
->enabled;

1973 
√w_p‹t
->
ac˚±fds
 = 
cuº
->acceptfds;

1974 
√w_p‹t
->
ƒ_ac˚±fds
 = 
cuº
->nr_acceptfds;

1975 
cuº
->
íabÀd
 = 
PORT_DISABLED
;

1976 
cuº
->
ac˚±fds
 = 
NULL
;

1977 
	`ªdo_p‹t_h™dÀrs
(
√w_p‹t
);

1980 i‡(
¥ev
 =
NULL
) {

1981 
p‹ts
 = 
√w_p‹t
;

1983 
¥ev
->
√xt
 = 
√w_p‹t
;

1985 
√w_p‹t
->
√xt
 = 
cuº
->next;

1986 
	`‰ì_p‹t
(
cuº
);

1988 
	`ch™ge_p‹t_°©e
(
eout
, 
√w_p‹t
, 
√w_°©e
);

1991 i‡(
cuº
->
√w_c⁄fig
 !
NULL
) {

1992 
cuº
->
íabÀd
 = 
PORT_DISABLED
;

1993 
	`‰ì_p‹t
(
cuº
->
√w_c⁄fig
);

1995 
cuº
->
c⁄fig_num
 = config_num;

1996 
cuº
->
√w_c⁄fig
 = 
√w_p‹t
;

2000 
¥ev
 = 
cuº
;

2001 
cuº
 = cuº->
√xt
;

2008 i‡(
√w_p‹t
->
íabÀd
 !
PORT_DISABLED
) {

2009 i‡(
	`°¨tup_p‹t
(
eout
, 
√w_p‹t
) == -1)

2010 
îrout
;

2014 
√w_p‹t
->
√xt
 = 
NULL
;

2015 i‡(
p‹ts
 =
NULL
) {

2016 
p‹ts
 = 
√w_p‹t
;

2018 
cuº
 = 
p‹ts
;

2019 
cuº
->
√xt
 !
NULL
) {

2020 
cuº
 = cuº->
√xt
;

2022 
cuº
->
√xt
 = 
√w_p‹t
;

2027 
îrout
:

2028 
	`‰ì_p‹t
(
√w_p‹t
);

2030 
	}
}

2033 
	$˛ór_ﬁd_p‹t_c⁄fig
(
cuº_c⁄fig
)

2035 
p‹t_öfo_t
 *
cuº
, *
¥ev
;

2037 
cuº
 = 
p‹ts
;

2038 
¥ev
 = 
NULL
;

2039 
cuº
 !
NULL
) {

2040 i‡(
cuº
->
c⁄fig_num
 !
cuº_c⁄fig
) {

2042 i‡(
cuº
->
dev_to_t˝_°©e
 =
PORT_UNCONNECTED
) {

2043 i‡(
¥ev
 =
NULL
) {

2044 
p‹ts
 = 
cuº
->
√xt
;

2045 
	`‰ì_p‹t
(
cuº
);

2046 
cuº
 = 
p‹ts
;

2048 
¥ev
->
√xt
 = 
cuº
->next;

2049 
	`‰ì_p‹t
(
cuº
);

2050 
cuº
 = 
¥ev
->
√xt
;

2053 
cuº
->
c⁄fig_num
 = -1;

2054 
¥ev
 = 
cuº
;

2055 
cuº
 = cuº->
√xt
;

2058 
¥ev
 = 
cuº
;

2059 
cuº
 = cuº->
√xt
;

2062 
	}
}

2066 
	$showsh‹ç‹t
(
c⁄åﬁÀr_öfo
 *
˙ér
, 
p‹t_öfo_t
 *
p‹t
)

2068 
buf„r
[
NI_MAXHOST
], 
p‹tbuff
[
NI_MAXSERV
];

2069 
cou¡
;

2070 
√ed_•a˚
 = 0;

2071 
îr
;

2072 
absout
 
out
 = { .ouà
˙ål_absout
, .
d©a
 = 
˙ér
 };

2074 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%-22†", 
p‹t
->
p‹äame
);

2075 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%-6†", 
íabÀd_°r
[
p‹t
->
íabÀd
]);

2076 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%7d ", 
p‹t
->
timeout
);

2078 
îr
 = 
	`gë«meöfo
((
sockaddr
 *Ë&(
p‹t
->
ªmŸe
), (port->remote),

2079 
buf„r
, (buffer),

2080 
p‹tbuff
, (portbuff),

2081 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
);

2082 i‡(
îr
) {

2083 
	`°r˝y
(
buf„r
, "*err*");

2084 
	`•rötf
(
p‹tbuff
, "%s", 
	`gai_°ªº‹
(
îr
));

2087 
cou¡
 = 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%s,%s", 
buf„r
, 
p‹tbuff
);

2088 
cou¡
 < 23) {

2089 
	`c⁄åﬁÀr_ouçut
(
˙ér
, " ", 1);

2090 
cou¡
++;

2093 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%-22†", 
p‹t
->
io
.
dev«me
);

2094 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%-14†", 
°©e_°r
[
p‹t
->
t˝_to_dev_°©e
]);

2095 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%-14†", 
°©e_°r
[
p‹t
->
dev_to_t˝_°©e
]);

2096 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%9d ", 
p‹t
->
t˝_byãs_ª˚ived
);

2097 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%9d ", 
p‹t
->
t˝_byãs_£¡
);

2098 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%9d ", 
p‹t
->
dev_byãs_ª˚ived
);

2099 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "%9d ", 
p‹t
->
dev_byãs_£¡
);

2101 i‡(
p‹t
->
íabÀd
 !
PORT_RAWLP
) {

2102 
p‹t
->
io
.
f
->
	`show_devcfg
(&p‹t->io, &
out
);

2103 
√ed_•a˚
 = 1;

2106 i‡(
p‹t
->
t˝_to_dev_°©e
 !
PORT_UNCONNECTED
) {

2107 i‡(
√ed_•a˚
) {

2108 
	`c⁄åﬁÀr_ouçut
(
˙ér
, " ", 1);

2111 
p‹t
->
io
.
f
->
	`show_devc⁄åﬁ
(&p‹t->io, &
out
);

2113 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2115 
	}
}

2119 
	$showp‹t
(
c⁄åﬁÀr_öfo
 *
˙ér
, 
p‹t_öfo_t
 *
p‹t
)

2121 
buf„r
[
NI_MAXHOST
], 
p‹tbuff
[
NI_MAXSERV
];

2122 
absout
 
out
 = { .ouà
˙ål_absout
, .
d©a
 = 
˙ér
 };

2123 
îr
;

2125 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "TCP P‹à%s\n\r", 
p‹t
->
p‹äame
);

2126 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "Énable state: %s\n\r",

2127 
íabÀd_°r
[
p‹t
->
íabÀd
]);

2128 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "Åimeout: %d\n\r", 
p‹t
->
timeout
);

2130 
îr
 = 
	`gë«meöfo
((
sockaddr
 *Ë&(
p‹t
->
ªmŸe
), (port->remote),

2131 
buf„r
, (buffer),

2132 
p‹tbuff
, (portbuff),

2133 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
);

2134 i‡(
îr
) {

2135 
	`°r˝y
(
buf„r
, "*err*");

2136 
	`•rötf
(
p‹tbuff
, "%s", 
	`gai_°ªº‹
(
îr
));

2138 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " connectedÅo (orÜast connection): %s,%s\r\n",

2139 
buf„r
, 
p‹tbuff
);

2141 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " devi˚: %s\r\n", 
p‹t
->
io
.
dev«me
);

2143 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " device config: ");

2144 i‡(
p‹t
->
íabÀd
 =
PORT_RAWLP
) {

2145 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "none\n\r");

2147 
p‹t
->
io
.
f
->
	`show_devcfg
(&p‹t->io, &
out
);

2148 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "\n\r");

2151 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " device controls: ");

2152 i‡(
p‹t
->
t˝_to_dev_°©e
 =
PORT_UNCONNECTED
) {

2153 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "not currently connected\n\r");

2155 
p‹t
->
io
.
f
->
	`show_devc⁄åﬁ
(&p‹t->io, &
out
);

2156 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "\n\r");

2159 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "ÅcpÅo device state: %s\n\r",

2160 
°©e_°r
[
p‹t
->
t˝_to_dev_°©e
]);

2162 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " deviceÅoÅcp state: %s\n\r",

2163 
°©e_°r
[
p‹t
->
dev_to_t˝_°©e
]);

2165 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " bytesÑead from TCP: %d\n\r",

2166 
p‹t
->
t˝_byãs_ª˚ived
);

2168 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " bytes writtenÅo TCP: %d\n\r",

2169 
p‹t
->
t˝_byãs_£¡
);

2171 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " bytesÑead from device: %d\n\r",

2172 
p‹t
->
dev_byãs_ª˚ived
);

2174 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " bytes writtenÅo device: %d\n\r",

2175 
p‹t
->
dev_byãs_£¡
);

2177 i‡(
p‹t
->
c⁄fig_num
 == -1) {

2178 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " Port will be deleted when current"

2180 } i‡(
p‹t
->
√w_c⁄fig
 !
NULL
) {

2181 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, " Port will beÑeconfigured when current"

2184 
	}
}

2187 
p‹t_öfo_t
 *

2188 
	$föd_p‹t_by_num
(*
p‹t°r
)

2190 
p‹t_öfo_t
 *
p‹t
;

2192 
p‹t
 = 
p‹ts
;

2193 
p‹t
 !
NULL
) {

2194 i‡(
	`°rcmp
(
p‹t°r
, 
p‹t
->
p‹äame
) == 0) {

2195  
p‹t
;

2197 
p‹t
 =Ö‹t->
√xt
;

2200  
NULL
;

2201 
	}
}

2205 
	$showp‹ts
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
)

2207 
p‹t_öfo_t
 *
p‹t
;

2209 i‡(
p‹t•ec
 =
NULL
) {

2211 
p‹t
 = 
p‹ts
;

2212 
p‹t
 !
NULL
) {

2213 
	`showp‹t
(
˙ér
, 
p‹t
);

2214 
p‹t
 =Ö‹t->
√xt
;

2217 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2218 i‡(
p‹t
 =
NULL
) {

2219 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\r\n", 
p‹t•ec
);

2221 
	`showp‹t
(
˙ér
, 
p‹t
);

2224 
	}
}

2228 
	$showsh‹ç‹ts
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
)

2230 
p‹t_öfo_t
 *
p‹t
;

2232 
	`c⁄åﬁÀr_ouçutf
(
˙ér
,

2246 i‡(
p‹t•ec
 =
NULL
) {

2248 
p‹t
 = 
p‹ts
;

2249 
p‹t
 !
NULL
) {

2250 
	`showsh‹ç‹t
(
˙ér
, 
p‹t
);

2251 
p‹t
 =Ö‹t->
√xt
;

2254 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2255 i‡(
p‹t
 =
NULL
) {

2256 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\r\n", 
p‹t•ec
);

2258 
	`showsh‹ç‹t
(
˙ér
, 
p‹t
);

2261 
	}
}

2267 
	$£ç‹âimeout
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
, *
timeout
)

2269 
timeout_num
;

2270 
p‹t_öfo_t
 *
p‹t
;

2272 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2273 i‡(
p‹t
 =
NULL
) {

2274 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\r\n", 
p‹t•ec
);

2276 
timeout_num
 = 
	`sˇn_öt
(
timeout
);

2277 i‡(
timeout_num
 == -1) {

2278 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÅimeout: %s\r\n", 
timeout
);

2280 
p‹t
->
timeout
 = 
timeout_num
;

2281 i‡(
p‹t
->
t˝fd
 != -1) {

2282 
	`ª£t_timî
(
p‹t
);

2286 
	}
}

2292 
	$£ç‹tdevcfg
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
, *
devcfg
)

2294 
p‹t_öfo_t
 *
p‹t
;

2295 
absout
 
out
 = { .ouà
˙ål_ab£ºout
, .
d©a
 = 
˙ér
 };

2297 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2298 i‡(
p‹t
 =
NULL
) {

2299 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\r\n", 
p‹t•ec
);

2301 i‡(
p‹t
->
io
.
f
->
	`ªc⁄fig
(&p‹t->io, &
out
, 
devcfg
, 
myc⁄fig
,Öort) == -1)

2303 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "Invalid device config\n\r");

2306 
	}
}

2312 
	$£ç‹tc⁄åﬁ
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
, *
c⁄åﬁs
)

2314 
p‹t_öfo_t
 *
p‹t
;

2316 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2317 i‡(
p‹t
 =
NULL
) {

2318 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\n\r", 
p‹t•ec
);

2319 } i‡(
p‹t
->
t˝_to_dev_°©e
 =
PORT_UNCONNECTED
) {

2320 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "Port isÇot currently connected: %s\r\n",

2321 
p‹t•ec
);

2323 i‡(
p‹t
->
io
.
f
->
	`£t_devc⁄åﬁ
(&p‹t->io, 
c⁄åﬁs
) == -1) {

2324 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "Invalid device controls\n\r");

2327 
	}
}

2331 
	$£ç‹ã«bÀ
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
, *
íabÀ
)

2333 
p‹t_öfo_t
 *
p‹t
;

2334 
√w_íabÀ
;

2335 
absout
 
eout
 = { .
out
 = 
˙ål_ab£ºout
, .
d©a
 = 
˙ér
 };

2337 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2338 i‡(
p‹t
 =
NULL
) {

2339 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÖ‹ànumbî: %s\n\r", 
p‹t•ec
);

2343 i‡(
	`°rcmp
(
íabÀ
, "off") == 0) {

2344 
√w_íabÀ
 = 
PORT_DISABLED
;

2345 } i‡(
	`°rcmp
(
íabÀ
, "raw") == 0) {

2346 
√w_íabÀ
 = 
PORT_RAW
;

2347 } i‡(
	`°rcmp
(
íabÀ
, "rawlp") == 0) {

2348 
√w_íabÀ
 = 
PORT_RAWLP
;

2349 } i‡(
	`°rcmp
(
íabÀ
, "telnet") == 0) {

2350 
√w_íabÀ
 = 
PORT_TELNET
;

2352 
	`c⁄åﬁÀr_ouçutf
(
˙ér
, "InvÆidÉ«bÀ: %s\n\r", 
íabÀ
);

2356 
	`ch™ge_p‹t_°©e
(&
eout
, 
p‹t
, 
√w_íabÀ
);

2357 
	}
}

2359 #ifde‡
USE_RS485_FEATURE


2360 
£rül_rs485
 *
	$gë_rs485_c⁄f
(*
d©a
)

2362 
p‹t_öfo_t
 *
p‹t
 = 
d©a
;

2364  
p‹t
->
rs485c⁄f
;

2365 
	}
}

2372 
	$d©a_m⁄ô‹_°¨t
(
c⁄åﬁÀr_öfo
 *
˙ér
,

2373 *
ty≥
,

2374 *
p‹t•ec
)

2376 
p‹t_öfo_t
 *
p‹t
;

2378 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2379 i‡(
p‹t
 =
NULL
) {

2380 *
îr
 = "InvalidÖortÇumber: ";

2381 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

2382 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
p‹t•ec
, 
	`°æí
(portspec));

2383 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2384  
NULL
;

2387 i‡((
p‹t
->
t˝_m⁄ô‹
 !
NULL
Ë|| (p‹t->
dev_m⁄ô‹
 != NULL)) {

2388 *
îr
 = "Port isálready being monitored";

2389 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

2390 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2391  
NULL
;

2394 i‡(
	`°rcmp
(
ty≥
, "tcp") == 0) {

2395 
p‹t
->
t˝_m⁄ô‹
 = 
˙ér
;

2396  
p‹t
;

2397 } i‡(
	`°rcmp
(
ty≥
, "term") == 0) {

2398 
p‹t
->
dev_m⁄ô‹
 = 
˙ér
;

2399  
p‹t
;

2401 *
îr
 = "invalid monitorÅype: ";

2402 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

2403 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
ty≥
, 
	`°æí
(type));

2404 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2405  
NULL
;

2407 
	}
}

2411 
	$d©a_m⁄ô‹_°›
(
c⁄åﬁÀr_öfo
 *
˙ér
,

2412 *
m⁄ô‹_id
)

2414 
p‹t_öfo_t
 *
p‹t
 = (p‹t_öfo_à*Ë
m⁄ô‹_id
;

2416 
p‹t
->
t˝_m⁄ô‹
 = 
NULL
;

2417 
p‹t
->
dev_m⁄ô‹
 = 
NULL
;

2418 
	}
}

2421 
	$disc⁄√˘_p‹t
(
c⁄åﬁÀr_öfo
 *
˙ér
,

2422 *
p‹t•ec
)

2424 
p‹t_öfo_t
 *
p‹t
;

2426 
p‹t
 = 
	`föd_p‹t_by_num
(
p‹t•ec
);

2427 i‡(
p‹t
 =
NULL
) {

2428 *
îr
 = "InvalidÖortÇumber: ";

2429 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

2430 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
p‹t•ec
, 
	`°æí
(portspec));

2431 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2433 } i‡(
p‹t
->
t˝_to_dev_°©e
 =
PORT_UNCONNECTED
) {

2434 *
îr
 = "PortÇot connected: ";

2435 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
îr
, 
	`°æí
(err));

2436 
	`c⁄åﬁÀr_ouçut
(
˙ér
, 
p‹t•ec
, 
	`°æí
(portspec));

2437 
	`c⁄åﬁÀr_ouçut
(
˙ér
, "\n\r", 2);

2441 
	`shutdown_p‹t
(
p‹t
, "disconnect");

2442 
	}
}

2445 
	$com_p‹t_wûl
(*
cb_d©a
)

2447 
p‹t_öfo_t
 *
p‹t
 = 
cb_d©a
;

2448 
d©a
[3];

2450 i‡(! 
p‹t
->
Ælow_2217
)

2454 
p‹t
->
is_2217
 = 1;

2455 
p‹t
->
löe°©e_mask
 = 0;

2456 
p‹t
->
modem°©e_mask
 = 255;

2457 
p‹t
->
œ°_modem°©e
 = 0;

2461 
d©a
[0] = 
TN_OPT_COM_PORT
;

2462 
d©a
[1] = 107;

2463 
d©a
[2] = 0;

2464 i‡(
p‹t
->
io
.
f
->
	`gë_modem_°©e
(&p‹t->io, 
d©a
 + 2) != -1) {

2465 
p‹t
->
œ°_modem°©e
 = 
d©a
[2];

2467 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
d©a
, 3);

2469 
	}
}

2472 
	$com_p‹t_h™dÀr
(*
cb_d©a
, *
›ti⁄
, 
Àn
)

2474 
p‹t_öfo_t
 *
p‹t
 = 
cb_d©a
;

2475 
out›t
[
MAX_TELNET_CMD_XMIT_BUF
];

2476 
vÆ
;

2477 
ucvÆ
;

2478 
cisco_ios_baud_øãs
 = 0;

2480 i‡(
Àn
 < 2)

2483 
›ti⁄
[1]) {

2487 *
sig
 = 
p‹t
->
sig«tuª°r
;

2488 
sign_Àn
;

2490 i‡(!
sig
)

2492 
sig
 = 
rfc2217_sig«tuª
;

2494 
sign_Àn
 = 
	`°æí
(
sig
);

2495 i‡(
sign_Àn
 > (
MAX_TELNET_CMD_XMIT_BUF
 - 2))

2496 
sign_Àn
 = 
MAX_TELNET_CMD_XMIT_BUF
 - 2;

2498 
out›t
[0] = 44;

2499 
out›t
[1] = 100;

2500 
	`°∫˝y
((*Ë
out›t
+2, 
sig
, 
sign_Àn
);

2501 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 2 + 
sign_Àn
);

2506 i‡(
Àn
 == 3) {

2507 
cisco_ios_baud_øãs
 = 1;

2508 
vÆ
 = 
›ti⁄
[2];

2510 i‡(
Àn
 < 6)

2515 
vÆ
 = 
›ti⁄
[2] << 24;

2516 
vÆ
 |
›ti⁄
[3] << 16;

2517 
vÆ
 |
›ti⁄
[4] << 8;

2518 
vÆ
 |
›ti⁄
[5];

2521 
p‹t
->
io
.
f
->
	`baud_øã
(&p‹t->io, &
vÆ
, 
cisco_ios_baud_øãs
);

2522 
out›t
[0] = 44;

2523 
out›t
[1] = 101;

2524 i‡(
cisco_ios_baud_øãs
) {

2525 
out›t
[2] = 
vÆ
;

2526 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2531 
out›t
[2] = 
vÆ
 >> 24;

2532 
out›t
[3] = 
vÆ
 >> 16;

2533 
out›t
[4] = 
vÆ
 >> 8;

2534 
out›t
[5] = 
vÆ
;

2535 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 6);

2540 i‡(
Àn
 < 3)

2543 
ucvÆ
 = 
›ti⁄
[2];

2544 
p‹t
->
io
.
f
->
	`d©a_size
(&p‹t->io, &
ucvÆ
);

2545 
out›t
[0] = 44;

2546 
out›t
[1] = 102;

2547 
out›t
[2] = 
ucvÆ
;

2548 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2552 i‡(
Àn
 < 3)

2555 
ucvÆ
 = 
›ti⁄
[2];

2556 
p‹t
->
io
.
f
->
	`∑rôy
(&p‹t->io, &
ucvÆ
);

2557 
out›t
[0] = 44;

2558 
out›t
[1] = 103;

2559 
out›t
[2] = 
ucvÆ
;

2560 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2564 i‡(
Àn
 < 3)

2567 
ucvÆ
 = 
›ti⁄
[2];

2568 
p‹t
->
io
.
f
->
	`°›_size
(&p‹t->io, &
ucvÆ
);

2569 
out›t
[0] = 44;

2570 
out›t
[1] = 104;

2571 
out›t
[2] = 
ucvÆ
;

2572 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2576 i‡(
Àn
 < 3)

2579 
ucvÆ
 = 
›ti⁄
[2];

2580 
p‹t
->
io
.
f
->
	`c⁄åﬁ
(&p‹t->io, &
ucvÆ
);

2581 
out›t
[0] = 44;

2582 
out›t
[1] = 105;

2583 
out›t
[2] = 
ucvÆ
;

2584 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2588 
p‹t
->
io
.
f
->
	`Êow_c⁄åﬁ
(&port->io, 1);

2589 
out›t
[0] = 44;

2590 
out›t
[1] = 108;

2591 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 2);

2595 
p‹t
->
io
.
f
->
	`Êow_c⁄åﬁ
(&port->io, 0);

2596 
out›t
[0] = 44;

2597 
out›t
[1] = 109;

2598 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 2);

2602 i‡(
Àn
 < 3)

2604 
p‹t
->
löe°©e_mask
 = 
›ti⁄
[2];

2605 
out›t
[0] = 44;

2606 
out›t
[1] = 110;

2607 
out›t
[2] = 
p‹t
->
löe°©e_mask
;

2608 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2612 i‡(
Àn
 < 3)

2614 
p‹t
->
modem°©e_mask
 = 
›ti⁄
[2];

2615 
out›t
[0] = 44;

2616 
out›t
[1] = 111;

2617 
out›t
[2] = 
p‹t
->
modem°©e_mask
;

2618 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2622 i‡(
Àn
 < 3)

2624 
vÆ
 = 
›ti⁄
[2];

2625 
p‹t
->
io
.
f
->
	`Êush
(&p‹t->io, &
vÆ
);

2626 
out›t
[0] = 44;

2627 
out›t
[1] = 112;

2628 
out›t
[2] = 
vÆ
;

2629 
	`ã ë_£nd_›ti⁄
(&
p‹t
->
ä_d©a
, 
out›t
, 3);

2637 
	}
}

2640 
	$shutdown_p‹ts
()

2642 
p‹t_öfo_t
 *
p‹t
 = 
p‹ts
, *
√xt
;

2644 
p‹t
 !
NULL
) {

2645 
p‹t
->
c⁄fig_num
 = -1;

2646 
√xt
 = 
p‹t
->next;

2647 
	`shutdown_p‹t
(
p‹t
, "program shutdown");

2648 
p‹t
 = 
√xt
;

2650 
	}
}

2653 
	$check_p‹ts_shutdown
()

2655  
p‹ts
 =
NULL
;

2656 
	}
}

	@dataxfer.h

20 #i‚de‡
DATAXFER


21 
	#DATAXFER


	)

23 
	~<löux/£rül.h
>

25 
	~"c⁄åﬁÀr.h
"

27 #ifde‡
USE_UUCP_LOCKING


28 
uu˝_lockög_íabÀd
;

31 #ifde‡
löux


33 
	#USE_RS485_FEATURE


	)

36 #i‚de‡
SER_RS485_ENABLED


38 
	#TIOCGRS485
 0x542E

	)

39 
	#TIOCSRS485
 0x542F

	)

41 
	s£rül_rs485
 {

42 
__u32
 
	mÊags
;

43 
	#SER_RS485_ENABLED
 (1 << 0Ë

	)

44 
	#SER_RS485_RTS_ON_SEND
 (1 << 1Ë

	)

46 
	#SER_RS485_RTS_AFTER_SEND
 (1 << 2Ë

	)

48 
	#SER_RS485_RX_DURING_TX
 (1 << 4)

	)

49 
__u32
 
	mdñay_πs_bef‹e_£nd
;

50 
__u32
 
	mdñay_πs_a·î_£nd
;

51 
__u32
 
	m∑ddög
[5];

59 #i‚de‡
SER_RS485_RX_DURING_TX


60 
	#SER_RS485_RX_DURING_TX
 (1 << 4)

	)

63 
	sabsout
 {

64 (*
	mout
)(
absout
 *
	me
, c⁄° *
	m°r
, ...);

65 *
	md©a
;

69 
p‹tc⁄fig
(
absout
 *
eout
,

70 *
p‹äum
,

71 *
°©e
,

72 *
timeout
,

73 *
dev«me
,

74 *
devcfg
,

75 
c⁄fig_num
);

78 
shutdown_p‹ts
();

79 
check_p‹ts_shutdown
();

82 
˛ór_ﬁd_p‹t_c⁄fig
(
c⁄fig_num
);

85 
d©ax„r_öô
();

90 
showp‹ts
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
);

93 
showsh‹ç‹ts
(
c⁄åﬁÀr_öfo
 *
˙ér
, *
p‹t•ec
);

98 
£ç‹âimeout
(
c⁄åﬁÀr_öfo
 *
˙ér
,

99 *
p‹t•ec
,

100 *
timeout
);

105 
£ç‹tdevcfg
(
c⁄åﬁÀr_öfo
 *
˙ér
,

106 *
p‹t•ec
,

107 *
devcfg
);

110 
£ç‹tc⁄åﬁ
(
c⁄åﬁÀr_öfo
 *
˙ér
,

111 *
p‹t•ec
,

112 *
c⁄åﬁs
);

117 
£ç‹ã«bÀ
(
c⁄åﬁÀr_öfo
 *
˙ér
,

118 *
p‹t•ec
,

119 *
íabÀ
);

125 *
d©a_m⁄ô‹_°¨t
(
c⁄åﬁÀr_öfo
 *
˙ér
,

126 *
ty≥
,

127 *
p‹t•ec
);

130 
d©a_m⁄ô‹_°›
(
c⁄åﬁÀr_öfo
 *
˙ér
,

131 *
m⁄ô‹_id
);

134 
disc⁄√˘_p‹t
(
c⁄åﬁÀr_öfo
 *
˙ér
,

135 *
p‹t•ec
);

137 
	gdevio
;

140 
devcfg_öô
(
devio
 *
io
, 
absout
 *
eout
, c⁄° *
ö°r
,

141 (*
Ÿhîc⁄fig
)(*
d©a
, 
absout
 *
eout
,

142 c⁄° *
ôem
),

143 *
d©a
);

145 
£rül_rs485
 *
	`gë_rs485_c⁄f
(*
d©a
);

	@devcfg.c

22 
	~<uni°d.h
>

23 
	~<ãrmios.h
>

24 
	~<sys/io˘l.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<°dio.h
>

29 
	~<sys/°©.h
>

30 
	~<f˙é.h
>

31 
	~<sig«l.h
>

32 
	~<î∫o.h
>

33 
	~<sy¶og.h
>

34 
	~<löux/£rül.h
>

36 
	~"£r2√t.h
"

37 
	~"£À˘‹.h
"

38 
	~"utûs.h
"

39 
	~"d©ax„r.h
"

40 
	~"devio.h
"

42 
	~<as£π.h
>

44 
	sdevcfg_d©a
 {

46 *
	mdev«me
;

47 
	mdevfd
;

50 
ãrmios
 
	mãrm˘l
;

53 
	mbªak_£t
;

56 
	mdißbÀbªak
;

58 #ifde‡
USE_RS485_FEATURE


59 
£rül_rs485
 *
	mc⁄f
;

63 
	sbaud_øãs_s
 {

64 
	mªÆ_øã
;

65 
	mvÆ
;

66 
	mcisco_ios_vÆ
;

67 } 
	gbaud_øãs
[] =

69 { 50, 
B50
, -1 },

70 { 75, 
B75
, -1 },

71 { 110, 
B110
, -1 },

72 { 134, 
B134
, -1 },

73 { 150, 
B150
, -1 },

74 { 200, 
B200
, -1 },

75 { 300, 
B300
, 3 },

76 { 600, 
B600
 , 4},

77 { 1200, 
B1200
, 5 },

78 { 1800, 
B1800
, -1 },

79 { 2400, 
B2400
, 6 },

80 { 4800, 
B4800
, 7 },

81 { 9600, 
B9600
, 8 },

83 { 19200, 
B19200
, 10 },

85 { 38400, 
B38400
, 12 },

86 { 57600, 
B57600
, 13 },

87 { 115200, 
B115200
, 14 },

88 { 230400, 
B230400
, 15 },

91 
	#BAUD_RATES_LEN
 (((
baud_øãs
Ë/ (
baud_øãs_s
)))

	)

94 
	$gë_baud_øã
(
øã
, *
vÆ
, 
cisco
)

96 
i
;

97 
i
=0; i<
BAUD_RATES_LEN
; i++) {

98 i‡(
cisco
) {

99 i‡(
øã
 =
baud_øãs
[
i
].
cisco_ios_vÆ
) {

100 *
vÆ
 = 
baud_øãs
[
i
].val;

104 i‡(
øã
 =
baud_øãs
[
i
].
ªÆ_øã
) {

105 *
vÆ
 = 
baud_øãs
[
i
].val;

112 
	}
}

115 
	$gë_øã_‰om_baud_øã
(
baud_øã
, *
vÆ
, 
cisco
)

117 
i
;

118 
i
=0; i<
BAUD_RATES_LEN
; i++) {

119 i‡(
baud_øã
 =
baud_øãs
[
i
].
vÆ
) {

120 i‡(
cisco
) {

121 i‡(
baud_øãs
[
i
].
cisco_ios_vÆ
 < 0)

124 *
vÆ
 = 0;

126 *
vÆ
 = 
baud_øãs
[
i
].
cisco_ios_vÆ
;

128 *
vÆ
 = 
baud_øãs
[
i
].
ªÆ_øã
;

133 
	}
}

135 #ifde‡
USE_UUCP_LOCKING


136 *
	guu˝_lck_dú
 = "/var/lock";

139 
	$uu˝_‚ame_lock_size
(*
dev«me
)

141 *
±r
;

143 (
±r
 = 
	`°ºchr
(
dev«me
, '/'));

144 i‡(
±r
 =
NULL
) {

145 
±r
 = 
dev«me
;

147 
±r
 =Ötr + 1;

150  7 + 
	`°æí
(
uu˝_lck_dú
Ë+ såÀn(
±r
);

151 
	}
}

154 
	$uu˝_‚ame_lock
(*
buf
, *
dev«me
)

156 *
±r
;

158 (
±r
 = 
	`°ºchr
(
dev«me
, '/'));

159 i‡(
±r
 =
NULL
) {

160 
±r
 = 
dev«me
;

162 
±r
 =Ötr + 1;

164 
	`•rötf
(
buf
, "%s/LCK..%s", 
uu˝_lck_dú
, 
±r
);

165 
	}
}

168 
	$uu˝_rm_lock
(*
dev«me
)

170 *
lck_fûe
;

172 i‡(!
uu˝_lockög_íabÀd
) ;

174 
lck_fûe
 = 
	`mÆloc
(
	`uu˝_‚ame_lock_size
(
dev«me
));

175 i‡(
lck_fûe
 =
NULL
) {

178 
	`uu˝_‚ame_lock
(
lck_fûe
, 
dev«me
);

179 
	`u∆ök
(
lck_fûe
);

180 
	`‰ì
(
lck_fûe
);

181 
	}
}

185 
	$uu˝_mk_lock
(*
dev«me
)

187 
°©
 
°t
;

188 
pid
 = -1;

190 i‡(!
uu˝_lockög_íabÀd
)

193 i‡(
	`°©
(
uu˝_lck_dú
, &
°t
) == 0) {

194 *
lck_fûe
;

196 
uöt32_t
 
ivÆ
;

197 
°r
[64];

198 } 
buf
;

199 
fd
;

201 
lck_fûe
 = 
	`mÆloc
(
	`uu˝_‚ame_lock_size
(
dev«me
));

202 i‡(
lck_fûe
 =
NULL
)

205 
	`uu˝_‚ame_lock
(
lck_fûe
, 
dev«me
);

207 
pid
 = 0;

208 i‡((
fd
 = 
	`›í
(
lck_fûe
, 
O_RDONLY
)) >= 0) {

209 
n
;

211 
n
 = 
	`ªad
(
fd
, &
buf
, (buf));

212 
	`˛o£
(
fd
);

213 if–
n
 == 4 )

214 
pid
 = 
buf
.
ivÆ
;

215 i‡(
n
 > 0) {

216 
buf
.
°r
[
n
] = 0;

217 
	`ssˇnf
(
buf
.
°r
, "%d", &
pid
);

220 i‡(
pid
 > 0 && 
	`kûl
((
pid_t
Ìid, 0Ë< 0 && 
î∫o
 =
ESRCH
) {

222 
	`u∆ök
(
lck_fûe
);

223 
	`¶ìp
(1);

224 
pid
 = 0;

226 
pid
 = 1;

230 i‡(
pid
 == 0) {

231 
mask
;

233 
mask
 = 
	`umask
(022);

234 
fd
 = 
	`›í
(
lck_fûe
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

235 
	`umask
(
mask
);

236 i‡(
fd
 >= 0) {

237 
ssize_t
 
rv
;

239 
	`¢¥ötf
(
buf
.
°r
, (buf), "%10ld\n",

240 ()
	`gëpid
());

241 
rv
 = 
	`wrôe_fuŒ
(
fd
, 
buf
.
°r
, 
	`°æí
(buf.str));

242 
	`˛o£
(
fd
);

243 i‡(
rv
 < 0) {

244 
pid
 = -1;

245 
	`u∆ök
(
lck_fûe
);

248 
pid
 = -1;

252 
	`‰ì
(
lck_fûe
);

255  
pid
;

256 
	}
}

259 #ifde‡
__CYGWIN__


260 
	$cfmakîaw
(
ãrmios
 *
ãrmios_p
) {

261 
ãrmios_p
->
c_iÊag
 &~(
IGNBRK
|
BRKINT
|
PARMRK
|
ISTRIP
|
INLCR
|
IGNCR
|
ICRNL
|
IXON
);

262 
ãrmios_p
->
c_oÊag
 &~
OPOST
;

263 
ãrmios_p
->
c_lÊag
 &~(
ECHO
|
ECHONL
|
ICANON
|
ISIG
|
IEXTEN
);

264 
ãrmios_p
->
c_cÊag
 &~(
CSIZE
|
PARENB
);

265 
ãrmios_p
->
c_cÊag
 |
CS8
;

266 
	}
}

273 
	$devöô
(
ãrmios
 *
ãrm˘l
)

275 
	`cfmakîaw
(
ãrm˘l
);

276 
	`cf£to•ìd
(
ãrm˘l
, 
B9600
);

277 
	`cf£ti•ìd
(
ãrm˘l
, 
B9600
);

278 
ãrm˘l
->
c_cÊag
 &~(
CSTOPB
);

279 
ãrm˘l
->
c_cÊag
 &~(
CSIZE
);

280 
ãrm˘l
->
c_cÊag
 |
CS8
;

281 
ãrm˘l
->
c_cÊag
 &~(
PARENB
);

282 
ãrm˘l
->
c_cÊag
 &~(
CLOCAL
);

283 
ãrm˘l
->
c_cÊag
 &~(
HUPCL
);

284 
ãrm˘l
->
c_cÊag
 |
CREAD
;

285 
ãrm˘l
->
c_cÊag
 &~(
CRTSCTS
);

286 
ãrm˘l
->
c_iÊag
 &~(
IXON
 | 
IXOFF
 | 
IXANY
);

287 
ãrm˘l
->
c_iÊag
 |
IGNBRK
;

288 
	}
}

294 
devc⁄fig
(
devcfg_d©a
 *
d
, 
absout
 *
eout
, c⁄° *
ö°r
,

295 (*
Ÿhîc⁄fig
)(*
d©a
, 
absout
 *
eout
, c⁄° *
ôem
),

296 *
d©a
)

298 
ãrmios
 *
ãrm˘l
 = &
d
->termctl;

299 *
°r
;

300 *
pos
;

301 *
°πok_d©a
;

302 
rv
 = 0;

304 
	`devöô
(
ãrm˘l
);

306 
°r
 = 
	`°rdup
(
ö°r
);

307 i‡(
°r
 =
NULL
) {

311 
pos
 = 
	`°πok_r
(
°r
, ", \t", &
°πok_d©a
);

312 
pos
 !
NULL
) {

313 i‡(
	`°rcmp
(
pos
, "300") == 0) {

314 
	`cf£to•ìd
(
ãrm˘l
, 
B300
);

315 
	`cf£ti•ìd
(
ãrm˘l
, 
B300
);

316 } i‡(
	`°rcmp
(
pos
, "600") == 0) {

317 
	`cf£to•ìd
(
ãrm˘l
, 
B600
);

318 
	`cf£ti•ìd
(
ãrm˘l
, 
B600
);

319 } i‡(
	`°rcmp
(
pos
, "1200") == 0) {

320 
	`cf£to•ìd
(
ãrm˘l
, 
B1200
);

321 
	`cf£ti•ìd
(
ãrm˘l
, 
B1200
);

322 } i‡(
	`°rcmp
(
pos
, "2400") == 0) {

323 
	`cf£to•ìd
(
ãrm˘l
, 
B2400
);

324 
	`cf£ti•ìd
(
ãrm˘l
, 
B2400
);

325 } i‡(
	`°rcmp
(
pos
, "4800") == 0) {

326 
	`cf£to•ìd
(
ãrm˘l
, 
B4800
);

327 
	`cf£ti•ìd
(
ãrm˘l
, 
B4800
);

328 } i‡(
	`°rcmp
(
pos
, "9600") == 0) {

329 
	`cf£to•ìd
(
ãrm˘l
, 
B9600
);

330 
	`cf£ti•ìd
(
ãrm˘l
, 
B9600
);

331 } i‡(
	`°rcmp
(
pos
, "19200") == 0) {

332 
	`cf£to•ìd
(
ãrm˘l
, 
B19200
);

333 
	`cf£ti•ìd
(
ãrm˘l
, 
B19200
);

334 } i‡(
	`°rcmp
(
pos
, "38400") == 0) {

335 
	`cf£to•ìd
(
ãrm˘l
, 
B38400
);

336 
	`cf£ti•ìd
(
ãrm˘l
, 
B38400
);

337 } i‡(
	`°rcmp
(
pos
, "57600") == 0) {

338 
	`cf£to•ìd
(
ãrm˘l
, 
B57600
);

339 
	`cf£ti•ìd
(
ãrm˘l
, 
B57600
);

340 } i‡(
	`°rcmp
(
pos
, "115200") == 0) {

341 
	`cf£to•ìd
(
ãrm˘l
, 
B115200
);

342 
	`cf£ti•ìd
(
ãrm˘l
, 
B115200
);

343 #ifde‡
B230400


344 } i‡(
	`°rcmp
(
pos
, "230400") == 0) {

345 
	`cf£to•ìd
(
ãrm˘l
, 
B230400
);

346 
	`cf£ti•ìd
(
ãrm˘l
, 
B230400
);

348 #ifde‡
B460800


349 } i‡(
	`°rcmp
(
pos
, "460800") == 0) {

350 
	`cf£to•ìd
(
ãrm˘l
, 
B460800
);

351 
	`cf£ti•ìd
(
ãrm˘l
, 
B460800
);

353 #ifde‡
B500000


354 } i‡(
	`°rcmp
(
pos
, "500000") == 0) {

355 
	`cf£to•ìd
(
ãrm˘l
, 
B500000
);

356 
	`cf£ti•ìd
(
ãrm˘l
, 
B500000
);

358 #ifde‡
B576000


359 } i‡(
	`°rcmp
(
pos
, "576000") == 0) {

360 
	`cf£to•ìd
(
ãrm˘l
, 
B576000
);

361 
	`cf£ti•ìd
(
ãrm˘l
, 
B576000
);

363 #ifde‡
B921600


364 } i‡(
	`°rcmp
(
pos
, "921600") == 0) {

365 
	`cf£to•ìd
(
ãrm˘l
, 
B921600
);

366 
	`cf£ti•ìd
(
ãrm˘l
, 
B921600
);

368 #ifde‡
B1000000


369 } i‡(
	`°rcmp
(
pos
, "1000000") == 0) {

370 
	`cf£to•ìd
(
ãrm˘l
, 
B1000000
);

371 
	`cf£ti•ìd
(
ãrm˘l
, 
B1000000
);

373 #ifde‡
B1152000


374 } i‡(
	`°rcmp
(
pos
, "1152000") == 0) {

375 
	`cf£to•ìd
(
ãrm˘l
, 
B1152000
);

376 
	`cf£ti•ìd
(
ãrm˘l
, 
B1152000
);

378 #ifde‡
B1500000


379 } i‡(
	`°rcmp
(
pos
, "1500000") == 0) {

380 
	`cf£to•ìd
(
ãrm˘l
, 
B1500000
);

381 
	`cf£ti•ìd
(
ãrm˘l
, 
B1500000
);

383 #ifde‡
B2000000


384 } i‡(
	`°rcmp
(
pos
, "2000000") == 0) {

385 
	`cf£to•ìd
(
ãrm˘l
, 
B2000000
);

386 
	`cf£ti•ìd
(
ãrm˘l
, 
B2000000
);

388 #ifde‡
B2500000


389 } i‡(
	`°rcmp
(
pos
, "2500000") == 0) {

390 
	`cf£to•ìd
(
ãrm˘l
, 
B2500000
);

391 
	`cf£ti•ìd
(
ãrm˘l
, 
B2500000
);

393 #ifde‡
B3000000


394 } i‡(
	`°rcmp
(
pos
, "3000000") == 0) {

395 
	`cf£to•ìd
(
ãrm˘l
, 
B3000000
);

396 
	`cf£ti•ìd
(
ãrm˘l
, 
B3000000
);

398 #ifde‡
B3500000


399 } i‡(
	`°rcmp
(
pos
, "3500000") == 0) {

400 
	`cf£to•ìd
(
ãrm˘l
, 
B3500000
);

401 
	`cf£ti•ìd
(
ãrm˘l
, 
B3500000
);

403 #ifde‡
B4000000


404 } i‡(
	`°rcmp
(
pos
, "4000000") == 0) {

405 
	`cf£to•ìd
(
ãrm˘l
, 
B4000000
);

406 
	`cf£ti•ìd
(
ãrm˘l
, 
B4000000
);

408 } i‡(
	`°rcmp
(
pos
, "1STOPBIT") == 0) {

409 
ãrm˘l
->
c_cÊag
 &~(
CSTOPB
);

410 } i‡(
	`°rcmp
(
pos
, "2STOPBITS") == 0) {

411 
ãrm˘l
->
c_cÊag
 |
CSTOPB
;

412 } i‡(
	`°rcmp
(
pos
, "7DATABITS") == 0) {

413 
ãrm˘l
->
c_cÊag
 &~(
CSIZE
);

414 
ãrm˘l
->
c_cÊag
 |
CS7
;

415 } i‡(
	`°rcmp
(
pos
, "8DATABITS") == 0) {

416 
ãrm˘l
->
c_cÊag
 &~(
CSIZE
);

417 
ãrm˘l
->
c_cÊag
 |
CS8
;

418 } i‡(
	`°rcmp
(
pos
, "NONE") == 0) {

419 
ãrm˘l
->
c_cÊag
 &~(
PARENB
);

420 } i‡(
	`°rcmp
(
pos
, "EVEN") == 0) {

421 
ãrm˘l
->
c_cÊag
 |
PARENB
;

422 
ãrm˘l
->
c_cÊag
 &~(
PARODD
);

423 } i‡(
	`°rcmp
(
pos
, "ODD") == 0) {

424 
ãrm˘l
->
c_cÊag
 |
PARENB
 | 
PARODD
;

425 } i‡(
	`°rcmp
(
pos
, "XONXOFF") == 0) {

426 
ãrm˘l
->
c_iÊag
 |(
IXON
 | 
IXOFF
 | 
IXANY
);

427 
ãrm˘l
->
c_cc
[
VSTART
] = 17;

428 
ãrm˘l
->
c_cc
[
VSTOP
] = 19;

429 } i‡(
	`°rcmp
(
pos
, "-XONXOFF") == 0) {

430 
ãrm˘l
->
c_iÊag
 &~(
IXON
 | 
IXOFF
 | 
IXANY
);

431 } i‡(
	`°rcmp
(
pos
, "RTSCTS") == 0) {

432 
ãrm˘l
->
c_cÊag
 |
CRTSCTS
;

433 } i‡(
	`°rcmp
(
pos
, "-RTSCTS") == 0) {

434 
ãrm˘l
->
c_cÊag
 &~
CRTSCTS
;

435 } i‡(
	`°rcmp
(
pos
, "LOCAL") == 0) {

436 
ãrm˘l
->
c_cÊag
 |
CLOCAL
;

437 } i‡(
	`°rcmp
(
pos
, "-LOCAL") == 0) {

438 
ãrm˘l
->
c_cÊag
 &~
CLOCAL
;

439 } i‡(
	`°rcmp
(
pos
, "HANGUP_WHEN_DONE") == 0) {

440 
ãrm˘l
->
c_cÊag
 |
HUPCL
;

441 } i‡(
	`°rcmp
(
pos
, "-HANGUP_WHEN_DONE") == 0) {

442 
ãrm˘l
->
c_cÊag
 &~
HUPCL
;

443 } i‡(
	`°rcmp
(
pos
, "NOBREAK") == 0) {

444 
d
->
dißbÀbªak
 = 1;

446 i‡(
	`Ÿhîc⁄fig
(
d©a
, 
eout
, 
pos
) == -1)

447 
out
;

450 
pos
 = 
	`°πok_r
(
NULL
, ", \t", &
°πok_d©a
);

453 #ifde‡
USE_RS485_FEATURE


454 
d
->
c⁄f
 = 
	`gë_rs485_c⁄f
(
d©a
);

456 
out
:

457 
	`‰ì
(
°r
);

458  
rv
;

459 
	}
}

462 
	$baud_°rög
(
•ìd
)

464 *
°r
;

465 
•ìd
) {

466 
B300
: 
°r
 = "300"; ;

467 
B600
: 
°r
 = "600"; ;

468 
B1200
: 
°r
 = "1200"; ;

469 
B2400
: 
°r
 = "2400"; ;

470 
B4800
: 
°r
 = "4800"; ;

471 
B9600
: 
°r
 = "9600"; ;

472 
B19200
: 
°r
 = "19200"; ;

473 
B38400
: 
°r
 = "38400"; ;

474 
B57600
: 
°r
 = "57600"; ;

475 
B115200
: 
°r
 = "115200"; ;

476 #ifde‡
B230400


477 
B230400
: 
°r
 = "230400"; ;

479 #ifde‡
B460800


480 
B460800
: 
°r
 = "460800"; ;

482 #ifde‡
B500000


483 
B500000
: 
°r
 = "500000"; ;

485 #ifde‡
B576000


486 
B576000
: 
°r
 = "576000"; ;

488 #ifde‡
B921600


489 
B921600
: 
°r
 = "921600"; ;

491 #ifde‡
B1000000


492 
B1000000
: 
°r
 = "1000000"; ;

494 #ifde‡
B1152000


495 
B1152000
: 
°r
 = "1152000"; ;

497 #ifde‡
B1500000


498 
B1500000
: 
°r
 = "1500000"; ;

500 #ifde‡
B2000000


501 
B2000000
: 
°r
 = "2000000"; ;

503 #ifde‡
B2500000


504 
B2500000
: 
°r
 = "2500000"; ;

506 #ifde‡
B3000000


507 
B3000000
: 
°r
 = "3000000"; ;

509 #ifde‡
B3500000


510 
B3500000
: 
°r
 = "3500000"; ;

512 #ifde‡
B4000000


513 
B4000000
: 
°r
 = "4000000"; ;

515 : 
°r
 = "unknown speed";

517  
°r
;

518 
	}
}

521 
	$devcfg_£Ω¨m_to_°r
(
devio
 *
io
, *
°r
, 
°æí
)

523 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

524 
ãrmios
 *
ãrm˘l
 = &
d
->termctl;

525 
•ìd_t
 
•ìd
 = 
	`cfgëo•ìd
(
ãrm˘l
);

526 
°›bôs
 = 
ãrm˘l
->
c_cÊag
 & 
CSTOPB
;

527 
d©abôs
 = 
ãrm˘l
->
c_cÊag
 & 
CSIZE
;

528 
∑rôy_íabÀd
 = 
ãrm˘l
->
c_cÊag
 & 
PARENB
;

529 
∑rôy
 = 
ãrm˘l
->
c_cÊag
 & 
PARODD
;

530 *
s°r
;

531 
pch¨
, 
sch¨
, 
dch¨
;

533 
s°r
 = 
	`baud_°rög
(
•ìd
);

535 i‡(
°›bôs
)

536 
sch¨
 = '2';

538 
sch¨
 = '1';

540 
d©abôs
) {

541 
CS7
: 
dch¨
 = '7'; ;

542 
CS8
: 
dch¨
 = '8'; ;

543 : 
dch¨
 = '?';

546 i‡(
∑rôy_íabÀd
) {

547 i‡(
∑rôy
) {

548 
pch¨
 = 'O';

550 
pch¨
 = 'E';

553 
pch¨
 = 'N';

556 
	`¢¥ötf
(
°r
, 
°æí
, "%†%c%c%c", 
s°r
, 
pch¨
, 
dch¨
, 
sch¨
);

557 
	}
}

561 
	$devcfg_show_devcfg
(
devio
 *
io
, 
absout
 *
out
)

563 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

564 
ãrmios
 *
ãrm˘l
 = &
d
->termctl;

566 
•ìd_t
 
•ìd
 = 
	`cfgëo•ìd
(
ãrm˘l
);

567 
°›bôs
 = 
ãrm˘l
->
c_cÊag
 & 
CSTOPB
;

568 
d©abôs
 = 
ãrm˘l
->
c_cÊag
 & 
CSIZE
;

569 
∑rôy_íabÀd
 = 
ãrm˘l
->
c_cÊag
 & 
PARENB
;

570 
∑rôy
 = 
ãrm˘l
->
c_cÊag
 & 
PARODD
;

571 
x⁄
 = 
ãrm˘l
->
c_iÊag
 & 
IXON
;

572 
xoff
 = 
ãrm˘l
->
c_iÊag
 & 
IXOFF
;

573 
x™y
 = 
ãrm˘l
->
c_iÊag
 & 
IXANY
;

574 
Êow_πs˘s
 = 
ãrm˘l
->
c_cÊag
 & 
CRTSCTS
;

575 
˛oˇl
 = 
ãrm˘l
->
c_cÊag
 & 
CLOCAL
;

576 
h™gup_whí_d⁄e
 = 
ãrm˘l
->
c_cÊag
 & 
HUPCL
;

577 *
°r
;

579 
out
->
	`out
(out, "%†", 
	`baud_°rög
(
•ìd
));

581 i‡(
x⁄
 && 
xoff
 && 
x™y
) {

582 
out
->
	`out
(out, "XONXOFF ");

585 i‡(
Êow_πs˘s
) {

586 
out
->
	`out
(out, "RTSCTS ");

589 i‡(
˛oˇl
) {

590 
out
->
	`out
(out, "LOCAL ");

593 i‡(
h™gup_whí_d⁄e
) {

594 
out
->
	`out
(out, "HANGUP_WHEN_DONE ");

597 i‡(
°›bôs
) {

598 
°r
 = "2STOPBITS";

600 
°r
 = "1STOPBIT";

602 
out
->
	`out
(out, "%†", 
°r
);

604 
d©abôs
) {

605 
CS7
: 
°r
 = "7DATABITS"; ;

606 
CS8
: 
°r
 = "8DATABITS"; ;

607 : 
°r
 = "unknown databits";

609 
out
->
	`out
(out, "%†", 
°r
);

611 i‡(
∑rôy_íabÀd
) {

612 i‡(
∑rôy
) {

613 
°r
 = "ODD";

615 
°r
 = "EVEN";

618 
°r
 = "NONE";

620 
out
->
	`out
(out, "%s", 
°r
);

621 
	}
}

624 
	$devcfg_£t_devc⁄åﬁ
(
devio
 *
io
, c⁄° *
ö°r
)

626 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

627 
fd
 = 
d
->
devfd
;

628 
rv
 = 0;

629 *
°r
;

630 *
pos
;

631 
°©us
;

632 *
°πok_d©a
;

634 
°r
 = 
	`mÆloc
(
	`°æí
(
ö°r
) + 1);

635 i‡(
°r
 =
NULL
) {

639 
	`°r˝y
(
°r
, 
ö°r
);

641 
pos
 = 
	`°πok_r
(
°r
, " \t", &
°πok_d©a
);

642 
pos
 !
NULL
) {

643 i‡(
	`°rcmp
(
pos
, "RTSHI") == 0) {

644 
	`io˘l
(
fd
, 
TIOCMGET
, &
°©us
);

645 
°©us
 |
TIOCM_RTS
;

646 
	`io˘l
(
fd
, 
TIOCMSET
, &
°©us
);

647 } i‡(
	`°rcmp
(
pos
, "RTSLO") == 0) {

648 
	`io˘l
(
fd
, 
TIOCMGET
, &
°©us
);

649 
°©us
 &~
TIOCM_RTS
;

650 
	`io˘l
(
fd
, 
TIOCMSET
, &
°©us
);

651 } i‡(
	`°rcmp
(
pos
, "DTRHI") == 0) {

652 
	`io˘l
(
fd
, 
TIOCMGET
, &
°©us
);

653 
°©us
 |
TIOCM_DTR
;

654 
	`io˘l
(
fd
, 
TIOCMSET
, &
°©us
);

655 } i‡(
	`°rcmp
(
pos
, "DTRLO") == 0) {

656 
	`io˘l
(
fd
, 
TIOCMGET
, &
°©us
);

657 
°©us
 &~
TIOCM_DTR
;

658 
	`io˘l
(
fd
, 
TIOCMSET
, &
°©us
);

660 
rv
 = -1;

661 
out
;

664 
pos
 = 
	`°πok_r
(
NULL
, " \t", &
°πok_d©a
);

667 
out
:

668 
	`‰ì
(
°r
);

669  
rv
;

670 
	}
}

673 
	$devcfg_show_devc⁄åﬁ
(
devio
 *
io
, 
absout
 *
out
)

675 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

676 *
°r
;

677 
°©us
;

679 
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
°©us
);

681 i‡(
°©us
 & 
TIOCM_RTS
) {

682 
°r
 = "RTSHI";

684 
°r
 = "RTSLO";

686 
out
->
	`out
(out, "%†", 
°r
);

688 i‡(
°©us
 & 
TIOCM_DTR
) {

689 
°r
 = "DTRHI";

691 
°r
 = "DTRLO";

693 
out
->
	`out
(out, "%†", 
°r
);

694 
	}
}

697 
	$do_ªad
(
fd
, *
d©a
)

699 
devio
 *
io
 = 
d©a
;

700 
io
->
	`ªad_h™dÀr
(io);

701 
	}
}

704 
	$do_wrôe
(
fd
, *
d©a
)

706 
devio
 *
io
 = 
d©a
;

707 
io
->
	`wrôe_h™dÀr
(io);

708 
	}
}

711 
	$do_ex˚±
(
fd
, *
d©a
)

713 
devio
 *
io
 = 
d©a
;

714 
io
->
	`ex˚±_h™dÀr
(io);

715 
	}
}

717 
	$devcfg_£tup
(
devio
 *
io
, c⁄° *
«me
, c⁄° **
îr°r
)

719 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

720 
›ti⁄s
;

722 #ifde‡
USE_UUCP_LOCKING


724 
rv
;

726 
rv
 = 
	`uu˝_mk_lock
(
io
->
dev«me
);

727 i‡(
rv
 > 0 ) {

728 *
îr°r
 = "Portálready in use byánotherÖrocess\n\r";

730 } i‡(
rv
 < 0) {

731 *
îr°r
 = "Error creatingÖortÜock file\n\r";

739 
›ti⁄s
 = 
O_NONBLOCK
 | 
O_NOCTTY
;

740 i‡(
io
->
ªad_dißbÀd
) {

741 
›ti⁄s
 |
O_WRONLY
;

743 
›ti⁄s
 |
O_RDWR
;

745 
d
->
devfd
 = 
	`›í
(
io
->
dev«me
, 
›ti⁄s
);

746 i‡(
d
->
devfd
 == -1) {

747 
	`sy¶og
(
LOG_ERR
, "CouldÇot open device %s forÖort %s: %m",

748 
io
->
dev«me
,

749 
«me
);

750 #ifde‡
USE_UUCP_LOCKING


751 
	`uu˝_rm_lock
(
io
->
dev«me
);

756 i‡(!
io
->
ªad_dißbÀd
 && !
d
->
dißbÀbªak


757 && 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &d->
ãrm˘l
) == -1)

759 
	`˛o£
(
d
->
devfd
);

760 
d
->
devfd
 = -1;

761 
	`sy¶og
(
LOG_ERR
, "CouldÇot set up device %s forÖort %s: %m",

762 
io
->
dev«me
,

763 
«me
);

764 #ifde‡
USE_UUCP_LOCKING


765 
	`uu˝_rm_lock
(
io
->
dev«me
);

771 i‡(!
io
->
ªad_dißbÀd
 && 
	`io˘l
(
d
->
devfd
, 
TIOCCBRK
) == -1) {

773 
	`sy¶og
(
LOG_ERR
, "CouldÇotÅurn off break for device %sÖort %s: %m",

774 
io
->
dev«me
,

775 
«me
);

778 #ifde‡
USE_RS485_FEATURE


779 i‡(
d
->
c⁄f
) {

780 i‡(
d
->
c⁄f
->
Êags
 & 
SER_RS485_ENABLED
) {

781 i‡(
	`io˘l
(
d
->
devfd
 , 
TIOCSRS485
, d->
c⁄f
 ) < 0) {

782 
	`sy¶og
(
LOG_ERR
, "CouldÇot set RS485 config for device %sÖort %s: %m",

783 
io
->
dev«me
,

784 
«me
);

791 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
, 
d
->
devfd
, 
io
,

792 
io
->
ªad_dißbÀd
 ? 
NULL
 : 
do_ªad
,

793 
do_wrôe
, 
do_ex˚±
);

795 
	}
}

797 
	$devcfg_shutdown
(
devio
 *
io
)

799 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

803 i‡(
d
->
devfd
 != -1) {

804 
	`£l_˛ór_fd_h™dÀrs
(
£r2√t_£l
, 
d
->
devfd
);

805 
	`tcÊush
(
d
->
devfd
, 
TCOFLUSH
);

806 
	`˛o£
(
d
->
devfd
);

807 
d
->
devfd
 = -1;

809 #ifde‡
USE_UUCP_LOCKING


810 
	`uu˝_rm_lock
(
io
->
dev«me
);

812 
	}
}

814 
	$devcfg_ªad
(
devio
 *
io
, *
buf
, 
size_t
 
size
)

816 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

818  
	`ªad
(
d
->
devfd
, 
buf
, 
size
);

819 
	}
}

821 
	$devcfg_wrôe
(
devio
 *
io
, *
buf
, 
size_t
 
size
)

823 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

825  
	`wrôe
(
d
->
devfd
, 
buf
, 
size
);

826 
	}
}

828 
	$devcfg_ªad_h™dÀr_íabÀ
(
devio
 *
io
, 
íabÀd
)

830 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

832 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
d
->
devfd
,

833 
íabÀd
 ? 
SEL_FD_HANDLER_ENABLED
 :

834 
SEL_FD_HANDLER_DISABLED
);

835 
	}
}

837 
	$devcfg_wrôe_h™dÀr_íabÀ
(
devio
 *
io
, 
íabÀd
)

839 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

841 
	`£l_£t_fd_wrôe_h™dÀr
(
£r2√t_£l
, 
d
->
devfd
,

842 
íabÀd
 ? 
SEL_FD_HANDLER_ENABLED
 :

843 
SEL_FD_HANDLER_DISABLED
);

844 
	}
}

846 
	$devcfg_ex˚±_h™dÀr_íabÀ
(
devio
 *
io
, 
íabÀd
)

848 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

850 
	`£l_£t_fd_ex˚±_h™dÀr
(
£r2√t_£l
, 
d
->
devfd
,

851 
íabÀd
 ? 
SEL_FD_HANDLER_ENABLED
 :

852 
SEL_FD_HANDLER_DISABLED
);

853 
	}
}

855 
	$devcfg_£nd_bªak
(
devio
 *
io
)

857 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

859 
	`tc£ndbªak
(
d
->
devfd
, 0);

861 
	}
}

863 
	$devcfg_gë_modem_°©e
(
devio
 *
io
, *
modem°©e
)

865 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

866 
vÆ
;

868 i‡(
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
vÆ
) != -1)

871 *
modem°©e
 = 0;

872 i‡(
vÆ
 & 
TIOCM_CD
)

873 *
modem°©e
 |= 0x80;

874 i‡(
vÆ
 & 
TIOCM_RI
)

875 *
modem°©e
 |= 0x40;

876 i‡(
vÆ
 & 
TIOCM_DSR
)

877 *
modem°©e
 |= 0x20;

878 i‡(
vÆ
 & 
TIOCM_CTS
)

879 *
modem°©e
 |= 0x10;

881 
	}
}

883 
	$devcfg_baud_øã
(
devio
 *
io
, *
vÆ
, 
cisco
)

885 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

886 
ãrmios
 
ãrmio
;

888 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) == -1) {

889 *
vÆ
 = 0;

893 i‡((*
vÆ
 !0Ë&& (
	`gë_baud_øã
(*vÆ, vÆ, 
cisco
))) {

895 
	`cf£ti•ìd
(&
ãrmio
, *
vÆ
);

896 
	`cf£to•ìd
(&
ãrmio
, *
vÆ
);

897 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

900 
	`tcgë©å
(
d
->
devfd
, &
ãrmio
);

901 *
vÆ
 = 
	`cfgëi•ìd
(&
ãrmio
);

902 
	`gë_øã_‰om_baud_øã
(*
vÆ
, vÆ, 
cisco
);

905 
	}
}

907 
	$devcfg_d©a_size
(
devio
 *
io
, *
vÆ
)

909 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

910 
ãrmios
 
ãrmio
;

912 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) == -1) {

913 *
vÆ
 = 0;

917 i‡((*
vÆ
 >= 5) && (*val <= 8)) {

918 
ãrmio
.
c_cÊag
 &~
CSIZE
;

919 *
vÆ
) {

920 5: 
ãrmio
.
c_cÊag
 |
CS5
; ;

921 6: 
ãrmio
.
c_cÊag
 |
CS6
; ;

922 7: 
ãrmio
.
c_cÊag
 |
CS7
; ;

923 8: 
ãrmio
.
c_cÊag
 |
CS8
; ;

925 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

928 
ãrmio
.
c_cÊag
 & 
CSIZE
) {

929 
CS5
: *
vÆ
 = 5; ;

930 
CS6
: *
vÆ
 = 6; ;

931 
CS7
: *
vÆ
 = 7; ;

932 
CS8
: *
vÆ
 = 8; ;

933 : *
vÆ
 = 0;

937 
	}
}

939 
	$devcfg_∑rôy
(
devio
 *
io
, *
vÆ
)

941 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

942 
ãrmios
 
ãrmio
;

944 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) == -1) {

945 *
vÆ
 = 0;

950 i‡((*
vÆ
 >= 1) && (*val <= 3)) {

951 
ãrmio
.
c_cÊag
 &~(
PARENB
 | 
PARODD
);

952 *
vÆ
) {

954 2: 
ãrmio
.
c_cÊag
 |
PARENB
 | 
PARODD
; ;

955 3: 
ãrmio
.
c_cÊag
 |
PARENB
; ;

957 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

960 i‡(
ãrmio
.
c_cÊag
 & 
PARENB
) {

961 i‡(
ãrmio
.
c_cÊag
 & 
PARODD
)

962 *
vÆ
 = 2;

964 *
vÆ
 = 3;

966 *
vÆ
 = 1;

969 
	}
}

971 
	$devcfg_°›_size
(
devio
 *
io
, *
vÆ
)

973 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

974 
ãrmios
 
ãrmio
;

976 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) == -1) {

977 *
vÆ
 = 0;

981 i‡((*
vÆ
 >= 1) && (*val <= 2)) {

982 
ãrmio
.
c_cÊag
 &~
CSTOPB
;

983 *
vÆ
) {

985 2: 
ãrmio
.
c_cÊag
 |
CSTOPB
; ;

987 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

990 i‡(
ãrmio
.
c_cÊag
 & 
CSTOPB
)

991 *
vÆ
 = 2;

993 *
vÆ
 = 1;

996 
	}
}

998 
	$devcfg_Êow_c⁄åﬁ
(
devio
 *
io
, 
vÆ
)

1000 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

1002 
	`tcÊow
(
d
->
devfd
, 
vÆ
 ? 
TCIOFF
 : 
TCION
);

1004 
	}
}

1006 
	$devcfg_c⁄åﬁ
(
devio
 *
io
, *
vÆ
)

1008 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

1009 
ãrmios
 
ãrmio
;

1010 
ivÆ
;

1012 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) == -1) {

1013 *
vÆ
 = 0;

1017 *
vÆ
) {

1023 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) != -1) {

1024 i‡(*
vÆ
 != 0) {

1025 
ãrmio
.
c_iÊag
 &~(
IXON
 | 
IXOFF
);

1026 
ãrmio
.
c_cÊag
 &~
CRTSCTS
;

1027 *
vÆ
) {

1029 2: 
ãrmio
.
c_iÊag
 |
IXON
 | 
IXOFF
; ;

1030 3: 
ãrmio
.
c_cÊag
 |
CRTSCTS
; ;

1032 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

1034 i‡(
ãrmio
.
c_cÊag
 & 
CRTSCTS
)

1035 *
vÆ
 = 3;

1036 i‡(
ãrmio
.
c_iÊag
 & 
IXON
)

1037 *
vÆ
 = 2;

1039 *
vÆ
 = 1;

1051 i‡(
	`tcgë©å
(
d
->
devfd
, &
ãrmio
) != -1) {

1052 i‡(*
vÆ
 == 15) {

1054 
ãrmio
.
c_iÊag
 |
IXOFF
;

1055 
	`tc£èâr
(
d
->
devfd
, 
TCSANOW
, &
ãrmio
);

1057 i‡(
ãrmio
.
c_cÊag
 & 
CRTSCTS
)

1058 *
vÆ
 = 16;

1059 i‡(
ãrmio
.
c_iÊag
 & 
IXOFF
)

1060 *
vÆ
 = 15;

1062 *
vÆ
 = 14;

1068 i‡(
	`io˘l
(
d
->
devfd
, 
TIOCCBRK
) != -1)

1069 
d
->
bªak_£t
 = 0;

1070 
ªad_bªak_vÆ
;

1073 i‡(
	`io˘l
(
d
->
devfd
, 
TIOCSBRK
) != -1)

1074 
d
->
bªak_£t
 = 1;

1075 
ªad_bªak_vÆ
;

1078 
ªad_bªak_vÆ
:

1079 i‡(
d
->
bªak_£t
)

1080 *
vÆ
 = 5;

1082 *
vÆ
 = 6;

1087 #i‚de‡
__CYGWIN__


1088 
ivÆ
 = 
TIOCM_DTR
;

1089 
	`io˘l
(
d
->
devfd
, 
TIOCMBIS
, &
ivÆ
);

1091 
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
);

1092 
ivÆ
 |
TIOCM_DTR
;

1093 
	`io˘l
(
d
->
devfd
, 
TIOCMSET
, &
ivÆ
);

1095 
ªad_då_vÆ
;

1098 #i‚de‡
__CYGWIN__


1099 
ivÆ
 = 
TIOCM_DTR
;

1100 
	`io˘l
(
d
->
devfd
, 
TIOCMBIC
, &
ivÆ
);

1102 
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
);

1103 
ivÆ
 &~
TIOCM_DTR
;

1104 
	`io˘l
(
d
->
devfd
, 
TIOCMSET
, &
ivÆ
);

1106 
ªad_då_vÆ
;

1109 
ªad_då_vÆ
:

1110 i‡(
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
) == -1)

1111 *
vÆ
 = 7;

1112 i‡(
ivÆ
 & 
TIOCM_DTR
)

1113 *
vÆ
 = 8;

1115 *
vÆ
 = 9;

1120 #i‚de‡
__CYGWIN__


1121 
ivÆ
 = 
TIOCM_RTS
;

1122 
	`io˘l
(
d
->
devfd
, 
TIOCMBIS
, &
ivÆ
);

1124 
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
);

1125 
ivÆ
 |
TIOCM_RTS
;

1126 
	`io˘l
(
d
->
devfd
, 
TIOCMSET
, &
ivÆ
);

1128 
ªad_πs_vÆ
;

1131 #i‚de‡
__CYGWIN__


1132 
ivÆ
 = 
TIOCM_RTS
;

1133 
	`io˘l
(
d
->
devfd
, 
TIOCMBIC
, &
ivÆ
);

1135 
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
);

1136 
ivÆ
 &~
TIOCM_RTS
;

1137 
	`io˘l
(
d
->
devfd
, 
TIOCMSET
, &
ivÆ
);

1139 
ªad_πs_vÆ
;

1142 
ªad_πs_vÆ
:

1143 i‡(
	`io˘l
(
d
->
devfd
, 
TIOCMGET
, &
ivÆ
) == -1)

1144 *
vÆ
 = 10;

1145 i‡(
ivÆ
 & 
TIOCM_RTS
)

1146 *
vÆ
 = 11;

1148 *
vÆ
 = 12;

1152 *
vÆ
 = 0;

1157 
	}
}

1159 
	$devcfg_Êush
(
devio
 *
io
, *
vÆ
)

1161 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

1162 
ivÆ
;

1164 *
vÆ
) {

1165 1: 
ivÆ
 = 
TCIFLUSH
; 
purge_found
;

1166 2: 
ivÆ
 = 
TCOFLUSH
; 
purge_found
;

1167 3: 
ivÆ
 = 
TCIOFLUSH
; 
purge_found
;

1169 *
vÆ
 = 0;

1171 
purge_found
:

1172 
	`tcÊush
(
d
->
devfd
, 
ivÆ
);

1174 
	}
}

1176 
	$devcfg_‰ì
(
devio
 *
io
)

1178 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

1180 i‡(
d
->
devfd
 != -1)

1181 
	`˛o£
(
d
->
devfd
);

1182 
io
->
my_d©a
 = 
NULL
;

1183 
	`‰ì
(
d
);

1184 
	}
}

1187 
devcfg_ªc⁄fig
(
devio
 *
io
, 
absout
 *
eout
, c⁄° *
ö°r
,

1188 (*
Ÿhîc⁄fig
)(*
d©a
, 
absout
 *
eout
,

1189 c⁄° *
ôem
),

1190 *
d©a
)

1192 
devcfg_d©a
 *
d
 = 
io
->
my_d©a
;

1194  
	`devc⁄fig
(
d
, 
eout
, 
ö°r
, 
Ÿhîc⁄fig
, 
d©a
);

1195 
	}
}

1197 
devio_f
 
	gdevcfg_io_f
 = {

1198 .
£tup
 = 
devcfg_£tup
,

1199 .
	gshutdown
 = 
devcfg_shutdown
,

1200 .
	gªc⁄fig
 = 
devcfg_ªc⁄fig
,

1201 .
	gªad
 = 
devcfg_ªad
,

1202 .
	gwrôe
 = 
devcfg_wrôe
,

1203 .
	gªad_h™dÀr_íabÀ
 = 
devcfg_ªad_h™dÀr_íabÀ
,

1204 .
	gwrôe_h™dÀr_íabÀ
 = 
devcfg_wrôe_h™dÀr_íabÀ
,

1205 .
	gex˚±_h™dÀr_íabÀ
 = 
devcfg_ex˚±_h™dÀr_íabÀ
,

1206 .
	g£nd_bªak
 = 
devcfg_£nd_bªak
,

1207 .
	ggë_modem_°©e
 = 
devcfg_gë_modem_°©e
,

1208 .
	g£t_devc⁄åﬁ
 = 
devcfg_£t_devc⁄åﬁ
,

1209 .
	gshow_devc⁄åﬁ
 = 
devcfg_show_devc⁄åﬁ
,

1210 .
	gshow_devcfg
 = 
devcfg_show_devcfg
,

1211 .
	gbaud_øã
 = 
devcfg_baud_øã
,

1212 .
	gd©a_size
 = 
devcfg_d©a_size
,

1213 .
	g∑rôy
 = 
devcfg_∑rôy
,

1214 .
	g°›_size
 = 
devcfg_°›_size
,

1215 .
	gc⁄åﬁ
 = 
devcfg_c⁄åﬁ
,

1216 .
	gÊow_c⁄åﬁ
 = 
devcfg_Êow_c⁄åﬁ
,

1217 .
	gÊush
 = 
devcfg_Êush
,

1218 .
	g‰ì
 = 
devcfg_‰ì
,

1219 .
	g£Ω¨m_to_°r
 = 
devcfg_£Ω¨m_to_°r


1223 
devcfg_öô
(
devio
 *
io
, 
absout
 *
eout
, c⁄° *
ö°r
,

1224 (*
Ÿhîc⁄fig
)(*
d©a
, 
absout
 *
eout
,

1225 c⁄° *
ôem
),

1226 *
d©a
)

1228 
devcfg_d©a
 *
d
;

1230 
d
 = 
	`mÆloc
((*d));

1231 i‡(!
d
)

1233 
	`mem£t
(
d
, 0, (*d));

1234 
d
->
devfd
 = -1;

1236 i‡(
	`devc⁄fig
(
d
, 
eout
, 
ö°r
, 
Ÿhîc⁄fig
, 
d©a
) == -1) {

1237 
	`‰ì
(
d
);

1241 
io
->
my_d©a
 = 
d
;

1242 
io
->
f
 = &
devcfg_io_f
;

1244 
	}
}

	@devio.h

20 #i‚de‡
SER2NET_IO_H


21 
	#SER2NET_IO_H


	)

23 
	gabsout
;

24 
	gdevio_f
;

26 
	sdevio
 {

27 *
	mdev«me
;

28 
	mªad_dißbÀd
;

30 *
	mmy_d©a
;

31 
devio_f
 *
	mf
;

33 *
	mu£r_d©a
;

34 (*
	mªad_h™dÀr
)(
devio
 *
	mio
);

35 (*
	mwrôe_h™dÀr
)(
devio
 *
	mio
);

36 (*
	mex˚±_h™dÀr
)(
devio
 *
	mio
);

37 (*
	mmodem_°©e_h™dÀr
)(
devio
 *
	mio
, 
	mmodem_°©e
);

40 
	sdevio_f
 {

41 (*
	m£tup
)(
devio
 *
	mio
, c⁄° *
	m«me
, c⁄° **
	mîr°r
);

42 (*
	mshutdown
)(
devio
 *
	mio
);

43 (*
	mªc⁄fig
)(
devio
 *
	mio
, 
absout
 *
	meout
, c⁄° *
	mö°r
,

44 (*
	mŸhîc⁄fig
)(*
	md©a
, 
absout
 *
	meout
,

45 c⁄° *
	môem
),

46 *
	md©a
);

47 (*
	mªad
)(
devio
 *
	mio
, *
	mbuf
, 
size_t
 
	msize
);

48 (*
	mwrôe
)(
devio
 *
	mio
, *
	mbuf
, 
size_t
 
	msize
);

49 (*
	mªad_h™dÀr_íabÀ
)(
devio
 *
	mio
, 
	míabÀd
);

50 (*
	mwrôe_h™dÀr_íabÀ
)(
devio
 *
	mio
, 
	míabÀd
);

51 (*
	mex˚±_h™dÀr_íabÀ
)(
devio
 *
	mio
, 
	míabÀd
);

52 (*
	m£nd_bªak
)(
devio
 *
	mio
);

53 (*
	mgë_modem_°©e
)(
devio
 *
	mio
, *
	mvÆ
);

54 (*
	m£t_devc⁄åﬁ
)(
devio
 *
	mio
, c⁄° *
	mc⁄åﬁs
);

55 (*
	mshow_devc⁄åﬁ
)(
devio
 *
	mio
, 
absout
 *
	mout
);

56 (*
	mshow_devcfg
)(
devio
 *
	mio
, 
absout
 *
	mout
);

57 (*
	mbaud_øã
)(
devio
 *
	mio
, *
	mvÆ
, 
	mcisco
);

58 (*
	md©a_size
)(
devio
 *
	mio
, *
	mvÆ
);

59 (*
	m∑rôy
)(
devio
 *
	mio
, *
	mvÆ
);

60 (*
	m°›_size
)(
devio
 *
	mio
, *
	mvÆ
);

61 (*
	mc⁄åﬁ
)(
devio
 *
	mio
, *
	mvÆ
);

62 (*
	mÊow_c⁄åﬁ
)(
devio
 *
	mio
, 
	mvÆ
);

63 (*
	mÊush
)(
devio
 *
	mio
, *
	mvÆ
);

64 (*
	m£Ω¨m_to_°r
)(
devio
 *
	mio
, *
	m°r
, 
	m°æí
);

65 (*
	m‰ì
)(
devio
 *
	mio
);

	@readconfig.c

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<°dio.h
>

27 
	~<sy¶og.h
>

28 
	~<°d¨g.h
>

30 
	~"d©ax„r.h
"

31 
	~"ªadc⁄fig.h
"

32 
	~"utûs.h
"

33 
	~"ã ë.h
"

35 
	#MAX_LINE_SIZE
 256

	)

37 *
c⁄fig_p‹t
;

39 
	gc⁄fig_num
 = 0;

41 
	glöío
 = 0;

43 
	sl⁄g°r_s


45 *
	m«me
;

46 *
	m°r
;

47 
°r_ty≥
 
	mty≥
;

48 
l⁄g°r_s
 *
	m√xt
;

51 
l⁄g°r_s
 *
	gw‹kög_l⁄g°r
;

52 
	gw‹kög_l⁄g°r_c⁄töued
 = 0;

53 
	gw‹kög_l⁄g°r_Àn
 = 0;

56 
l⁄g°r_s
 *
	gl⁄g°rs
 = 
NULL
;

59 
	$föish_l⁄g°r
()

61 i‡(!
w‹kög_l⁄g°r
)

63 
out
;

66 
w‹kög_l⁄g°r
->
°r
[
w‹kög_l⁄g°r_Àn
] = '\0';

68 
w‹kög_l⁄g°r
->
√xt
 = 
l⁄g°rs
;

69 
l⁄g°rs
 = 
w‹kög_l⁄g°r
;

70 
w‹kög_l⁄g°r
 = 
NULL
;

72 
out
:

73 
w‹kög_l⁄g°r_Àn
 = 0;

74 
	}
}

78 
	$h™dÀ_l⁄g°r
(*
«me
, *
löe
, 
°r_ty≥
 
ty≥
)

80 
löe_Àn
;

83 i‡(!
löe
)

84 
löe
 = "";

86 
löe_Àn
 = 
	`°æí
(
löe
);

88 
w‹kög_l⁄g°r_c⁄töued
 = (
löe_Àn
 > 0Ë&& (
löe
[line_len-1] == '\\');

90 
w‹kög_l⁄g°r
 = 
	`mÆloc
((*working_longstr));

91 i‡(!
w‹kög_l⁄g°r
) {

92 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlög såög o¿%d", 
löío
);

95 
w‹kög_l⁄g°r
->
ty≥
 =Åype;

97 
w‹kög_l⁄g°r
->
«me
 = 
	`°rdup
(name);

98 i‡(!
w‹kög_l⁄g°r
->
«me
) {

99 
	`‰ì
(
w‹kög_l⁄g°r
);

100 
w‹kög_l⁄g°r
 = 
NULL
;

101 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÜ⁄g°∏⁄ %d", 
löío
);

105 i‡(
w‹kög_l⁄g°r_c⁄töued
)

106 
löe_Àn
--;

109 
w‹kög_l⁄g°r
->
°r
 = 
	`mÆloc
(
löe_Àn
 + !
w‹kög_l⁄g°r_c⁄töued
);

110 i‡(!
w‹kög_l⁄g°r
->
°r
) {

111 
	`‰ì
(
w‹kög_l⁄g°r
->
«me
);

112 
	`‰ì
(
w‹kög_l⁄g°r
);

113 
w‹kög_l⁄g°r
 = 
NULL
;

114 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÜ⁄g°∏⁄ %d", 
löío
);

118 
	`mem˝y
(
w‹kög_l⁄g°r
->
°r
, 
löe
, 
löe_Àn
);

119 
w‹kög_l⁄g°r_Àn
 = 
löe_Àn
;

121 i‡(!
w‹kög_l⁄g°r_c⁄töued
)

122 
	`föish_l⁄g°r
();

123 
	}
}

126 
	$h™dÀ_c⁄töued_l⁄g°r
(*
löe
)

128 
löe_Àn
 = 
	`°æí
(
löe
);

129 *
√w°r
;

131 
w‹kög_l⁄g°r_c⁄töued
 = (
löe_Àn
 > 0Ë&& (
löe
[line_len-1] == '\\');

133 i‡(!
w‹kög_l⁄g°r
)

135 
out
;

137 i‡(
w‹kög_l⁄g°r_c⁄töued
)

138 
löe_Àn
--;

141 
√w°r
 = 
	`ªÆloc
(
w‹kög_l⁄g°r
->
°r
, (
w‹kög_l⁄g°r_Àn
 + 
löe_Àn


142 + !
w‹kög_l⁄g°r_c⁄töued
));

143 i‡(!
√w°r
) {

144 
	`‰ì
(
w‹kög_l⁄g°r
->
°r
);

145 
	`‰ì
(
w‹kög_l⁄g°r
->
«me
);

146 
	`‰ì
(
w‹kög_l⁄g°r
);

147 
w‹kög_l⁄g°r
 = 
NULL
;

148 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÜ⁄g°∏⁄ %d", 
löío
);

149 
out
;

151 
w‹kög_l⁄g°r
->
°r
 = 
√w°r
;

152 
	`mem˝y
(
w‹kög_l⁄g°r
->
°r
 + 
w‹kög_l⁄g°r_Àn
, 
löe
, 
löe_Àn
);

153 
w‹kög_l⁄g°r_Àn
 +
löe_Àn
;

155 
out
:

156 i‡(!
w‹kög_l⁄g°r_c⁄töued
)

157 
	`föish_l⁄g°r
();

158 
	}
}

161 
	$föd_°r
(c⁄° *
«me
, 
°r_ty≥
 *
ty≥
)

163 
l⁄g°r_s
 *
l⁄g°r
 = 
l⁄g°rs
;

165 
l⁄g°r
) {

166 i‡(
	`°rcmp
(
«me
, 
l⁄g°r
->name) == 0) {

167 *
ty≥
 = 
l⁄g°r
->type;

168  
	`°rdup
(
l⁄g°r
->
°r
);

170 
l⁄g°r
 =Ü⁄g°r->
√xt
;

172  
NULL
;

173 
	}
}

176 
	$‰ì_l⁄g°rs
()

178 
l⁄g°r_s
 *
l⁄g°r
;

180 i‡(
w‹kög_l⁄g°r
) {

181 i‡(
w‹kög_l⁄g°r
->
«me
)

182 
	`‰ì
(
w‹kög_l⁄g°r
->
«me
);

183 i‡(
w‹kög_l⁄g°r
->
°r
)

184 
	`‰ì
(
w‹kög_l⁄g°r
->
°r
);

185 
	`‰ì
(
w‹kög_l⁄g°r
);

186 
w‹kög_l⁄g°r
 = 
NULL
;

188 
w‹kög_l⁄g°r_Àn
 = 0;

189 
w‹kög_l⁄g°r_c⁄töued
 = 0;

191 
l⁄g°rs
) {

192 
l⁄g°r
 = 
l⁄g°rs
;

193 
l⁄g°rs
 =Ü⁄g°rs->
√xt
;

194 
	`‰ì
(
l⁄g°r
->
«me
);

195 
	`‰ì
(
l⁄g°r
->
°r
);

196 
	`‰ì
(
l⁄g°r
);

198 
	}
}

200 
	såa˚fûe_s


202 *
	m«me
;

203 *
	m°r
;

204 
åa˚fûe_s
 *
	m√xt
;

207 #ifde‡
USE_RS485_FEATURE


208 
	srs485c⁄f_s


210 *
	m«me
;

211 
£rül_rs485
 
	mc⁄f
;

212 
rs485c⁄f_s
 *
	m√xt
;

217 
åa˚fûe_s
 *
	gåa˚fûes
 = 
NULL
;

220 
	$h™dÀ_åa˚fûe
(*
«me
, *
‚ame
)

222 
åa˚fûe_s
 *
√w_åa˚fûe
;

224 
√w_åa˚fûe
 = 
	`mÆloc
((*new_tracefile));

225 i‡(!
√w_åa˚fûe
) {

226 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÅø˚fûê⁄ %d", 
löío
);

230 
√w_åa˚fûe
->
«me
 = 
	`°rdup
(name);

231 i‡(!
√w_åa˚fûe
->
«me
) {

232 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÅø˚fûê⁄ %d", 
löío
);

233 
	`‰ì
(
√w_åa˚fûe
);

237 
√w_åa˚fûe
->
°r
 = 
	`°rdup
(
‚ame
);

238 i‡(!
√w_åa˚fûe
->
°r
) {

239 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÅø˚fûê⁄ %d", 
löío
);

240 
	`‰ì
(
√w_åa˚fûe
->
«me
);

241 
	`‰ì
(
√w_åa˚fûe
);

245 
√w_åa˚fûe
->
√xt
 = 
åa˚fûes
;

246 
åa˚fûes
 = 
√w_åa˚fûe
;

247 
	}
}

250 
	$föd_åa˚fûe
(c⁄° *
«me
)

252 
åa˚fûe_s
 *
åa˚fûe
 = 
åa˚fûes
;

254 
åa˚fûe
) {

255 i‡(
	`°rcmp
(
«me
, 
åa˚fûe
->name) == 0)

256  
	`°rdup
(
åa˚fûe
->
°r
);

257 
åa˚fûe
 =Åø˚fûe->
√xt
;

259 
	`sy¶og
(
LOG_ERR
, "Tø˚fûê%†nŸ found, iàwû»bêign‹ed", 
«me
);

260  
NULL
;

261 
	}
}

264 
	$‰ì_åa˚fûes
()

266 
åa˚fûe_s
 *
åa˚fûe
;

268 
åa˚fûes
) {

269 
åa˚fûe
 = 
åa˚fûes
;

270 
åa˚fûes
 =Åø˚fûes->
√xt
;

271 
	`‰ì
(
åa˚fûe
->
«me
);

272 
	`‰ì
(
åa˚fûe
->
°r
);

273 
	`‰ì
(
åa˚fûe
);

275 
	}
}

277 #ifde‡
USE_RS485_FEATURE


279 
rs485c⁄f_s
 *
	grs485c⁄fs
 = 
NULL
;

282 
	$h™dÀ_rs485c⁄f
(*
«me
, *
°r
)

284 
rs485c⁄f_s
 *
√w_rs485c⁄f
;

285 
uöt8_t
 
πs_⁄_£nd
, 
rx_durög_tx
;

287 
√w_rs485c⁄f
 = 
	`mÆloc
((*new_rs485conf));

288 i‡(!
√w_rs485c⁄f
) {

289 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÑs485 c⁄fig o¿%d", 
löío
);

293 
√w_rs485c⁄f
->
«me
 = 
	`°rdup
(name);

294 i‡(!
√w_rs485c⁄f
->
«me
) {

295 
	`sy¶og
(
LOG_ERR
, "Ouào‡mem‹y h™dlögÑs485 c⁄fig o¿%d", 
löío
);

296 
	`‰ì
(
√w_rs485c⁄f
);

300 i‡(
	`ssˇnf
(
°r
, "%u:%u:%1hhu:%1hhu",

301 &
√w_rs485c⁄f
->
c⁄f
.
dñay_πs_bef‹e_£nd
,

302 &
√w_rs485c⁄f
->
c⁄f
.
dñay_πs_a·î_£nd
,

303 &
πs_⁄_£nd
,

304 &
rx_durög_tx
) != 4) {

305 
	`sy¶og
(
LOG_ERR
, "Couldn'à∑r£ RS485 c⁄fig o¿%d", 
löío
);

310 i‡(
πs_⁄_£nd
 > 1) {

311 
	`sy¶og
(
LOG_ERR
, "RTS_ON_SENDÖ¨amëî c™ bê0 o∏1 o¿%d", 
löío
);

315 i‡(
rx_durög_tx
 > 1) {

316 
	`sy¶og
(
LOG_ERR
, "RX_DURING_TXÖ¨amëî c™ bê0 o∏1 o¿%d", 
löío
);

320 
√w_rs485c⁄f
->
c⁄f
.
Êags
 = 
SER_RS485_ENABLED
;

322 i‡(
πs_⁄_£nd
) {

323 
√w_rs485c⁄f
->
c⁄f
.
Êags
 |
SER_RS485_RTS_ON_SEND
;

325 
√w_rs485c⁄f
->
c⁄f
.
Êags
 |
SER_RS485_RTS_AFTER_SEND
;

328 i‡(
rx_durög_tx
) {

329 
√w_rs485c⁄f
->
c⁄f
.
Êags
 |
SER_RS485_RX_DURING_TX
;

332 
√w_rs485c⁄f
->
√xt
 = 
rs485c⁄fs
;

333 
rs485c⁄fs
 = 
√w_rs485c⁄f
;

334 
	}
}

336 
£rül_rs485
 *

337 
	$föd_rs485c⁄f
(c⁄° *
«me
)

339 
rs485c⁄f_s
 *
√w_rs485c⁄f
 = 
rs485c⁄fs
;

341 
√w_rs485c⁄f
) {

342 i‡(
	`°rcmp
(
«me
, 
√w_rs485c⁄f
->name) == 0)

343  &
√w_rs485c⁄f
->
c⁄f
;

344 
√w_rs485c⁄f
 =Çew_rs485c⁄f->
√xt
;

346 
	`sy¶og
(
LOG_ERR
, "RS485 c⁄figuøti⁄ %†nŸ found, iàwû»bêign‹ed", 
«me
);

347  
NULL
;

348 
	}
}

351 
	$‰ì_rs485c⁄fs
()

353 
rs485c⁄f_s
 *
rs485c⁄f
;

355 
rs485c⁄fs
) {

356 
rs485c⁄f
 = 
rs485c⁄fs
;

357 
rs485c⁄fs
 =Ñs485c⁄fs->
√xt
;

358 
	`‰ì
(
rs485c⁄f
->
«me
);

359 
	`‰ì
(
rs485c⁄f
);

361 
	}
}

365 
	$°¨tswôh
(*
°r
, c⁄° *
ã°
, **
°πok_d©a
)

367 
Àn
 = 
	`°æí
(
ã°
);

369 i‡((
	`°∫cmp
(
°r
, 
ã°
, 
Àn
) == 0) && (str[len] == ':')) {

370 
	`°πok_r
(
°r
, ":", 
°πok_d©a
);

374 
	}
}

377 
	$sy¶og_ïröt
(
absout
 *
e
, c⁄° *
°r
, ...)

379 
va_li°
 
≠
;

380 
buf
[1024];

382 
	`va_°¨t
(
≠
, 
°r
);

383 
	`v¢¥ötf
(
buf
, (buf), 
°r
, 
≠
);

384 
	`va_íd
(
≠
);

385 
	`sy¶og
(
LOG_ERR
, "%†⁄Üöê%d", 
buf
, *((*Ë
e
->
d©a
));

387 
	}
}

389 
absout
 
	gsy¶og_eout
 = {

390 .
out
 = 
sy¶og_ïröt
,

391 .
	gd©a
 = &
löío


395 
	$h™dÀ_c⁄fig_löe
(*
öbuf
)

397 *
p‹äum
, *
°©e
, *
timeout
, *
dev«me
, *
devcfg
, *
comma
;

398 *
°πok_d©a
 = 
NULL
;

400 
löío
++;

402 i‡(
w‹kög_l⁄g°r_c⁄töued
) {

403 *
°r
 = 
	`°πok_r
(
öbuf
, "\n", &
°πok_d©a
);

404 i‡(!
°r
)

405 
°r
 = "";

406 
	`h™dÀ_c⁄töued_l⁄g°r
(
°r
);

410 i‡(
öbuf
[0] == '#') {

415 i‡(
	`°¨tswôh
(
öbuf
, "CONTROLPORT", &
°πok_d©a
)) {

416 i‡(
c⁄fig_p‹t
)

422 
c⁄fig_p‹t
 = 
	`°rdup
(
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
));

423 i‡(!
c⁄fig_p‹t
) {

424 
	`sy¶og
(
LOG_ERR
, "CouldÇotállocate memory for CONTROLPORT");

430 i‡(
	`°¨tswôh
(
öbuf
, "BANNER", &
°πok_d©a
)) {

431 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

432 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

433 i‡(
«me
 =
NULL
) {

434 
	`sy¶og
(
LOG_ERR
, "Nÿb™√∏«mêgiví o¿löê%d", 
löío
);

437 
	`h™dÀ_l⁄g°r
(
«me
, 
°r
, 
BANNER
);

441 i‡(
	`°¨tswôh
(
öbuf
, "SIGNATURE", &
°πok_d©a
)) {

442 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

443 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

444 i‡(
«me
 =
NULL
) {

445 
	`sy¶og
(
LOG_ERR
, "Nÿsig«tuª giví o¿löê%d", 
löío
);

448 
	`h™dÀ_l⁄g°r
(
«me
, 
°r
, 
SIGNATURE
);

452 #ifde‡
USE_RS485_FEATURE


453 i‡(
	`°¨tswôh
(
öbuf
, "RS485CONF", &
°πok_d©a
)) {

454 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

455 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

456 i‡(
«me
 =
NULL
) {

457 
	`sy¶og
(
LOG_ERR
, "Nÿsig«tuª giví o¿löê%d", 
löío
);

460 i‡((
°r
 =
NULL
Ë|| (
	`°æí
(str) == 0)) {

461 
	`sy¶og
(
LOG_ERR
, "NÿRS485 c⁄figuøti⁄ giví o¿löê%d", 
löío
);

464 
	`h™dÀ_rs485c⁄f
(
«me
, 
°r
);

469 i‡(
	`°¨tswôh
(
öbuf
, "OPENSTR", &
°πok_d©a
)) {

470 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

471 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

472 i‡(
«me
 =
NULL
) {

473 
	`sy¶og
(
LOG_ERR
, "Nÿ›í såögÇamêgiví o¿löê%d", 
löío
);

476 
	`h™dÀ_l⁄g°r
(
«me
, 
°r
, 
OPENSTR
);

480 i‡(
	`°¨tswôh
(
öbuf
, "CLOSESTR", &
°πok_d©a
)) {

481 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

482 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

483 i‡(
«me
 =
NULL
) {

484 
	`sy¶og
(
LOG_ERR
, "Nÿ˛o£ såögÇamêgiví o¿löê%d", 
löío
);

487 
	`h™dÀ_l⁄g°r
(
«me
, 
°r
, 
CLOSESTR
);

491 i‡(
	`°¨tswôh
(
öbuf
, "TRACEFILE", &
°πok_d©a
)) {

492 *
«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

493 *
°r
 = 
	`°πok_r
(
NULL
, "\n", &
°πok_d©a
);

494 i‡(
«me
 =
NULL
) {

495 
	`sy¶og
(
LOG_ERR
, "Nÿåa˚fûê«mêgiví o¿löê%d", 
löío
);

498 i‡((
°r
 =
NULL
Ë|| (
	`°æí
(str) == 0)) {

499 
	`sy¶og
(
LOG_ERR
, "Nÿåa˚fûêgiví o¿löê%d", 
löío
);

502 
	`h™dÀ_åa˚fûe
(
«me
, 
°r
);

506 
comma
 = 
	`°rchr
(
öbuf
, ',');

507 i‡(
comma
) {

508 i‡(!
	`°πok_r
(
comma
, ":", &
°πok_d©a
)) {

509 
	`sy¶og
(
LOG_ERR
, "InvÆidÖ‹à⁄Üöê%d", 
löío
);

512 
p‹äum
 = 
öbuf
;

514 
p‹äum
 = 
	`°πok_r
(
öbuf
, ":", &
°πok_d©a
);

515 i‡(
p‹äum
 =
NULL
) {

521 
°©e
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

522 i‡(
°©e
 =
NULL
) {

523 
	`sy¶og
(
LOG_ERR
, "Nÿ°©êgiví o¿löê%d", 
löío
);

527 
timeout
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

528 i‡(
timeout
 =
NULL
) {

529 
	`sy¶og
(
LOG_ERR
, "Nÿtimeouàgiví o¿löê%d", 
löío
);

533 
dev«me
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

534 i‡(
dev«me
 =
NULL
) {

535 
	`sy¶og
(
LOG_ERR
, "Nÿdevi˚Çamêgiví o¿löê%d", 
löío
);

539 
devcfg
 = 
	`°πok_r
(
NULL
, ":", &
°πok_d©a
);

540 i‡(
devcfg
 =
NULL
) {

542 
devcfg
 = "";

545 
	`p‹tc⁄fig
(&
sy¶og_eout
, 
p‹äum
, 
°©e
, 
timeout
, 
dev«me
, 
devcfg
,

546 
c⁄fig_num
);

547 
	}
}

552 
	$ªadc⁄fig
(*
fûíame
)

554 
FILE
 *
ö°ªam
;

555 
öbuf
[
MAX_LINE_SIZE
];

556 
rv
 = 0;

558 
löío
 = 0;

560 
ö°ªam
 = 
	`f›í
(
fûíame
, "r");

561 i‡(
ö°ªam
 =
NULL
) {

562 
	`sy¶og
(
LOG_ERR
, "U«bÀÅÿ›í c⁄fig fûê'%s': %m", 
fûíame
);

566 
	`‰ì_l⁄g°rs
();

567 
	`‰ì_åa˚fûes
();

568 #ifde‡
USE_RS485_FEATURE


569 
	`‰ì_rs485c⁄fs
();

572 
c⁄fig_num
++;

574 
	`fgës
(
öbuf
, 
MAX_LINE_SIZE
, 
ö°ªam
Ë!
NULL
) {

575 
Àn
 = 
	`°æí
(
öbuf
);

576 i‡(
öbuf
[
Àn
-1] != '\n') {

577 
löío
++;

578 
	`sy¶og
(
LOG_ERR
, "löê%d i†toÿl⁄g i¿c⁄fig fûe", 
löío
);

582 
öbuf
[
Àn
-1] = '\0';

583 
	`h™dÀ_c⁄fig_löe
(
öbuf
);

587 
	`˛ór_ﬁd_p‹t_c⁄fig
(
c⁄fig_num
);

589 
	`f˛o£
(
ö°ªam
);

590  
rv
;

591 
	}
}

	@readconfig.h

20 #i‚de‡
READCONFIG


21 
	#READCONFIG


	)

24 
h™dÀ_c⁄fig_löe
(*
öbuf
);

28 
ªadc⁄fig
(*
fûíame
);

	@selector.c

41 
	~"£À˘‹.h
"

43 
	~<sys/time.h
>

44 
	~<sys/ty≥s.h
>

45 
	~<uni°d.h
>

46 
	~<°dlib.h
>

47 
	~<î∫o.h
>

48 
	~<sy¶og.h
>

49 
	~<sig«l.h
>

50 
	~<°rög.h
>

51 
	~<°dio.h
>

54 
	sfd_c⁄åﬁ_s


56 
	mö_u£
;

57 *
	md©a
;

58 
£l_fd_h™dÀr_t
 
	mh™dÀ_ªad
;

59 
£l_fd_h™dÀr_t
 
	mh™dÀ_wrôe
;

60 
£l_fd_h™dÀr_t
 
	mh™dÀ_ex˚±
;

61 } 
	tfd_c⁄åﬁ_t
;

63 
	s£l_timî_s


66 
£l_timeout_h™dÀr_t
 
	mh™dÀr
;

70 *
	mu£r_d©a
;

73 
timevÆ
 
	mtimeout
;

76 
£À˘‹_t
 *
	m£l
;

79 
	mö_hóp
;

82 
£l_timî_t
 *
	mÀ·
, *
	mright
, *
	mup
;

85 
	s£À˘‹_s


90 
fd_c⁄åﬁ_t
 
	mfds
[
FD_SETSIZE
];

94 
fd_£t
 
	mªad_£t
;

95 
fd_£t
 
	mwrôe_£t
;

96 
fd_£t
 
	mex˚±_£t
;

98 
	mmaxfd
;

102 
£l_timî_t
 *
	mtimî_t›
, *
	mtimî_œ°
;

105 
t_sig«l_h™dÀr
 
	gu£r_sighup_h™dÀr
 = 
NULL
;

106 
t_sig«l_h™dÀr
 
	gu£r_sigöt_h™dÀr
 = 
NULL
;

107 
	ggŸ_sighup
 = 0;

108 
	ggŸ_sigöt
 = 0;

112 
	$öô_fd
(
fd_c⁄åﬁ_t
 *
fd
)

114 
fd
->
ö_u£
 = 0;

115 
fd
->
d©a
 = 
NULL
;

116 
fd
->
h™dÀ_ªad
 = 
NULL
;

117 
fd
->
h™dÀ_wrôe
 = 
NULL
;

118 
fd
->
h™dÀ_ex˚±
 = 
NULL
;

119 
	}
}

123 
	$£l_£t_fd_h™dÀrs
(
£À˘‹_t
 *
£l
,

124 
fd
,

125 *
d©a
,

126 
£l_fd_h™dÀr_t
 
ªad_h™dÀr
,

127 
£l_fd_h™dÀr_t
 
wrôe_h™dÀr
,

128 
£l_fd_h™dÀr_t
 
ex˚±_h™dÀr
)

130 
£l
->
fds
[
fd
].
ö_u£
 = 1;

131 
£l
->
fds
[
fd
].
d©a
 = data;

132 
£l
->
fds
[
fd
].
h™dÀ_ªad
 = 
ªad_h™dÀr
;

133 
£l
->
fds
[
fd
].
h™dÀ_wrôe
 = 
wrôe_h™dÀr
;

134 
£l
->
fds
[
fd
].
h™dÀ_ex˚±
 = 
ex˚±_h™dÀr
;

137 i‡(
fd
 > 
£l
->
maxfd
) {

138 
£l
->
maxfd
 = 
fd
;

140 
	}
}

145 
	$£l_˛ór_fd_h™dÀrs
(
£À˘‹_t
 *
£l
,

146 
fd
)

148 
	`öô_fd
(&(
£l
->
fds
[
fd
]));

149 
	`FD_CLR
(
fd
, &
£l
->
ªad_£t
);

150 
	`FD_CLR
(
fd
, &
£l
->
wrôe_£t
);

151 
	`FD_CLR
(
fd
, &
£l
->
ex˚±_£t
);

154 i‡(
fd
 =
£l
->
maxfd
) {

155 (
£l
->
maxfd
 >0Ë&& (! sñ->
fds
[£l->maxfd].
ö_u£
)) {

156 
£l
->
maxfd
--;

159 
	}
}

164 
	$£l_£t_fd_ªad_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
)

166 i‡(
°©e
 =
SEL_FD_HANDLER_ENABLED
) {

167 
	`FD_SET
(
fd
, &
£l
->
ªad_£t
);

168 } i‡(
°©e
 =
SEL_FD_HANDLER_DISABLED
) {

169 
	`FD_CLR
(
fd
, &
£l
->
ªad_£t
);

172 
	}
}

177 
	$£l_£t_fd_wrôe_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
)

179 i‡(
°©e
 =
SEL_FD_HANDLER_ENABLED
) {

180 
	`FD_SET
(
fd
, &
£l
->
wrôe_£t
);

181 } i‡(
°©e
 =
SEL_FD_HANDLER_DISABLED
) {

182 
	`FD_CLR
(
fd
, &
£l
->
wrôe_£t
);

185 
	}
}

190 
	$£l_£t_fd_ex˚±_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
)

192 i‡(
°©e
 =
SEL_FD_HANDLER_ENABLED
) {

193 
	`FD_SET
(
fd
, &
£l
->
ex˚±_£t
);

194 } i‡(
°©e
 =
SEL_FD_HANDLER_DISABLED
) {

195 
	`FD_CLR
(
fd
, &
£l
->
ex˚±_£t
);

198 
	}
}

201 
	$cmp_timevÆ
(
timevÆ
 *
tv1
, timevÆ *
tv2
)

203 i‡(
tv1
->
tv_£c
 < 
tv2
->tv_sec)

206 i‡(
tv1
->
tv_£c
 > 
tv2
->tv_sec)

209 i‡(
tv1
->
tv_u£c
 < 
tv2
->tv_usec)

212 i‡(
tv1
->
tv_u£c
 > 
tv2
->tv_usec)

216 
	}
}

219 
	$diff_timevÆ
(
timevÆ
 *
de°
,

220 
timevÆ
 *
À·
,

221 
timevÆ
 *
right
)

223 i‡–(
À·
->
tv_£c
 < 
right
->tv_sec)

224 || ( (
À·
->
tv_£c
 =
right
->tv_sec)

225 && (
À·
->
tv_u£c
 < 
right
->tv_usec)))

229 
de°
->
tv_£c
 = 0;

230 
de°
->
tv_u£c
 = 0;

234 
de°
->
tv_£c
 = 
À·
->tv_£¯- 
right
->tv_sec;

235 
de°
->
tv_u£c
 = 
À·
->tv_u£¯- 
right
->tv_usec;

236 
de°
->
tv_u£c
 < 0) {

237 
de°
->
tv_u£c
 += 1000000;

238 
de°
->
tv_£c
--;

240 
	}
}

242 #unde‡
MASSIVE_DEBUG


243 #ifde‡
MASSIVE_DEBUG


244 
FILE
 **
	gdebug_out
 = &
°dîr
;

246 
	$¥öt_åì_ôem
(
£l_timî_t
 *
pos
, 
ödít
)

248 
i
;

249 
i
=0; i<
ödít
; i++)

250 
	`Ârötf
(*
debug_out
, " ");

251 
	`Ârötf
(*
debug_out
, " %p: %∞%∞%∞(%ld.%7.7ld)\n", 
pos
,Öos->
À·
,Öos->
right
,

252 
pos
->
up
,Öos->
timeout
.
tv_£c
,Öos->timeout.
tv_u£c
);

253 i‡(
pos
->
À·
)

254 
	`¥öt_åì_ôem
(
pos
->
À·
, 
ödít
+1);

255 i‡(
pos
->
right
)

256 
	`¥öt_åì_ôem
(
pos
->
right
, 
ödít
+1);

257 
	}
}

260 
	$¥öt_åì
(
£l_timî_t
 *
t›
, sñ_timî_à*
œ°
)

262 
	`Ârötf
(*
debug_out
, "t›=%p\n", 
t›
);

263 i‡(
t›
)

264 
	`¥öt_åì_ôem
(
t›
, 0);

265 
	`Ârötf
(*
debug_out
, "œ°=%p\n", 
œ°
);

266 
	`fÊush
(*
debug_out
);

267 
	}
}

270 
	$check_åì_ôem
(
£l_timî_t
 *
cuº
,

271 *
dïth
,

272 
max_dïth
,

273 
£l_timî_t
 **
ªÆ_œ°
,

274 *
found_œ°
)

276 i‡(! 
cuº
->
À·
) {

277 i‡(
cuº
->
right
) {

278 
	`Ârötf
(*
debug_out
, "Tree corrupt B\n");

279 *((*Ë
NULL
) = 0;

280 } i‡(*
dïth
 > 
max_dïth
) {

281 
	`Ârötf
(*
debug_out
, "Tree corrupt C\n");

282 *((*Ë
NULL
) = 0;

283 } i‡(*
dïth
 < (
max_dïth
 - 1)) {

284 
	`Ârötf
(*
debug_out
, "Tree corrupt D\n");

285 *((*Ë
NULL
) = 0;

286 } i‡((*
found_œ°
Ë&& (*
dïth
 =
max_dïth
)) {

287 
	`Ârötf
(*
debug_out
, "Tree corrupt E\n");

288 *((*Ë
NULL
) = 0;

289 } i‡(*
dïth
 =
max_dïth
) {

290 *
ªÆ_œ°
 = 
cuº
;

292 *
found_œ°
 = 1;

295 i‡(
cuº
->
À·
->
up
 != curr) {

296 
	`Ârötf
(*
debug_out
, "Tree corrupt I\n");

297 *((*Ë
NULL
) = 0;

299 i‡(
	`cmp_timevÆ
(&(
cuº
->
À·
->
timeout
), &(curr->timeout)) < 0) {

300 
	`Ârötf
(*
debug_out
, "Tree corrupt K\n");

301 *((*Ë
NULL
) = 0;

303 (*
dïth
)++;

304 
	`check_åì_ôem
(
cuº
->
À·
, 
dïth
, 
max_dïth
, 
ªÆ_œ°
, 
found_œ°
);

305 (*
dïth
)--;

307 i‡(! 
cuº
->
right
) {

308 i‡(*
dïth
 !(
max_dïth
 - 1)) {

309 
	`Ârötf
(*
debug_out
, "Tree corrupt F\n");

310 *((*Ë
NULL
) = 0;

312 i‡(*
found_œ°
) {

313 
	`Ârötf
(*
debug_out
, "Tree corrupt G\n");

314 *((*Ë
NULL
) = 0;

316 *
found_œ°
 = 1;

318 i‡(
cuº
->
right
->
up
 != curr) {

319 
	`Ârötf
(*
debug_out
, "Tree corrupt H\n");

320 *((*Ë
NULL
) = 0;

322 i‡(
	`cmp_timevÆ
(&(
cuº
->
right
->
timeout
), &(curr->timeout)) < 0) {

323 
	`Ârötf
(*
debug_out
, "Tree corrupt L\n");

324 *((*Ë
NULL
) = 0;

326 (*
dïth
)++;

327 
	`check_åì_ôem
(
cuº
->
right
, 
dïth
, 
max_dïth
, 
ªÆ_œ°
, 
found_œ°
);

328 (*
dïth
)--;

331 
	}
}

334 
	$check_åì
(
£l_timî_t
 *
t›
, sñ_timî_à*
œ°
)

336 
dïth
 = 0, 
max_dïth
 = 0;

337 
found_œ°
 = 0;

338 
£l_timî_t
 *
ªÆ_œ°
;

340 i‡(!
t›
) {

341 i‡(
œ°
) {

342 
	`Ârötf
(*
debug_out
, "Tree corrupt A\n");

343 *((*Ë
NULL
) = 0;

348 
ªÆ_œ°
 = 
t›
;

349 
ªÆ_œ°
->
À·
) {

350 
ªÆ_œ°
 =Ñól_œ°->
À·
;

351 
max_dïth
++;

354 
ªÆ_œ°
 = 
NULL
;

355 
	`check_åì_ôem
(
t›
, &
dïth
, 
max_dïth
, &
ªÆ_œ°
, &
found_œ°
);

357 i‡(
ªÆ_œ°
 !
œ°
) {

358 
	`Ârötf
(*
debug_out
, "Tree corrupt J\n");

359 *((*Ë
NULL
) = 0;

361 
	`fÊush
(*
debug_out
);

362 
	}
}

366 
	$föd_√xt_pos
(
£l_timî_t
 *
cuº
, sñ_timî_à***
√xt
, sñ_timî_à**
∑ª¡
)

368 
upcou¡
 = 0;

370 i‡(
cuº
->
up
 && (cuº->up->
À·
 == curr)) {

372 *
√xt
 = &(
cuº
->
up
->
right
);

373 *
∑ª¡
 = 
cuº
->
up
;

378 
cuº
->
up
 && (cuº->up->
right
 == curr)) {

379 
upcou¡
++;

380 
cuº
 = cuº->
up
;

383 i‡(
cuº
->
up
) {

385 
cuº
 = cuº->
up
->
right
;

386 
upcou¡
--;

388 
upcou¡
) {

389 
cuº
 = cuº->
À·
;

390 
upcou¡
--;

392 *
√xt
 = &(
cuº
->
À·
);

393 *
∑ª¡
 = 
cuº
;

394 
	}
}

397 
	$föd_¥ev_ñem
(
£l_timî_t
 *
cuº
, sñ_timî_à**
¥ev
)

399 
upcou¡
 = 0;

401 i‡(
cuº
->
up
 && (cuº->up->
right
 == curr)) {

403 *
¥ev
 = 
cuº
->
up
->
À·
;

408 
cuº
->
up
 && (cuº->up->
À·
 == curr)) {

409 
upcou¡
++;

410 
cuº
 = cuº->
up
;

413 i‡(
cuº
->
up
) {

415 
cuº
 = cuº->
up
->
À·
;

418 
upcou¡
--;

420 
upcou¡
) {

421 
cuº
 = cuº->
right
;

422 
upcou¡
--;

424 *
¥ev
 = 
cuº
;

425 
	}
}

428 
	$£nd_up
(
£l_timî_t
 *
ñem
, sñ_timî_à**
t›
, sñ_timî_à**
œ°
)

430 
£l_timî_t
 *
tmp1
, *
tmp2
, *
∑ª¡
;

432 
∑ª¡
 = 
ñem
->
up
;

433 
∑ª¡
 && (
	`cmp_timevÆ
(&
ñem
->
timeout
, &parent->timeout) < 0)) {

434 
tmp1
 = 
ñem
->
À·
;

435 
tmp2
 = 
ñem
->
right
;

436 i‡(
∑ª¡
->
À·
 =
ñem
) {

437 
ñem
->
À·
 = 
∑ª¡
;

438 
ñem
->
right
 = 
∑ª¡
->right;

439 i‡(
ñem
->
right
)

440 
ñem
->
right
->
up
 =Élem;

442 
ñem
->
right
 = 
∑ª¡
;

443 
ñem
->
À·
 = 
∑ª¡
->left;

444 i‡(
ñem
->
À·
)

445 
ñem
->
À·
->
up
 =Élem;

447 
ñem
->
up
 = 
∑ª¡
->up;

449 i‡(
∑ª¡
->
up
) {

450 i‡(
∑ª¡
->
up
->
À·
 ==Öarent) {

451 
∑ª¡
->
up
->
À·
 = 
ñem
;

453 
∑ª¡
->
up
->
right
 = 
ñem
;

456 *
t›
 = 
ñem
;

459 
∑ª¡
->
up
 = 
ñem
;

460 
∑ª¡
->
À·
 = 
tmp1
;

461 i‡(
∑ª¡
->
À·
)

462 
∑ª¡
->
À·
->
up
 =Öarent;

463 
∑ª¡
->
right
 = 
tmp2
;

464 i‡(
∑ª¡
->
right
)

465 
∑ª¡
->
right
->
up
 =Öarent;

467 i‡(*
œ°
 =
ñem
)

468 *
œ°
 = 
∑ª¡
;

470 
∑ª¡
 = 
ñem
->
up
;

472 
	}
}

475 
	$£nd_down
(
£l_timî_t
 *
ñem
, sñ_timî_à**
t›
, sñ_timî_à**
œ°
)

477 
£l_timî_t
 *
tmp1
, *
tmp2
, *
À·
, *
right
;

479 
À·
 = 
ñem
->left;

480 
À·
) {

481 
right
 = 
ñem
->right;

483 i‡((
right
Ë&& (
	`cmp_timevÆ
(&
À·
->
timeout
, &right->timeout) > 0)) {

485 i‡(
	`cmp_timevÆ
(&
ñem
->
timeout
, &
right
->timeout) > 0) {

487 
tmp1
 = 
right
->
À·
;

488 
tmp2
 = 
right
->right;

489 i‡(
ñem
->
up
) {

490 i‡(
ñem
->
up
->
À·
 ==Élem) {

491 
ñem
->
up
->
À·
 = 
right
;

493 
ñem
->
up
->
right
 =Ñight;

496 *
t›
 = 
right
;

498 
right
->
up
 = 
ñem
->up;

499 
ñem
->
up
 = 
right
;

501 
right
->
À·
 = 
ñem
->left;

502 
right
->righà
ñem
;

503 
ñem
->
À·
 = 
tmp1
;

504 
ñem
->
right
 = 
tmp2
;

505 i‡(
right
->
À·
)

506 
right
->
À·
->
up
 =Ñight;

507 i‡(
ñem
->
À·
)

508 
ñem
->
À·
->
up
 =Élem;

509 i‡(
ñem
->
right
)

510 
ñem
->
right
->
up
 =Élem;

512 i‡(*
œ°
 =
right
)

513 *
œ°
 = 
ñem
;

515 
d⁄e
;

518 i‡(
	`cmp_timevÆ
(&
ñem
->
timeout
, &
À·
->timeout) > 0) {

520 
tmp1
 = 
À·
->left;

521 
tmp2
 = 
À·
->
right
;

522 i‡(
ñem
->
up
) {

523 i‡(
ñem
->
up
->
À·
 ==Élem) {

524 
ñem
->
up
->
À·
 =Üeft;

526 
ñem
->
up
->
right
 = 
À·
;

529 *
t›
 = 
À·
;

531 
À·
->
up
 = 
ñem
->up;

532 
ñem
->
up
 = 
À·
;

534 
À·
->À· = 
ñem
;

535 
À·
->
right
 = 
ñem
->right;

536 
ñem
->
À·
 = 
tmp1
;

537 
ñem
->
right
 = 
tmp2
;

538 i‡(
À·
->
right
)

539 
À·
->
right
->
up
 =Üeft;

540 i‡(
ñem
->
À·
)

541 
ñem
->
À·
->
up
 =Élem;

542 i‡(
ñem
->
right
)

543 
ñem
->
right
->
up
 =Élem;

545 i‡(*
œ°
 =
À·
)

546 *
œ°
 = 
ñem
;

548 
d⁄e
;

550 
À·
 = 
ñem
->left;

552 
d⁄e
:

554 
	}
}

557 
	$add_to_hóp
(
£l_timî_t
 **
t›
, sñ_timî_à**
œ°
, sñ_timî_à*
ñem
)

559 
£l_timî_t
 **
√xt
;

560 
£l_timî_t
 *
∑ª¡
;

562 #ifde‡
MASSIVE_DEBUG


563 
	`Ârötf
(*
debug_out
, "add_to_heapÉntry\n");

564 
	`¥öt_åì
(*
t›
, *
œ°
);

565 
	`check_åì
(*
t›
, *
œ°
);

568 
ñem
->
À·
 = 
NULL
;

569 
ñem
->
right
 = 
NULL
;

570 
ñem
->
up
 = 
NULL
;

572 i‡(*
t›
 =
NULL
) {

573 *
t›
 = 
ñem
;

574 *
œ°
 = 
ñem
;

575 
out
;

578 
	`föd_√xt_pos
(*
œ°
, &
√xt
, &
∑ª¡
);

579 *
√xt
 = 
ñem
;

580 
ñem
->
up
 = 
∑ª¡
;

581 *
œ°
 = 
ñem
;

582 i‡(
	`cmp_timevÆ
(&
ñem
->
timeout
, &
∑ª¡
->timeout) < 0) {

583 
	`£nd_up
(
ñem
, 
t›
, 
œ°
);

586 
out
:

587 #ifde‡
MASSIVE_DEBUG


588 
	`Ârötf
(*
debug_out
, "add_to_heapÉxit\n");

589 
	`¥öt_åì
(*
t›
, *
œ°
);

590 
	`check_åì
(*
t›
, *
œ°
);

593 
	}
}

596 
	$ªmove_‰om_hóp
(
£l_timî_t
 **
t›
, sñ_timî_à**
œ°
, sñ_timî_à*
ñem
)

598 
£l_timî_t
 *
to_ö£π
;

600 #ifde‡
MASSIVE_DEBUG


601 
	`Ârötf
(*
debug_out
, "remove_from_headÉntry\n");

602 
	`¥öt_åì
(*
t›
, *
œ°
);

603 
	`check_åì
(*
t›
, *
œ°
);

609 
to_ö£π
 = *
œ°
;

610 i‡(! 
to_ö£π
->
up
) {

612 *
t›
 = 
NULL
;

613 *
œ°
 = 
NULL
;

614 
out
;

618 
	`föd_¥ev_ñem
(
to_ö£π
, 
œ°
);

619 i‡(
to_ö£π
->
up
->
À·
 ==Åo_insert) {

620 
to_ö£π
->
up
->
À·
 = 
NULL
;

622 
to_ö£π
->
up
->
right
 = 
NULL
;

626 i‡(
ñem
 =
to_ö£π
) {

628 
out
;

633 i‡(
ñem
->
up
) {

634 i‡(
ñem
->
up
->
À·
 ==Élem) {

635 
ñem
->
up
->
À·
 = 
to_ö£π
;

637 
ñem
->
up
->
right
 = 
to_ö£π
;

641 *
t›
 = 
to_ö£π
;

643 
to_ö£π
->
up
 = 
ñem
->up;

644 i‡(
ñem
->
À·
)

645 
ñem
->
À·
->
up
 = 
to_ö£π
;

646 i‡(
ñem
->
right
)

647 
ñem
->
right
->
up
 = 
to_ö£π
;

648 
to_ö£π
->
À·
 = 
ñem
->left;

649 
to_ö£π
->
right
 = 
ñem
->right;

651 i‡(*
œ°
 =
ñem
)

652 *
œ°
 = 
to_ö£π
;

654 
ñem
 = 
to_ö£π
;

657 i‡(
ñem
->
up
 && 
	`cmp_timevÆ
(&ñem->
timeout
, &elem->up->timeout) < 0) {

658 
	`£nd_up
(
ñem
, 
t›
, 
œ°
);

660 
	`£nd_down
(
ñem
, 
t›
, 
œ°
);

663 
out
:

664 #ifde‡
MASSIVE_DEBUG


665 
	`Ârötf
(*
debug_out
, "remove_from_headÉxit\n");

666 
	`¥öt_åì
(*
t›
, *
œ°
);

667 
	`check_åì
(*
t›
, *
œ°
);

670 
	}
}

673 
	$£l_Æloc_timî
(
£À˘‹_t
 *
£l
,

674 
£l_timeout_h™dÀr_t
 
h™dÀr
,

675 *
u£r_d©a
,

676 
£l_timî_t
 **
√w_timî
)

678 
£l_timî_t
 *
timî
;

680 
timî
 = 
	`mÆloc
((*timer));

681 i‡(!
timî
)

682  
ENOMEM
;

684 
timî
->
h™dÀr
 = handler;

685 
timî
->
u£r_d©a
 = user_data;

686 
timî
->
ö_hóp
 = 0;

687 
timî
->
£l
 = sel;

688 *
√w_timî
 = 
timî
;

691 
	}
}

694 
	$£l_‰ì_timî
(
£l_timî_t
 *
timî
)

696 i‡(
timî
->
ö_hóp
) {

697 
	`£l_°›_timî
(
timî
);

699 
	`‰ì
(
timî
);

702 
	}
}

705 
	$£l_°¨t_timî
(
£l_timî_t
 *
timî
,

706 
timevÆ
 *
timeout
)

708 i‡(
timî
->
ö_hóp
)

709  
EBUSY
;

711 
timî
->
timeout
 = *timeout;

712 
	`add_to_hóp
(&(
timî
->
£l
->
timî_t›
), &—imî->£l->
timî_œ°
),Åimer);

713 
timî
->
ö_hóp
 = 1;

715 
	}
}

718 
	$£l_°›_timî
(
£l_timî_t
 *
timî
)

720 i‡(!
timî
->
ö_hóp
)

721  
ETIMEDOUT
;

723 
	`ªmove_‰om_hóp
(&(
timî
->
£l
->
timî_t›
),

724 &(
timî
->
£l
->
timî_œ°
),

725 
timî
);

726 
timî
->
ö_hóp
 = 0;

728 
	}
}

731 
	$£l_£À˘_⁄˚
(
£À˘‹_t
 *
£l
)

733 
fd_£t
 
tmp_ªad_£t
;

734 
fd_£t
 
tmp_wrôe_£t
;

735 
fd_£t
 
tmp_ex˚±_£t
;

736 
i
;

737 
îr
;

738 
£l_timî_t
 *
timî
;

739 
timevÆ
 
timeout
, *
to_time
;

741 i‡(
£l
->
timî_t›
) {

742 
timevÆ
 
now
;

745 
	`gëtimeofday
(&
now
, 
NULL
);

746 
timî
 = 
£l
->
timî_t›
;

747 
	`cmp_timevÆ
(&
now
, &
timî
->
timeout
) >= 0) {

748 
	`ªmove_‰om_hóp
(&(
£l
->
timî_t›
),

749 &(
£l
->
timî_œ°
),

750 
timî
);

752 
timî
->
ö_hóp
 = 0;

753 
timî
->
	`h™dÀr
(
£l
,Åimî,Åimî->
u£r_d©a
);

755 
timî
 = 
£l
->
timî_t›
;

756 
	`gëtimeofday
(&
now
, 
NULL
);

757 i‡(!
timî
)

758 
no_timîs
;

762 
	`diff_timevÆ
(&
timeout
, &
£l
->
timî_t›
->timeout, &
now
);

763 
to_time
 = &
timeout
;

765 
no_timîs
:

766 
to_time
 = 
NULL
;

768 
	`mem˝y
(&
tmp_ªad_£t
, &
£l
->
ªad_£t
, (tmp_read_set));

769 
	`mem˝y
(&
tmp_wrôe_£t
, &
£l
->
wrôe_£t
, (tmp_write_set));

770 
	`mem˝y
(&
tmp_ex˚±_£t
, &
£l
->
ex˚±_£t
, (tmp_except_set));

771 
îr
 = 
	`£À˘
(
£l
->
maxfd
+1,

772 &
tmp_ªad_£t
,

773 &
tmp_wrôe_£t
,

774 &
tmp_ex˚±_£t
,

775 
to_time
);

776 i‡(
îr
 == 0) {

778 } i‡(
îr
 < 0) {

780 i‡(
î∫o
 =
EINTR
) {

782 
timeout
.
tv_£c
 = 1;

783 
timeout
.
tv_u£c
 = 0;

786 
	`sy¶og
(
LOG_ERR
, "select_loop() - select: %m");

787 
	`exô
(1);

791 
i
=0; i<=
£l
->
maxfd
; i++) {

792 i‡(
	`FD_ISSET
(
i
, &
tmp_ªad_£t
)) {

793 i‡(
£l
->
fds
[
i
].
h™dÀ_ªad
 =
NULL
) {

796 
	`£l_£t_fd_ªad_h™dÀr
(
£l
, 
i
, 
SEL_FD_HANDLER_DISABLED
);

798 
£l
->
fds
[
i
].
	`h™dÀ_ªad
(i, sñ->fds[i].
d©a
);

801 i‡(
	`FD_ISSET
(
i
, &
tmp_wrôe_£t
)) {

802 i‡(
£l
->
fds
[
i
].
h™dÀ_wrôe
 =
NULL
) {

805 
	`£l_£t_fd_wrôe_h™dÀr
(
£l
, 
i
, 
SEL_FD_HANDLER_DISABLED
);

807 
£l
->
fds
[
i
].
	`h™dÀ_wrôe
(i, sñ->fds[i].
d©a
);

810 i‡(
	`FD_ISSET
(
i
, &
tmp_ex˚±_£t
)) {

811 i‡(
£l
->
fds
[
i
].
h™dÀ_ex˚±
 =
NULL
) {

814 
	`£l_£t_fd_ex˚±_h™dÀr
(
£l
, 
i
, 
SEL_FD_HANDLER_DISABLED
);

816 
£l
->
fds
[
i
].
	`h™dÀ_ex˚±
(i, sñ->fds[i].
d©a
);

822 i‡(
gŸ_sighup
) {

823 
gŸ_sighup
 = 0;

824 i‡(
u£r_sighup_h™dÀr
 !
NULL
) {

825 
	`u£r_sighup_h™dÀr
();

828 i‡(
gŸ_sigöt
) {

829 
gŸ_sigöt
 = 0;

830 i‡(
u£r_sigöt_h™dÀr
 !
NULL
) {

831 
	`u£r_sigöt_h™dÀr
();

834 
	}
}

840 
	$£l_£À˘_lo›
(
£À˘‹_t
 *
£l
)

843 
	`£l_£À˘_⁄˚
(
£l
);

844 
	}
}

848 
	$£l_Æloc_£À˘‹
(
£À˘‹_t
 **
√w_£À˘‹
)

850 
£À˘‹_t
 *
£l
;

851 
i
;

853 
£l
 = 
	`mÆloc
((*sel));

854 i‡(!
£l
)

855  
ENOMEM
;

857 
	`FD_ZERO
(&
£l
->
ªad_£t
);

858 
	`FD_ZERO
(&
£l
->
wrôe_£t
);

859 
	`FD_ZERO
(&
£l
->
ex˚±_£t
);

861 
i
=0; i<
FD_SETSIZE
; i++) {

862 
	`öô_fd
(&(
£l
->
fds
[
i
]));

865 
£l
->
maxfd
 = 0;

866 
£l
->
timî_t›
 = 
NULL
;

867 
£l
->
timî_œ°
 = 
NULL
;

869 *
√w_£À˘‹
 = 
£l
;

872 
	}
}

875 
	$‰ì_hóp_ñemít
(
£l_timî_t
 *
ñem
)

877 i‡(!
ñem
)

880 
	`‰ì_hóp_ñemít
(
ñem
->
À·
);

881 
	`‰ì_hóp_ñemít
(
ñem
->
right
);

882 
	`‰ì
(
ñem
);

883 
	}
}

886 
	$£l_‰ì_£À˘‹
(
£À˘‹_t
 *
£l
)

888 
£l_timî_t
 *
hóp
;

890 
hóp
 = 
£l
->
timî_t›
;

892 
	`‰ì
(
£l
);

893 
	`‰ì_hóp_ñemít
(
hóp
);

896 
	}
}

899 
	$£t_sig«l_h™dÀr
(
sig
, 
t_sig«l_h™dÀr
 
h™dÀr
)

901 i‡(
sig
 =
SIGHUP
)

902 
u£r_sighup_h™dÀr
 = 
h™dÀr
;

903 i‡(
sig
 =
SIGINT
)

904 
u£r_sigöt_h™dÀr
 = 
h™dÀr
;

905 
	}
}

908 
	$sighup_h™dÀr
(
sig
)

910 
gŸ_sighup
 = 1;

911 
	}
}

913 
	$sigöt_h™dÀr
(
sig
)

915 
gŸ_sigöt
 = 1;

916 
	}
}

919 
	$£tup_sig«ls
()

921 
siga˘i⁄
 
a˘
;

922 
îr
;

924 
a˘
.
ß_h™dÀr
 = 
sighup_h™dÀr
;

925 
	`sigem±y£t
(&
a˘
.
ß_mask
);

926 
a˘
.
ß_Êags
 = 
SA_RESTART
;

927 
îr
 = 
	`siga˘i⁄
(
SIGHUP
, &
a˘
, 
NULL
);

928 i‡(
îr
) {

929 
	`≥º‹
("sigaction");

932 
a˘
.
ß_h™dÀr
 = 
sigöt_h™dÀr
;

934 
a˘
.
ß_Êags
 |
SA_RESETHAND
;

935 
îr
 = 
	`siga˘i⁄
(
SIGINT
, &
a˘
, 
NULL
);

936 i‡(
îr
) {

937 
	`≥º‹
("sigaction");

939 
	}
}

	@selector.h

20 #i‚de‡
SELECTOR


21 
	#SELECTOR


	)

22 
	~<sys/time.h
>

25 
	g£À˘‹_s
;

26 
£À˘‹_s
 
	t£À˘‹_t
;

29 
£l_Æloc_£À˘‹
(
£À˘‹_t
 **
√w_£À˘‹
);

32 
£l_‰ì_£À˘‹
(
£À˘‹_t
 *
√w_£À˘‹
);

37 (*
	t£l_fd_h™dÀr_t
)(
	tfd
, *
	td©a
);

41 
	`£l_£t_fd_h™dÀrs
(
£À˘‹_t
 *
£l
,

42 
fd
,

43 *
d©a
,

44 
£l_fd_h™dÀr_t
 
ªad_h™dÀr
,

45 
£l_fd_h™dÀr_t
 
wrôe_h™dÀr
,

46 
£l_fd_h™dÀr_t
 
ex˚±_h™dÀr
);

50 
	`£l_˛ór_fd_h™dÀrs
(
£À˘‹_t
 *
£l
,

51 
fd
);

54 
	#SEL_FD_HANDLER_ENABLED
 0

	)

55 
	#SEL_FD_HANDLER_DISABLED
 1

	)

56 
	`£l_£t_fd_ªad_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
);

57 
	`£l_£t_fd_wrôe_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
);

58 
	`£l_£t_fd_ex˚±_h™dÀr
(
£À˘‹_t
 *
£l
, 
fd
, 
°©e
);

60 
£l_timî_s
;

61 
£l_timî_s
 
	t£l_timî_t
;

63 (*
	t£l_timeout_h™dÀr_t
)(
	t£À˘‹_t
 *
	t£l
,

64 
	t£l_timî_t
 *
	ttimî
,

65 *
	td©a
);

67 
	`£l_Æloc_timî
(
£À˘‹_t
 *
£l
,

68 
£l_timeout_h™dÀr_t
 
h™dÀr
,

69 *
u£r_d©a
,

70 
£l_timî_t
 **
√w_timî
);

72 
	`£l_‰ì_timî
(
£l_timî_t
 *
timî
);

74 
	`£l_°¨t_timî
(
£l_timî_t
 *
timî
,

75 
timevÆ
 *
timeout
);

77 
	`£l_°›_timî
(
£l_timî_t
 *
timî
);

80 (*
	tt_sig«l_h™dÀr
)();

81 
	`£t_sig«l_h™dÀr
(
sig
, 
t_sig«l_h™dÀr
 
h™dÀr
);

82 
	`£tup_sig«ls
();

85 
	`£l_£À˘_⁄˚
(
£À˘‹_t
 *
£l
);

88 
	`£l_£À˘_lo›
(
£À˘‹_t
 *
£l
);

	@ser2net.c

28 
	~<°dio.h
>

29 
	~<sig«l.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<sy¶og.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<uni°d.h
>

35 
	~<î∫o.h
>

37 
	~"£r2√t.h
"

38 
	~"ªadc⁄fig.h
"

39 
	~"c⁄åﬁÀr.h
"

40 
	~"utûs.h
"

41 
	~"£À˘‹.h
"

42 
	~"d©ax„r.h
"

44 *
	gc⁄fig_fûe
 = "/etc/ser2net.conf";

45 
	gc⁄fig_p‹t_‰om_cmdlöe
 = 0;

46 *
	gc⁄fig_p‹t
 = 
NULL
;

47 *
	gpid_fûe
 = 
NULL
;

48 
	gdëach
 = 1;

49 
	gdebug
 = 0;

50 #ifde‡
USE_UUCP_LOCKING


51 
	guu˝_lockög_íabÀd
 = 1;

54 
£À˘‹_t
 *
	g£r2√t_£l
;

55 *
	grfc2217_sig«tuª
 = "ser2net";

57 *
	ghñp_°rög
 =

69 #ifde‡
USE_UUCP_LOCKING


77 
	$ªªad_c⁄fig
()

79 i‡(
c⁄fig_fûe
) {

80 *
¥ev_c⁄fig_p‹t
 = 
c⁄fig_p‹t
;

81 
c⁄fig_p‹t
 = 
NULL
;

82 
	`sy¶og
(
LOG_INFO
, "Got SIGHUP,Ñe-reading configuration");

83 
	`ªadc⁄fig
(
c⁄fig_fûe
);

84 i‡(
c⁄fig_p‹t_‰om_cmdlöe
) {

86 
	`‰ì
(
c⁄fig_p‹t
);

87 
c⁄fig_p‹t
 = 
¥ev_c⁄fig_p‹t
;

88 
c⁄fig_p‹t_unch™ged
;

90 i‡(
c⁄fig_p‹t
 && 
¥ev_c⁄fig_p‹t


91 && (
	`°rcmp
(
c⁄fig_p‹t
, 
¥ev_c⁄fig_p‹t
) == 0)) {

92 
	`‰ì
(
¥ev_c⁄fig_p‹t
);

93 
c⁄fig_p‹t_unch™ged
;

96 i‡(
¥ev_c⁄fig_p‹t
) {

97 
	`c⁄åﬁÀr_shutdown
();

98 
	`‰ì
(
¥ev_c⁄fig_p‹t
);

101 i‡(
c⁄fig_p‹t
) {

102 
rv
 = 
	`c⁄åﬁÀr_öô
(
c⁄fig_p‹t
);

103 i‡(
rv
 =
CONTROLLER_INVALID_TCP_SPEC
)

104 
	`sy¶og
(
LOG_ERR
, "Invalid controlÖort specified: %s",

105 
c⁄fig_p‹t
);

106 i‡(
rv
 =
CONTROLLER_OUT_OF_MEMORY
)

107 
	`sy¶og
(
LOG_ERR
, "Out of memory opening controlÖort: %s",

108 
c⁄fig_p‹t
);

109 i‡(
rv
 =
CONTROLLER_CANT_OPEN_PORT
)

110 
	`sy¶og
(
LOG_ERR
, "Can't open controlÖort: %s",

111 
c⁄fig_p‹t
);

112 i‡(
rv
) {

113 
	`sy¶og
(
LOG_ERR
, "ControlÖort is disabled");

114 
	`‰ì
(
c⁄fig_p‹t
);

115 
c⁄fig_p‹t
 = 
NULL
;

119 
c⁄fig_p‹t_unch™ged
:

121 
	}
}

124 
	$¨g_îr‹
(*
«me
)

126 
	`Ârötf
(
°dîr
, 
hñp_°rög
, 
«me
);

127 
	`exô
(1);

128 
	}
}

131 
	$make_pidfûe
(*
pidfûe
)

133 
FILE
 *
Âidfûe
;

134 i‡(!
pidfûe
)

136 
Âidfûe
 = 
	`f›í
(
pidfûe
, "w");

137 i‡(!
Âidfûe
) {

138 
	`sy¶og
(
LOG_WARNING
,

140 
pidfûe
);

143 
	`Ârötf
(
Âidfûe
, "%d\n", 
	`gëpid
());

144 
	`f˛o£
(
Âidfûe
);

145 
	}
}

148 
	$shutdown_˛ó∆y
()

150 
	`shutdown_p‹ts
();

152 i‡(
	`check_p‹ts_shutdown
())

153 
	`exô
(1);

154 
	`£l_£À˘_⁄˚
(
£r2√t_£l
);

156 
	}
}

159 
	$maö
(
¨gc
, *
¨gv
[])

161 
i
;

162 
îr
;

164 
îr
 = 
	`£l_Æloc_£À˘‹
(&
£r2√t_£l
);

165 i‡(
îr
) {

166 
	`Ârötf
(
°dîr
,

168 
	`°ªº‹
(
îr
));

172 
i
=1; i<
¨gc
; i++) {

173 i‡((
¨gv
[
i
][0] !'-'Ë|| (
	`°æí
(argv[i]) != 2)) {

174 
	`Ârötf
(
°dîr
, "InvÆidárgumít: '%s'\n", 
¨gv
[
i
]);

175 
	`¨g_îr‹
(
¨gv
[0]);

178 
¨gv
[
i
][1]) {

180 
dëach
 = 0;

184 
dëach
 = 0;

185 
debug
 = 1;

193 
i
++;

194 i‡(
i
 =
¨gc
) {

195 
	`Ârötf
(
°dîr
, "No configÜine specified with -C\n");

196 
	`¨g_îr‹
(
¨gv
[0]);

198 
	`h™dÀ_c⁄fig_löe
(
¨gv
[
i
]);

199 
c⁄fig_fûe
 = 
NULL
;

204 
i
++;

205 i‡(
i
 =
¨gc
) {

206 
	`Ârötf
(
°dîr
, "No config file specified with -c\n");

207 
	`¨g_îr‹
(
¨gv
[0]);

209 
c⁄fig_fûe
 = 
¨gv
[
i
];

214 
i
++;

215 i‡(
i
 =
¨gc
) {

216 
	`Ârötf
(
°dîr
, "No controlÖort specified with -p\n");

217 
	`¨g_îr‹
(
¨gv
[0]);

219 
c⁄fig_p‹t
 = 
	`°rdup
(
¨gv
[
i
]);

220 i‡(!
c⁄fig_p‹t
) {

221 
	`Ârötf
(
°dîr
, "CouldÇotállocate memory for -p\n");

222 
	`exô
(1);

224 
c⁄fig_p‹t_‰om_cmdlöe
 = 1;

228 
i
++;

229 i‡(
i
 =
¨gc
) {

230 
	`Ârötf
(
°dîr
, "NoÖid file specified with -P\n");

231 
	`¨g_îr‹
(
¨gv
[0]);

233 
pid_fûe
 = 
¨gv
[
i
];

236 #ifde‡
USE_UUCP_LOCKING


238 
uu˝_lockög_íabÀd
 = 0;

243 
	`¥ötf
("%†vîsi⁄ %s\n", 
¨gv
[0], 
VERSION
);

244 
	`exô
(0);

247 
i
++;

248 i‡(
i
 =
¨gc
) {

249 
	`Ârötf
(
°dîr
, "No signature specified\n");

250 
	`exô
(1);

252 
rfc2217_sig«tuª
 = 
¨gv
[
i
];

256 
	`Ârötf
(
°dîr
, "InvÆid o±i⁄: '%s'\n", 
¨gv
[
i
]);

257 
	`¨g_îr‹
(
¨gv
[0]);

261 
	`£tup_sig«ls
();

263 i‡(
debug
 && !
dëach
)

264 
	`›ílog
("£r2√t", 
LOG_PID
 | 
LOG_CONS
 | 
LOG_PERROR
, 
LOG_DAEMON
);

266 i‡(
c⁄fig_fûe
) {

267 i‡(
	`ªadc⁄fig
(
c⁄fig_fûe
) == -1) {

272 i‡(
c⁄fig_p‹t
 !
NULL
) {

273 
rv
;

274 
rv
 = 
	`c⁄åﬁÀr_öô
(
c⁄fig_p‹t
);

275 i‡(
rv
 =
CONTROLLER_INVALID_TCP_SPEC
) {

276 
	`Ârötf
(
°dîr
, "Invalid controlÖort specified: %s\n",

277 
c⁄fig_p‹t
);

278 
	`¨g_îr‹
(
¨gv
[0]);

280 i‡(
rv
 =
CONTROLLER_CANT_OPEN_PORT
) {

281 
	`Ârötf
(
°dîr
, "UnableÅo open controlÖort, see syslog: %s\n",

282 
c⁄fig_p‹t
);

283 
	`exô
(1);

287 i‡(
dëach
) {

288 
pid
;

291 
	`›ílog
("£r2√t", 
LOG_PID
 | 
LOG_CONS
, 
LOG_DAEMON
);

292 
	`sy¶og
(
LOG_NOTICE
, "ser2net startup");

293 i‡((
pid
 = 
	`f‹k
()) > 0) {

294 
	`exô
(0);

295 } i‡(
pid
 < 0) {

296 
	`sy¶og
(
LOG_ERR
, "Eº‹ f‹kög fú° f‹k: %s", 
	`°ªº‹
(
î∫o
));

297 
	`exô
(1);

300 
	`£tsid
();

302 i‡((
pid
 = 
	`f‹k
()) > 0) {

303 
	`exô
(0);

304 } i‡(
pid
 < 0) {

305 
	`sy¶og
(
LOG_ERR
, "Error forking second fork: %s",

306 
	`°ªº‹
(
î∫o
));

307 
	`exô
(1);

312 i‡(
	`chdú
("/") < 0) {

313 
	`sy¶og
(
LOG_ERR
, "u«bÀÅÿchdúÅÿ'/': %s", 
	`°ªº‹
(
î∫o
));

314 
	`exô
(1);

316 
	`˛o£
(0);

317 
	`˛o£
(1);

318 
	`˛o£
(2);

322 
	`make_pidfûe
(
pid_fûe
);

325 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

327 
	`£t_sig«l_h™dÀr
(
SIGHUP
, 
ªªad_c⁄fig
);

328 
	`£t_sig«l_h™dÀr
(
SIGINT
, 
shutdown_˛ó∆y
);

330 
	`£l_£À˘_lo›
(
£r2√t_£l
);

333 
	}
}

	@ser2net.h

20 #i‚de‡
SER2NET_H


21 
	#SER2NET_H


	)

23 
	~"£À˘‹.h
"

26 *
rfc2217_sig«tuª
;

28 
£À˘‹_t
 *
£r2√t_£l
;

	@telnet.c

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	~"ã ë.h
"

7 
ã ë_cmd
 *

8 
	$föd_cmd
(
ã ë_cmd
 *
¨øy
, 
›ti⁄
)

10 
i
;

12 
i
=0; 
¨øy
[i].
›ti⁄
 != 255; i++) {

13 i‡(
¨øy
[
i
].
›ti⁄
 == option)

14  &
¨øy
[
i
];

16  
NULL
;

17 
	}
}

20 
	$ã ë_cmd_£nd
(
ã ë_d©a_t
 *
td
, *
cmd
, 
Àn
)

22 i‡(
	`buf„r_ouçut
(&
td
->
out_ã ë_cmd
, 
cmd
, 
Àn
) == -1) {

25 
td
->
îr‹
 = 1;

29 
td
->
	`ouçut_ªady
—d->
cb_d©a
);

30 
	}
}

33 
	$£nd_i
(
ã ë_d©a_t
 *
td
, 
ty≥
, 
›ti⁄
)

35 
i
[3];

36 
i
[0] = 
TN_IAC
;

37 
i
[1] = 
ty≥
;

38 
i
[2] = 
›ti⁄
;

39 
	`ã ë_cmd_£nd
(
td
, 
i
, 3);

40 
	}
}

43 
	$h™dÀ_ã ë_cmd
(
ã ë_d©a_t
 *
td
)

45 
size
 = 
td
->
ã ë_cmd_pos
;

46 *
cmd_°r
 = 
td
->
ã ë_cmd
;

47 
ã ë_cmd
 *
cmd
;

48 
rv
;

50 i‡(
size
 < 2)

53 i‡(
cmd_°r
[1] < 250) {

54 
td
->
	`cmd_h™dÀr
—d->
cb_d©a
, 
cmd_°r
[1]);

55 } i‡(
cmd_°r
[1] == 250) {

56 
cmd
 = 
	`föd_cmd
(
td
->
cmds
, 
cmd_°r
[2]);

57 i‡(!
cmd
)

59 
cmd
->
	`›ti⁄_h™dÀr
(
td
->
cb_d©a
, 
cmd_°r
+2, 
size
-2);

60 } i‡(
cmd_°r
[1] == 251) {

61 
›ti⁄
 = 
cmd_°r
[2];

62 
cmd
 = 
	`föd_cmd
(
td
->
cmds
, 
›ti⁄
);

63 i‡(!
cmd
 || !cmd->
£¡_do
) {

64 i‡((!
cmd
Ë|| (!cmd->
i_wûl
))

65 
	`£nd_i
(
td
, 
TN_DONT
, 
›ti⁄
);

67 
rv
 = 1;

68 i‡(
cmd
->
wûl_h™dÀr
)

69 
rv
 = 
cmd
->
	`wûl_h™dÀr
(
td
->
cb_d©a
);

70 i‡(
rv
)

71 
	`£nd_i
(
td
, 
TN_DO
, 
›ti⁄
);

73 
	`£nd_i
(
td
, 
TN_DONT
, 
›ti⁄
);

75 } i‡(
cmd
)

76 
cmd
->
£¡_do
 = 0;

77 i‡(
cmd
) {

78 
cmd
->
ªm_wûl
 = 1;

80 } i‡(
cmd_°r
[1] == 252) {

81 
›ti⁄
 = 
cmd_°r
[2];

82 
cmd
 = 
	`föd_cmd
(
td
->
cmds
, 
›ti⁄
);

83 i‡(!
cmd
 || !cmd->
£¡_do
)

84 
	`£nd_i
(
td
, 
TN_DONT
, 
›ti⁄
);

85 i‡(
cmd
)

86 
cmd
->
£¡_do
 = 0;

87 i‡(
cmd
)

88 
cmd
->
ªm_wûl
 = 0;

89 } i‡(
cmd_°r
[1] == 253) {

90 
›ti⁄
 = 
cmd_°r
[2];

91 
cmd
 = 
	`föd_cmd
(
td
->
cmds
, 
›ti⁄
);

92 i‡(!
cmd
 || !cmd->
£¡_wûl
) {

93 i‡((!
cmd
Ë|| (! cmd->
i_do
))

94 
	`£nd_i
(
td
, 
TN_WONT
, 
›ti⁄
);

96 
	`£nd_i
(
td
, 
TN_WILL
, 
›ti⁄
);

97 } i‡(
cmd
)

98 
cmd
->
£¡_wûl
 = 0;

99 i‡(
cmd
)

100 
cmd
->
ªm_do
 = 1;

101 } i‡(
cmd_°r
[1] == 254) {

102 
›ti⁄
 = 
cmd_°r
[2];

103 
cmd
 = 
	`föd_cmd
(
td
->
cmds
, 
›ti⁄
);

104 i‡(!
cmd
 || !cmd->
£¡_wûl
)

105 
	`£nd_i
(
td
, 
TN_WONT
, 
›ti⁄
);

106 i‡(
cmd
)

107 
cmd
->
£¡_wûl
 = 0;

108 i‡(
cmd
)

109 
cmd
->
ªm_do
 = 0;

111 
	}
}

114 
	$ã ë_£nd_›ti⁄
(
ã ë_d©a_t
 *
td
, *
›ti⁄
, 
Àn
)

116 
ªÆ_Àn
;

117 
i
;

120 
ªÆ_Àn
=0, 
i
=0; i<
Àn
; i++,Ñeal_len++) {

121 i‡(
›ti⁄
[
i
] == 255)

122 
ªÆ_Àn
++;

125 
ªÆ_Àn
 += 4;

127 i‡(
ªÆ_Àn
 > 
	`buf„r_À·
(&
td
->
out_ã ë_cmd
)) {

130 
td
->
îr‹
 = 1;

134 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 255);

135 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 250);

136 
i
=0; i<
Àn
; i++) {

137 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 
›ti⁄
[
i
]);

138 i‡(
›ti⁄
[
i
] == 255)

139 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 
›ti⁄
[
i
]);

141 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 255);

142 
	`buf„r_outch¨
(&
td
->
out_ã ë_cmd
, 240);

144 
td
->
	`ouçut_ªady
—d->
cb_d©a
);

145 
	}
}

148 
	$dñëe_ch¨
(*
d©a
, 
pos
, 
Àn
)

150 
i
;

152 
i
=
pos
; i<
Àn
-1; i++) {

153 
d©a
[
i
] = data[i+1];

155  
Àn
-1;

156 
	}
}

159 
	$¥o˚ss_ã ë_d©a
(*
d©a
, 
Àn
, 
ã ë_d©a_t
 *
td
)

161 
i
;

164 
i
=0; i<
Àn
;) {

165 i‡(
td
->
ã ë_cmd_pos
 != 0) {

166 
ä_byã
;

168 
ä_byã
 = 
d©a
[
i
];

170 i‡((
td
->
ã ë_cmd_pos
 =1Ë&& (
ä_byã
 == 255)) {

173 
i
++;

174 
td
->
ã ë_cmd_pos
 = 0;

178 
Àn
 = 
	`dñëe_ch¨
(
d©a
, 
i
,Üen);

180 i‡(
td
->
ã ë_cmd_pos
 == 1) {

183 
td
->
ã ë_cmd
[td->
ã ë_cmd_pos
] = 
ä_byã
;

184 
td
->
ã ë_cmd_pos
++;

185 i‡(
ä_byã
 < 250) {

186 
	`h™dÀ_ã ë_cmd
(
td
);

187 
td
->
ã ë_cmd_pos
 = 0;

189 } i‡(
td
->
ã ë_cmd_pos
 == 2) {

190 
td
->
ã ë_cmd
[td->
ã ë_cmd_pos
] = 
ä_byã
;

191 
td
->
ã ë_cmd_pos
++;

192 i‡(
td
->
ã ë_cmd
[1] != 250) {

194 
	`h™dÀ_ã ë_cmd
(
td
);

195 
td
->
ã ë_cmd_pos
 = 0;

199 i‡(
td
->
sub›ti⁄_üc
) {

200 i‡(
ä_byã
 == 240) {

202 
td
->
ã ë_cmd_pos
--;

203 
	`h™dÀ_ã ë_cmd
(
td
);

204 
td
->
ã ë_cmd_pos
 = 0;

205 } i‡(
ä_byã
 == 255) {

211 
td
->
ã ë_cmd_pos
--;

213 
td
->
sub›ti⁄_üc
 = 0;

215 i‡(
td
->
ã ë_cmd_pos
 > 
MAX_TELNET_CMD_SIZE
)

221 
td
->
ã ë_cmd_pos
 = 
MAX_TELNET_CMD_SIZE
;

223 
td
->
ã ë_cmd
[td->
ã ë_cmd_pos
] = 
ä_byã
;

224 
td
->
ã ë_cmd_pos
++;

225 i‡(
ä_byã
 == 255)

226 
td
->
sub›ti⁄_üc
 = 1;

229 } i‡(
d©a
[
i
] == 255) {

230 
td
->
ã ë_cmd
[td->
ã ë_cmd_pos
] = 255;

231 
Àn
 = 
	`dñëe_ch¨
(
d©a
, 
i
,Üen);

232 
td
->
ã ë_cmd_pos
++;

233 
td
->
sub›ti⁄_üc
 = 0;

235 
i
++;

239  
Àn
;

240 
	}
}

243 
ã ë_öô
(
ã ë_d©a_t
 *
td
,

244 *
cb_d©a
,

245 (*
ouçut_ªady
)(*
cb_d©a
),

246 (*
cmd_h™dÀr
)(*
cb_d©a
, 
cmd
),

247 
ã ë_cmd
 *
cmds
,

248 *
öô_£q
,

249 
öô_£q_Àn
)

251 
td
->
ã ë_cmd_pos
 = 0;

252 
	`buf„r_öô
(&
td
->
out_ã ë_cmd
,Åd->
out_ã ë_cmdbuf
,

253 (
td
->
out_ã ë_cmdbuf
));

254 
td
->
îr‹
 = 0;

255 
td
->
cb_d©a
 = cb_data;

256 
td
->
ouçut_ªady
 = output_ready;

257 
td
->
cmd_h™dÀr
 = cmd_handler;

258 
td
->
cmds
 = cmds;

260 
	`ã ë_cmd_£nd
(
td
, 
öô_£q
, 
öô_£q_Àn
);

261 
	}
}

	@telnet.h

2 #i‚de‡
_SER2NET_TELNET_H


3 
	#_SER2NET_TELNET_H


	)

5 
	~"buf„r.h
"

8 
	#TN_BREAK
 243

	)

9 
	#TN_WILL
 251

	)

10 
	#TN_WONT
 252

	)

11 
	#TN_DO
 253

	)

12 
	#TN_DONT
 254

	)

13 
	#TN_IAC
 255

	)

15 
	#TN_OPT_BINARY_TRANSMISSION
 0

	)

16 
	#TN_OPT_ECHO
 1

	)

17 
	#TN_OPT_SUPPRESS_GO_AHEAD
 3

	)

18 
	#TN_OPT_COM_PORT
 44

	)

20 
ã ë_d©a_s
 
	tã ë_d©a_t
;

22 
	sã ë_cmd


24 
	m›ti⁄
;

25 
	mi_wûl
 : 1;

26 
	mi_do
 : 1;

27 
	m£¡_wûl
 : 1;

28 
	m£¡_do
 : 1;

29 
	mªm_wûl
 : 1;

30 
	mªm_do
 : 1;

34 (*
	m›ti⁄_h™dÀr
)(*
	mcb_d©a
, *
	m›ti⁄
, 
	mÀn
);

40 (*
	mwûl_h™dÀr
)(*
	mcb_d©a
);

43 
	#MAX_TELNET_CMD_SIZE
 31

	)

45 
	#MAX_TELNET_CMD_XMIT_BUF
 256

	)

47 
	sã ë_d©a_s


52 
	mã ë_cmd
[
MAX_TELNET_CMD_SIZE
+1];

53 
	mã ë_cmd_pos
;

57 
	msub›ti⁄_üc
;

64 
sbuf
 
	mout_ã ë_cmd
;

65 
	mout_ã ë_cmdbuf
[
MAX_TELNET_CMD_XMIT_BUF
];

70 
	mîr‹
;

72 *
	mcb_d©a
;

73 (*
	mouçut_ªady
)(*
	mcb_d©a
);

74 (*
	mcmd_h™dÀr
)(*
	mcb_d©a
, 
	mcmd
);

78 
ã ë_cmd
 *
	mcmds
;

83 
ã ë_cmd_£nd
(
ã ë_d©a_t
 *
td
, *
cmd
, 
Àn
);

89 
¥o˚ss_ã ë_d©a
(*
d©a
, 
Àn
, 
ã ë_d©a_t
 *
td
);

94 
ã ë_£nd_›ti⁄
(
ã ë_d©a_t
 *
td
, *
›ti⁄
, 
Àn
);

97 
ã ë_öô
(
ã ë_d©a_t
 *
td
,

98 *
cb_d©a
,

99 (*
ouçut_ªady
)(*
cb_d©a
),

100 (*
cmd_h™dÀr
)(*
cb_d©a
, 
cmd
),

101 
ã ë_cmd
 *
cmds
,

102 *
öô_£q
,

103 
öô_£q_Àn
);

	@utils.c

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<¨∑/öë.h
>

25 
	~<î∫o.h
>

26 
	~<uni°d.h
>

27 
	~<f˙é.h
>

29 
	~"£r2√t.h
"

30 
	~"utûs.h
"

31 
	~"£À˘‹.h
"

36 
	$sˇn_öt
(*
°r
)

38 
rv
 = 0;

40 i‡(*
°r
 == '\0') {

45 *
°r
) {

48 
rv
 = (rv * 10Ë+ ((*
°r
) - '0');

52  
rv
;

58 
°r
++;

61  
rv
;

62 
	}
}

69 
	$sˇn_t˝_p‹t
(*
°r
, 
addröfo
 **
øi
)

71 *
°πok_d©a
, *
°πok_buf„r
;

72 *
ù
;

73 *
p‹t
;

74 
addröfo
 
höts
, *
ai
;

76 
°πok_buf„r
 = 
	`°rdup
(
°r
);

77 i‡(!
°πok_buf„r
)

78  
ENOMEM
;

80 
ù
 = 
	`°πok_r
(
°πok_buf„r
, ",", &
°πok_d©a
);

81 
p‹t
 = 
	`°πok_r
(
NULL
, "", &
°πok_d©a
);

82 i‡(
p‹t
 =
NULL
) {

83 
p‹t
 = 
ù
;

84 
ù
 = 
NULL
;

87 
	`mem£t
(&
höts
, 0, (hints));

88 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

89 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

90 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

91 i‡(
	`gëaddröfo
(
ù
, 
p‹t
, &
höts
, &
ai
)) {

92 
	`‰ì
(
°πok_buf„r
);

93  
EINVAL
;

96 
	`‰ì
(
°πok_buf„r
);

97 i‡(*
øi
)

98 
	`‰ìaddröfo
(*
øi
);

99 *
øi
 = 
ai
;

101 
	}
}

104 
	$check_ùv6_⁄ly
(
Ámûy
, 
sockaddr
 *
addr
, 
fd
)

106 i‡((
Ámûy
 =
AF_INET6
)

107 && 
	`IN6_IS_ADDR_UNSPECIFIED
(&(((
sockaddr_ö6
 *Ë
addr
)->
sö6_addr
)))

109 
nuŒ
 = 0;

111 
	`£tsock›t
(
fd
, 
IPPROTO_IPV6
, 
IPV6_V6ONLY
, &
nuŒ
, (null));

113 
	}
}

116 
›í_sockë
(
addröfo
 *
ai
, (*
ªadhndÃ
)(, *), *
d©a
,

117 *
ƒ_fds
)

119 
addröfo
 *
Ω
;

120 
›tvÆ
 = 1;

121 
Ámûy
 = 
AF_INET6
;

122 *
fds
;

123 
cuº_fd
 = 0;

124 
max_fds
 = 0;

126 
Ω
 = 
ai
;Ñ∞!
NULL
;Ñ∞Ω->
ai_√xt
)

127 
max_fds
++;

129 
fds
 = 
	`mÆloc
((Ë* 
max_fds
);

130 i‡(!
fds
)

131  
NULL
;

133 
ª°¨t
:

134 
Ω
 = 
ai
;Ñ∞!
NULL
;Ñ∞Ω->
ai_√xt
) {

135 i‡(
Ámûy
 !
Ω
->
ai_Ámûy
)

138 
fds
[
cuº_fd
] = 
	`sockë
(
Ω
->
ai_Ámûy
,Ñp->
ai_sockty≥
,Ñp->
ai_¥Ÿocﬁ
);

139 i‡(
fds
[
cuº_fd
] == -1)

142 i‡(
	`f˙é
(
fds
[
cuº_fd
], 
F_SETFL
, 
O_NONBLOCK
) == -1)

143 
√xt
;

145 i‡(
	`£tsock›t
(
fds
[
cuº_fd
], 
SOL_SOCKET
, 
SO_REUSEADDR
,

146 (*)&
›tvÆ
, (optval)) == -1)

147 
√xt
;

149 
	`check_ùv6_⁄ly
(
Ω
->
ai_Ámûy
,Ñp->
ai_addr
, 
fds
[
cuº_fd
]);

151 i‡(
	`böd
(
fds
[
cuº_fd
], 
Ω
->
ai_addr
,Ñp->
ai_addæí
) != 0)

152 
√xt
;

154 i‡(
	`li°í
(
fds
[
cuº_fd
], 1) != 0)

155 
√xt
;

157 
	`£l_£t_fd_h™dÀrs
(
£r2√t_£l
, 
fds
[
cuº_fd
], 
d©a
,

158 
ªadhndÃ
, 
NULL
, NULL);

159 
	`£l_£t_fd_ªad_h™dÀr
(
£r2√t_£l
, 
fds
[
cuº_fd
],

160 
SEL_FD_HANDLER_ENABLED
);

161 
cuº_fd
++;

164 
√xt
:

165 
	`˛o£
(
fds
[
cuº_fd
]);

167 i‡(
Ámûy
 =
AF_INET6
) {

168 
Ámûy
 = 
AF_INET
;

169 
ª°¨t
;

172 i‡(
cuº_fd
 == 0) {

173 
	`‰ì
(
fds
);

174 
fds
 = 
NULL
;

176 *
ƒ_fds
 = 
cuº_fd
;

177  
fds
;

178 
	}
}

181 
	$wrôe_fuŒ
(
fd
, *
d©a
, 
size_t
 
cou¡
)

183 
ssize_t
 
wrôãn
;

185 
ª°¨t
:

186 (
wrôãn
 = 
	`wrôe
(
fd
, 
d©a
, 
cou¡
)) > 0) {

187 
d©a
 +
wrôãn
;

188 
cou¡
 -
wrôãn
;

190 i‡(
wrôãn
 < 0) {

191 i‡(
î∫o
 =
EAGAIN
)

192 
ª°¨t
;

196 
	}
}

199 
	$wrôe_ign‹e_Áû
(
fd
, c⁄° *
d©a
, 
size_t
 
cou¡
)

201 
ssize_t
 
wrôãn
;

203 (
wrôãn
 = 
	`wrôe
(
fd
, 
d©a
, 
cou¡
)) > 0) {

204 
d©a
 +
wrôãn
;

205 
cou¡
 -
wrôãn
;

207 
	}
}

	@utils.h

20 #i‚de‡
UTILS


21 
	#UTILS


	)

23 
	~<√töë/ö.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/sockë.h
>

26 
	~<√tdb.h
>

30 
sˇn_öt
(*
°r
);

36 
sˇn_t˝_p‹t
(*
°r
, 
addröfo
 **
ai
);

48 *
›í_sockë
(
addröfo
 *
ai
, (*
ªadhndÃ
)(, *),

49 *
d©a
, *
ƒ_fds
);

55 
	e°r_ty≥
 { 
BANNER
, 
OPENSTR
, 
CLOSESTR
, 
SIGNATURE
 };

56 *
	`föd_°r
(c⁄° *
«me
, 
°r_ty≥
 *
ty≥
);

62 *
	`föd_åa˚fûe
(c⁄° *
«me
);

65 
£rül_rs485
 *
	`föd_rs485c⁄f
(c⁄° *
«me
);

67 
	`check_ùv6_⁄ly
(
Ámûy
, 
sockaddr
 *
addr
, 
fd
);

70 
	`wrôe_fuŒ
(
fd
, *
d©a
, 
size_t
 
cou¡
);

73 
	`wrôe_ign‹e_Áû
(
fd
, c⁄° *
d©a
, 
size_t
 
cou¡
);

	@
1
.
0
18
185
buffer.c
buffer.h
controller.c
controller.h
dataxfer.c
dataxfer.h
devcfg.c
devio.h
readconfig.c
readconfig.h
selector.c
selector.h
ser2net.c
ser2net.h
telnet.c
telnet.h
utils.c
utils.h
